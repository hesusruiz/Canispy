{"version":3,"file":"verifications.3e2b6b33.js","sources":["../../node_modules/pako/dist/pako.esm.mjs","../../node_modules/reflect-metadata/Reflect.js","../../node_modules/pvutils/src/utils.js","../../node_modules/asn1js/src/asn1.js","../../node_modules/@peculiar/asn1-schema/build/es2015/enums.js","../../node_modules/@peculiar/asn1-schema/build/es2015/converters.js","../../node_modules/pvtsutils/build/index.es.js","../../node_modules/@peculiar/asn1-schema/build/es2015/types/bit_string.js","../../node_modules/@peculiar/asn1-schema/build/es2015/types/octet_string.js","../../node_modules/@peculiar/asn1-schema/build/es2015/helper.js","../../node_modules/@peculiar/asn1-schema/build/es2015/schema.js","../../node_modules/@peculiar/asn1-schema/build/es2015/storage.js","../../node_modules/@peculiar/asn1-schema/build/es2015/decorators.js","../../node_modules/@peculiar/asn1-schema/build/es2015/errors/schema_validation.js","../../node_modules/@peculiar/asn1-schema/build/es2015/parser.js","../../node_modules/@peculiar/asn1-schema/build/es2015/serializer.js","../../node_modules/@peculiar/asn1-schema/build/es2015/objects.js","../../node_modules/@peculiar/asn1-schema/build/es2015/convert.js","../../node_modules/@peculiar/asn1-x509/node_modules/tslib/tslib.es6.js","../../node_modules/ipaddr.js/lib/ipaddr.js","../../node_modules/@peculiar/asn1-x509/build/es2015/ip_converter.js","../../node_modules/@peculiar/asn1-x509/build/es2015/name.js","../../node_modules/@peculiar/asn1-x509/build/es2015/general_name.js","../../node_modules/@peculiar/asn1-x509/build/es2015/object_identifiers.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_information_access.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/authority_key_identifier.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/basic_constraints.js","../../node_modules/@peculiar/asn1-x509/build/es2015/general_names.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_issuer.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/certificate_policies.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_number.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_delta_indicator.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_distribution_points.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_freshest.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_issuing_distribution_point.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/crl_reason.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/extended_key_usage.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/inhibit_any_policy.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/invalidity_date.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/issuer_alternative_name.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/key_usage.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/name_constraints.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_constraints.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/policy_mappings.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_alternative_name.js","../../node_modules/@peculiar/asn1-x509/build/es2015/attribute.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_directory_attributes.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/subject_key_identifier.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/private_key_usage_period.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extensions/entrust_version_info.js","../../node_modules/@peculiar/asn1-x509/build/es2015/algorithm_identifier.js","../../node_modules/@peculiar/asn1-x509/build/es2015/subject_public_key_info.js","../../node_modules/@peculiar/asn1-x509/build/es2015/time.js","../../node_modules/@peculiar/asn1-x509/build/es2015/validity.js","../../node_modules/@peculiar/asn1-x509/build/es2015/extension.js","../../node_modules/@peculiar/asn1-x509/build/es2015/types.js","../../node_modules/@peculiar/asn1-x509/build/es2015/tbs_certificate.js","../../node_modules/@peculiar/asn1-x509/build/es2015/certificate.js","../../node_modules/@peculiar/asn1-x509/build/es2015/tbs_cert_list.js","../../node_modules/@peculiar/asn1-x509/build/es2015/certificate_list.js","../../node_modules/@peculiar/asn1-rsa/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/object_identifiers.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/algorithms.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsaes_oaep.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pss.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/parameters/rsassa_pkcs1_v1_5.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/other_prime_info.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/rsa_private_key.js","../../node_modules/@peculiar/asn1-rsa/build/es2015/rsa_public_key.js","../../node_modules/tsyringe/dist/esm5/types/lifecycle.js","../../node_modules/tslib/tslib.es6.js","../../node_modules/tsyringe/dist/esm5/reflection-helpers.js","../../node_modules/tsyringe/dist/esm5/providers/class-provider.js","../../node_modules/tsyringe/dist/esm5/providers/factory-provider.js","../../node_modules/tsyringe/dist/esm5/lazy-helpers.js","../../node_modules/tsyringe/dist/esm5/providers/injection-token.js","../../node_modules/tsyringe/dist/esm5/providers/token-provider.js","../../node_modules/tsyringe/dist/esm5/providers/value-provider.js","../../node_modules/tsyringe/dist/esm5/providers/provider.js","../../node_modules/tsyringe/dist/esm5/registry-base.js","../../node_modules/tsyringe/dist/esm5/registry.js","../../node_modules/tsyringe/dist/esm5/resolution-context.js","../../node_modules/tsyringe/dist/esm5/error-helpers.js","../../node_modules/tsyringe/dist/esm5/interceptors.js","../../node_modules/tsyringe/dist/esm5/dependency-container.js","../../node_modules/tsyringe/dist/esm5/decorators/injectable.js","../../node_modules/tsyringe/dist/esm5/index.js","../../node_modules/@peculiar/asn1-pkcs9/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-cms/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-cms/build/es2015/attribute.js","../../node_modules/@peculiar/asn1-x509-attr/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/aa_clear_attrs.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_spec.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/aa_controls.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/issuer_serial.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/object_digest_info.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/v2_form.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_cert_issuer.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attr_cert_validity_period.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/holder.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attribute_certificate_info.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/attribute_certificate.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/class_list.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/security_category.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/clearance.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/ietf_attr_syntax.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/target.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/proxy_info.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/role_syntax.js","../../node_modules/@peculiar/asn1-x509-attr/build/es2015/svce_auth_info.js","../../node_modules/@peculiar/asn1-cms/build/es2015/certificate_choices.js","../../node_modules/@peculiar/asn1-cms/build/es2015/content_info.js","../../node_modules/@peculiar/asn1-cms/build/es2015/encapsulated_content_info.js","../../node_modules/@peculiar/asn1-cms/build/es2015/issuer_and_serial_number.js","../../node_modules/@peculiar/asn1-cms/build/es2015/revocation_info_choice.js","../../node_modules/@peculiar/asn1-cms/build/es2015/types.js","../../node_modules/@peculiar/asn1-cms/build/es2015/signer_identifier.js","../../node_modules/@peculiar/asn1-cms/build/es2015/signer_info.js","../../node_modules/@peculiar/asn1-cms/build/es2015/signed_data.js","../../node_modules/@peculiar/asn1-pfx/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/attribute.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/authenticated_safe.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/cert_bag.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/crl_bag.js","../../node_modules/@peculiar/asn1-pkcs8/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-pkcs8/build/es2015/encrypted_private_key_info.js","../../node_modules/@peculiar/asn1-pkcs8/build/es2015/private_key_info.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/key_bag.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/pkcs8_shrouded_key_bag.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/bags/secret_bag.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/mac_data.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/pfx.js","../../node_modules/@peculiar/asn1-pfx/build/es2015/safe_bag.js","../../node_modules/@peculiar/asn1-pkcs9/build/es2015/index.js","../../node_modules/@peculiar/x509/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-ecc/build/es2015/object_identifiers.js","../../node_modules/@peculiar/asn1-ecc/build/es2015/algorithms.js","../../node_modules/@peculiar/asn1-ecc/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_parameters.js","../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_private_key.js","../../node_modules/@peculiar/asn1-ecc/build/es2015/ec_signature_value.js","../../node_modules/@peculiar/asn1-csr/node_modules/tslib/tslib.es6.js","../../node_modules/@peculiar/asn1-csr/build/es2015/attributes.js","../../node_modules/@peculiar/asn1-csr/build/es2015/certification_request_info.js","../../node_modules/@peculiar/asn1-csr/build/es2015/certification_request.js","../../node_modules/@peculiar/x509/build/x509.es.js","../../src/components/cwt.js","../../src/components/verifications.js"],"sourcesContent":["\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","//**************************************************************************************\r\n/**\r\n * Making UTC date from local date\r\n * @param {Date} date Date to convert from\r\n * @returns {Date}\r\n */\r\nexport function getUTCDate(date)\r\n{\r\n\t// noinspection NestedFunctionCallJS, MagicNumberJS\r\n\treturn new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Get value for input parameters, or set a default value\r\n * @param {Object} parameters\r\n * @param {string} name\r\n * @param defaultValue\r\n */\r\nexport function getParametersValue(parameters, name, defaultValue)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif((parameters instanceof Object) === false)\r\n\t\treturn defaultValue;\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(name in parameters)\r\n\t\treturn parameters[name];\r\n\t\r\n\treturn defaultValue;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Converts \"ArrayBuffer\" into a hexdecimal string\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} [inputOffset=0]\r\n * @param {number} [inputLength=inputBuffer.byteLength]\r\n * @param {boolean} [insertSpace=false]\r\n * @returns {string}\r\n */\r\nexport function bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false)\r\n{\r\n\tlet result = \"\";\r\n\t\r\n\tfor(const item of (new Uint8Array(inputBuffer, inputOffset, inputLength)))\r\n\t{\r\n\t\t// noinspection ChainedFunctionCallJS\r\n\t\tconst str = item.toString(16).toUpperCase();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(str.length === 1)\r\n\t\t\tresult += \"0\";\r\n\t\t\r\n\t\tresult += str;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(insertSpace)\r\n\t\t\tresult += \" \";\r\n\t}\r\n\t\r\n\treturn result.trim();\r\n}\r\n//**************************************************************************************\r\n// noinspection JSValidateJSDoc, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Check input \"ArrayBuffer\" for common functions\r\n * @param {LocalBaseBlock} baseBlock\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} inputOffset\r\n * @param {number} inputLength\r\n * @returns {boolean}\r\n */\r\nexport function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer instanceof ArrayBuffer) === false)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputBuffer.byteLength === 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputOffset < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputLength < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer.byteLength - inputOffset - inputLength) < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^base to 2^10\r\n * @param {Uint8Array} inputBuffer\r\n * @param {number} inputBase\r\n * @returns {number}\r\n */\r\nexport function utilFromBase(inputBuffer, inputBase)\r\n{\r\n\tlet result = 0;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif(inputBuffer.length === 1)\r\n\t\treturn inputBuffer[0];\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tfor(let i = (inputBuffer.length - 1); i >= 0; i--)\r\n\t\tresult += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n\t\r\n\treturn result;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^10 to 2^base\r\n * @param {!number} value The number to convert\r\n * @param {!number} base The base for 2^base\r\n * @param {number} [reserved=0] Pre-defined number of bytes in output array (-1 = limited by function itself)\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilToBase(value, base, reserved = (-1))\r\n{\r\n\tconst internalReserved = reserved;\r\n\tlet internalValue = value;\r\n\t\r\n\tlet result = 0;\r\n\tlet biggest = Math.pow(2, base);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(value < biggest)\r\n\t\t{\r\n\t\t\tlet retBuf;\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(internalReserved < 0)\r\n\t\t\t{\r\n\t\t\t\tretBuf = new ArrayBuffer(i);\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(internalReserved < i)\r\n\t\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(internalReserved);\r\n\t\t\t\t\r\n\t\t\t\tresult = internalReserved;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tfor(let j = (i - 1); j >= 0; j--)\r\n\t\t\t{\r\n\t\t\t\tconst basis = Math.pow(2, j * base);\r\n\t\t\t\t\r\n\t\t\t\tretView[result - j - 1] = Math.floor(internalValue / basis);\r\n\t\t\t\tinternalValue -= (retView[result - j - 1]) * basis;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbiggest *= Math.pow(2, base);\r\n\t}\r\n\t\r\n\treturn new ArrayBuffer(0);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two ArrayBuffers\r\n * @param {...ArrayBuffer} buffers Set of ArrayBuffer\r\n */\r\nexport function utilConcatBuf(...buffers)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const buffer of buffers)\r\n\t\toutputLength += buffer.byteLength;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const buffer of buffers)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tretView.set(new Uint8Array(buffer), prevLength);\r\n\t\tprevLength += buffer.byteLength;\r\n\t}\r\n\t\r\n\treturn retBuf;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two Uint8Array\r\n * @param {...Uint8Array} views Set of Uint8Array\r\n */\r\nexport function utilConcatView(...views)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const view of views)\r\n\t\toutputLength += view.length;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const view of views)\r\n\t{\r\n\t\tretView.set(view, prevLength);\r\n\t\tprevLength += view.length;\r\n\t}\r\n\t\r\n\treturn retView;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Decoding of \"two complement\" values\r\n * The function must be called in scope of instance of \"hexBlock\" class (\"valueHex\" and \"warnings\" properties must be present)\r\n * @returns {number}\r\n */\r\nexport function utilDecodeTC()\r\n{\r\n\tconst buf = new Uint8Array(this.valueHex);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(this.valueHex.byteLength >= 2)\r\n\t{\r\n\t\t//noinspection JSBitwiseOperatorUsage, ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(condition1 || condition2)\r\n\t\t\tthis.warnings.push(\"Needlessly long format\");\r\n\t}\r\n\t\r\n\t//region Create big part of the integer\r\n\tconst bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst bigIntView = new Uint8Array(bigIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < this.valueHex.byteLength; i++)\r\n\t\tbigIntView[i] = 0;\r\n\t\r\n\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\tbigIntView[0] = (buf[0] & 0x80); // mask only the biggest bit\r\n\t\r\n\tconst bigInt = utilFromBase(bigIntView, 8);\r\n\t//endregion\r\n\t\r\n\t//region Create small part of the integer\r\n\tconst smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst smallIntView = new Uint8Array(smallIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let j = 0; j < this.valueHex.byteLength; j++)\r\n\t\tsmallIntView[j] = buf[j];\r\n\t\r\n\t// noinspection MagicNumberJS\r\n\tsmallIntView[0] &= 0x7F; // mask biggest bit\r\n\t\r\n\tconst smallInt = utilFromBase(smallIntView, 8);\r\n\t//endregion\r\n\t\r\n\treturn (smallInt - bigInt);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Encode integer value to \"two complement\" format\r\n * @param {number} value Value to encode\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilEncodeTC(value)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS\r\n\tconst modValue = (value < 0) ? (value * (-1)) : value;\r\n\tlet bigInt = 128;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(modValue <= bigInt)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(value < 0)\r\n\t\t\t{\r\n\t\t\t\tconst smallInt = bigInt - modValue;\r\n\t\t\t\t\r\n\t\t\t\tconst retBuf = utilToBase(smallInt, 8, i);\r\n\t\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] |= 0x80;\r\n\t\t\t\t\r\n\t\t\t\treturn retBuf;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet retBuf = utilToBase(modValue, 8, i);\r\n\t\t\tlet retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t//noinspection JSBitwiseOperatorUsage, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tif(retView[0] & 0x80)\r\n\t\t\t{\r\n\t\t\t\t//noinspection JSCheckFunctionSignatures\r\n\t\t\t\tconst tempBuf = retBuf.slice(0);\r\n\t\t\t\tconst tempView = new Uint8Array(tempBuf);\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n\t\t\t\t// noinspection ReuseOfLocalVariableJS\r\n\t\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tfor(let k = 0; k < tempBuf.byteLength; k++)\r\n\t\t\t\t\tretView[k + 1] = tempView[k];\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] = 0x00;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbigInt *= Math.pow(2, 8);\r\n\t}\r\n\t\r\n\treturn (new ArrayBuffer(0));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS, ParameterNamingConventionJS\r\n/**\r\n * Compare two array buffers\r\n * @param {!ArrayBuffer} inputBuffer1\r\n * @param {!ArrayBuffer} inputBuffer2\r\n * @returns {boolean}\r\n */\r\nexport function isEqualBuffer(inputBuffer1, inputBuffer2)\r\n{\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(inputBuffer1.byteLength !== inputBuffer2.byteLength)\r\n\t\treturn false;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view1 = new Uint8Array(inputBuffer1);\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view2 = new Uint8Array(inputBuffer2);\r\n\t\r\n\tfor(let i = 0; i < view1.length; i++)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(view1[i] !== view2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Pad input number with leade \"0\" if needed\r\n * @returns {string}\r\n * @param {number} inputNumber\r\n * @param {number} fullLength\r\n */\r\nexport function padNumber(inputNumber, fullLength)\r\n{\r\n\tconst str = inputNumber.toString(10);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(fullLength < str.length)\r\n\t\treturn \"\";\r\n\t\r\n\tconst dif = fullLength - str.length;\r\n\t\r\n\tconst padding = new Array(dif);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < dif; i++)\r\n\t\tpadding[i] = \"0\";\r\n\t\r\n\tconst paddingString = padding.join(\"\");\r\n\t\r\n\treturn paddingString.concat(str);\r\n}\r\n//**************************************************************************************\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionTooLongJS, FunctionNamingConventionJS\r\n/**\r\n * Encode string into BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} useUrlTemplate If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} skipPadding Skip BASE-64 padding or not\r\n * @param {boolean} skipLeadingZeros Skip leading zeros in input data or not\r\n * @returns {string}\r\n */\r\nexport function toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false)\r\n{\r\n\tlet i = 0;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag1 = 0;\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag2 = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\tif(skipLeadingZeros)\r\n\t{\r\n\t\tlet nonZeroPosition = 0;\r\n\t\t\r\n\t\tfor(let i = 0; i < input.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(input.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroPosition = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tinput = input.slice(nonZeroPosition);\r\n\t}\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr1 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag1 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr2 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag2 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr3 = input.charCodeAt(i++);\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS\r\n\t\tconst enc1 = chr1 >> 2;\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc4 = chr3 & 0x3F;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tif(flag1 === 1)\r\n\t\t{\r\n\t\t\t// noinspection NestedAssignmentJS, AssignmentResultUsedJS, MagicNumberJS\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(flag2 === 1)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(skipPadding)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\tif(enc3 === 64)\r\n\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\t\tif(enc4 === 64)\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMoreThanThreeNegationsJS, FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionNamingConventionJS\r\n/**\r\n * Decode string from BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} [useUrlTemplate=false] If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} [cutTailZeros=false] If \"true\" then cut tailing zeroz from function result\r\n * @returns {string}\r\n */\r\nexport function fromBase64(input, useUrlTemplate = false, cutTailZeros = false)\r\n{\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\t//region Aux functions\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, NestedFunctionJS\r\n\tfunction indexof(toSearch)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, MagicNumberJS\r\n\t\tfor(let i = 0; i < 64; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(template.charAt(i) === toSearch)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection MagicNumberJS\r\n\t\treturn 64;\r\n\t}\r\n\t\r\n\t// noinspection NestedFunctionJS\r\n\tfunction test(incoming)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS, MagicNumberJS\r\n\t\treturn ((incoming === 64) ? 0x00 : incoming);\r\n\t}\r\n\t//endregion\r\n\t\r\n\tlet i = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc1 = indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc2 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc3 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc4 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n\t\t\r\n\t\toutput += String.fromCharCode(chr1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc3 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr2);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc4 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr3);\r\n\t}\r\n\t\r\n\tif(cutTailZeros)\r\n\t{\r\n\t\tconst outputLength = output.length;\r\n\t\tlet nonZeroStart = (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tfor(let i = (outputLength - 1); i >= 0; i--)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(output.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroStart = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS, NegatedIfStatementJS\r\n\t\tif(nonZeroStart !== (-1))\r\n\t\t\toutput = output.slice(0, nonZeroStart + 1);\r\n\t\telse\r\n\t\t\toutput = \"\";\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\nexport function arrayBufferToString(buffer)\r\n{\r\n\tlet resultString = \"\";\r\n\tconst view = new Uint8Array(buffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const element of view)\r\n\t\tresultString += String.fromCharCode(element);\r\n\t\r\n\treturn resultString;\r\n}\r\n//**************************************************************************************\r\nexport function stringToArrayBuffer(str)\r\n{\r\n\tconst stringLength = str.length;\r\n\t\r\n\tconst resultBuffer = new ArrayBuffer(stringLength);\r\n\tconst resultView = new Uint8Array(resultBuffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < stringLength; i++)\r\n\t\tresultView[i] = str.charCodeAt(i);\r\n\t\r\n\treturn resultBuffer;\r\n}\r\n//**************************************************************************************\r\nconst log2 = Math.log(2);\r\n//**************************************************************************************\r\n// noinspection FunctionNamingConventionJS\r\n/**\r\n * Get nearest to input length power of 2\r\n * @param {number} length Current length of existing array\r\n * @returns {number}\r\n */\r\nexport function nearestPowerOf2(length)\r\n{\r\n\tconst base = (Math.log(length) / log2);\r\n\t\r\n\tconst floor = Math.floor(base);\r\n\tconst round = Math.round(base);\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\treturn ((floor === round) ? floor : round);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Delete properties by name from specified object\r\n * @param {Object} object Object to delete properties from\r\n * @param {Array.<string>} propsArray Array of properties names\r\n */\r\nexport function clearProps(object, propsArray)\r\n{\r\n\tfor(const prop of propsArray)\r\n\t\tdelete object[prop];\r\n}\r\n//**************************************************************************************\r\n","/* eslint-disable indent */\n/*\n * Copyright (c) 2016-2018, Peculiar Ventures\n * All rights reserved.\n *\n * Author 2016-2018, Yury Strozhevsky <www.strozhevsky.com>.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n *    may be used to endorse or promote products derived from this software without\n *    specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n * OF SUCH DAMAGE.\n *\n */\n//**************************************************************************************\nimport { getParametersValue, padNumber, isEqualBuffer, bufferToHexCodes, checkBufferParams, utilToBase, utilFromBase, utilEncodeTC, utilDecodeTC, utilConcatBuf, utilConcatView } from \"pvutils\";\n//**************************************************************************************\n//region Other utility functions\n//**************************************************************************************\nfunction assertBigInt() {\n  if (typeof BigInt === \"undefined\") {\n    throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\")\n  }\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of global variables\n//**************************************************************************************\nconst powers2 = [new Uint8Array([1])];\nconst digitsString = \"0123456789\";\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration for \"LocalBaseBlock\" class\n//**************************************************************************************\n/**\n * Class used as a base block for all remaining ASN.1 classes\n * @typedef LocalBaseBlock\n * @interface\n * @property {number} blockLength\n * @property {string} error\n * @property {Array.<string>} warnings\n * @property {ArrayBuffer} valueBeforeDecode\n */\nclass LocalBaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalBaseBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueBeforeDecode]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\t/**\n\t\t * @type {number} blockLength\n\t\t */\n\t\tthis.blockLength = getParametersValue(parameters, \"blockLength\", 0);\n\t\t/**\n\t\t * @type {string} error\n\t\t */\n\t\tthis.error = getParametersValue(parameters, \"error\", \"\");\n\t\t/**\n\t\t * @type {Array.<string>} warnings\n\t\t */\n\t\tthis.warnings = getParametersValue(parameters, \"warnings\", []);\n\t\t//noinspection JSCheckFunctionSignatures\n\t\t/**\n\t\t * @type {ArrayBuffer} valueBeforeDecode\n\t\t */\n\t\tif(\"valueBeforeDecode\" in parameters)\n\t\t\tthis.valueBeforeDecode = parameters.valueBeforeDecode.slice(0);\n\t\telse\n\t\t\tthis.valueBeforeDecode = new ArrayBuffer(0);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"baseBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\treturn {\n\t\t\tblockName: this.constructor.blockName(),\n\t\t\tblockLength: this.blockLength,\n\t\t\terror: this.error,\n\t\t\twarnings: this.warnings,\n\t\t\tvalueBeforeDecode: bufferToHexCodes(this.valueBeforeDecode, 0, this.valueBeforeDecode.byteLength)\n\t\t};\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Description for \"HexBlock\" class\n//**************************************************************************************\n/**\n * Class used as a base block for all remaining ASN.1 classes\n * @extends LocalBaseBlock\n * @typedef HexBlock\n * @property {number} blockLength\n * @property {string} error\n * @property {Array.<string>} warnings\n * @property {ArrayBuffer} valueBeforeDecode\n * @property {boolean} isHexOnly\n * @property {ArrayBuffer} valueHex\n */\n//noinspection JSUnusedLocalSymbols\nexport const HexBlock = BaseClass => class LocalHexBlockMixin extends BaseClass\n{\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Constructor for \"HexBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.isHexOnly = getParametersValue(parameters, \"isHexOnly\", false);\n\t\t/**\n\t\t * @type {ArrayBuffer}\n\t\t */\n\t\tif(\"valueHex\" in parameters)\n\t\t\tthis.valueHex = parameters.valueHex.slice(0);\n\t\telse\n\t\t\tthis.valueHex = new ArrayBuffer(0);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"hexBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\t//region Getting Uint8Array from ArrayBuffer\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t\t//endregion\n\n\t\t//region Initial checks\n\t\tif(intBuffer.length === 0)\n\t\t{\n\t\t\tthis.warnings.push(\"Zero buffer length\");\n\t\t\treturn inputOffset;\n\t\t}\n\t\t//endregion\n\n\t\t//region Copy input buffer to internal buffer\n\t\tthis.valueHex = inputBuffer.slice(inputOffset, inputOffset + inputLength);\n\t\t//endregion\n\n\t\tthis.blockLength = inputLength;\n\n\t\treturn (inputOffset + inputLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tif(this.isHexOnly !== true)\n\t\t{\n\t\t\tthis.error = \"Flag \\\"isHexOnly\\\" is not set, abort\";\n\t\t\treturn new ArrayBuffer(0);\n\t\t}\n\n\t\tif(sizeOnly === true)\n\t\t\treturn new ArrayBuffer(this.valueHex.byteLength);\n\n\t\t//noinspection JSCheckFunctionSignatures\n\t\treturn this.valueHex.slice(0);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.blockName = this.constructor.blockName();\n\t\tobject.isHexOnly = this.isHexOnly;\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n};\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of identification block class\n//**************************************************************************************\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalBaseBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {Object} [idBlock]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper();\n\n\t\tif(\"idBlock\" in parameters)\n\t\t{\n\t\t\t//region Properties from hexBlock class\n\t\t\tthis.isHexOnly = getParametersValue(parameters.idBlock, \"isHexOnly\", false);\n\t\t\tthis.valueHex = getParametersValue(parameters.idBlock, \"valueHex\", new ArrayBuffer(0));\n\t\t\t//endregion\n\n\t\t\tthis.tagClass = getParametersValue(parameters.idBlock, \"tagClass\", (-1));\n\t\t\tthis.tagNumber = getParametersValue(parameters.idBlock, \"tagNumber\", (-1));\n\t\t\tthis.isConstructed = getParametersValue(parameters.idBlock, \"isConstructed\", false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.tagClass = (-1);\n\t\t\tthis.tagNumber = (-1);\n\t\t\tthis.isConstructed = false;\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"identificationBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\t//region Initial variables\n\t\tlet firstOctet = 0;\n\t\tlet retBuf;\n\t\tlet retView;\n\t\t//endregion\n\n\t\tswitch(this.tagClass)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tfirstOctet |= 0x00; // UNIVERSAL\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tfirstOctet |= 0x40; // APPLICATION\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tfirstOctet |= 0x80; // CONTEXT-SPECIFIC\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tfirstOctet |= 0xC0; // PRIVATE\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.error = \"Unknown tag class\";\n\t\t\t\treturn (new ArrayBuffer(0));\n\t\t}\n\n\t\tif(this.isConstructed)\n\t\t\tfirstOctet |= 0x20;\n\n\t\tif((this.tagNumber < 31) && (!this.isHexOnly))\n\t\t{\n\t\t\tretBuf = new ArrayBuffer(1);\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tif(!sizeOnly)\n\t\t\t{\n\t\t\t\tlet number = this.tagNumber;\n\t\t\t\tnumber &= 0x1F;\n\t\t\t\tfirstOctet |= number;\n\n\t\t\t\tretView[0] = firstOctet;\n\t\t\t}\n\n\t\t\treturn retBuf;\n\t\t}\n\n\t\tif(this.isHexOnly === false)\n\t\t{\n\t\t\tconst encodedBuf = utilToBase(this.tagNumber, 7);\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\n\t\t\tconst size = encodedBuf.byteLength;\n\n\t\t\tretBuf = new ArrayBuffer(size + 1);\n\t\t\tretView = new Uint8Array(retBuf);\n\t\t\tretView[0] = (firstOctet | 0x1F);\n\n\t\t\tif(!sizeOnly)\n\t\t\t{\n\t\t\t\tfor(let i = 0; i < (size - 1); i++)\n\t\t\t\t\tretView[i + 1] = encodedView[i] | 0x80;\n\n\t\t\t\tretView[size] = encodedView[size - 1];\n\t\t\t}\n\n\t\t\treturn retBuf;\n\t\t}\n\n\t\tretBuf = new ArrayBuffer(this.valueHex.byteLength + 1);\n\t\tretView = new Uint8Array(retBuf);\n\n\t\tretView[0] = (firstOctet | 0x1F);\n\n\t\tif(sizeOnly === false)\n\t\t{\n\t\t\tconst curView = new Uint8Array(this.valueHex);\n\n\t\t\tfor(let i = 0; i < (curView.length - 1); i++)\n\t\t\t\tretView[i + 1] = curView[i] | 0x80;\n\n\t\t\tretView[this.valueHex.byteLength] = curView[curView.length - 1];\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\t//region Getting Uint8Array from ArrayBuffer\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t\t//endregion\n\n\t\t//region Initial checks\n\t\tif(intBuffer.length === 0)\n\t\t{\n\t\t\tthis.error = \"Zero buffer length\";\n\t\t\treturn (-1);\n\t\t}\n\t\t//endregion\n\n\t\t//region Find tag class\n\t\tconst tagClassMask = intBuffer[0] & 0xC0;\n\n\t\tswitch(tagClassMask)\n\t\t{\n\t\t\tcase 0x00:\n\t\t\t\tthis.tagClass = (1); // UNIVERSAL\n\t\t\t\tbreak;\n\t\t\tcase 0x40:\n\t\t\t\tthis.tagClass = (2); // APPLICATION\n\t\t\t\tbreak;\n\t\t\tcase 0x80:\n\t\t\t\tthis.tagClass = (3); // CONTEXT-SPECIFIC\n\t\t\t\tbreak;\n\t\t\tcase 0xC0:\n\t\t\t\tthis.tagClass = (4); // PRIVATE\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.error = \"Unknown tag class\";\n\t\t\t\treturn (-1);\n\t\t}\n\t\t//endregion\n\n\t\t//region Find it's constructed or not\n\t\tthis.isConstructed = (intBuffer[0] & 0x20) === 0x20;\n\t\t//endregion\n\n\t\t//region Find tag number\n\t\tthis.isHexOnly = false;\n\n\t\tconst tagNumberMask = intBuffer[0] & 0x1F;\n\n\t\t//region Simple case (tag number < 31)\n\t\tif(tagNumberMask !== 0x1F)\n\t\t{\n\t\t\tthis.tagNumber = (tagNumberMask);\n\t\t\tthis.blockLength = 1;\n\t\t}\n\t\t//endregion\n\t\t//region Tag number bigger or equal to 31\n\t\telse\n\t\t{\n\t\t\tlet count = 1;\n\n\t\t\tthis.valueHex = new ArrayBuffer(255);\n\t\t\tlet tagNumberBufferMaxLength = 255;\n\t\t\tlet intTagNumberBuffer = new Uint8Array(this.valueHex);\n\n\t\t\t//noinspection JSBitwiseOperatorUsage\n\t\t\twhile(intBuffer[count] & 0x80)\n\t\t\t{\n\t\t\t\tintTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\n\t\t\t\tcount++;\n\n\t\t\t\tif(count >= intBuffer.length)\n\t\t\t\t{\n\t\t\t\t\tthis.error = \"End of input reached before message was fully decoded\";\n\t\t\t\t\treturn (-1);\n\t\t\t\t}\n\n\t\t\t\t//region In case if tag number length is greater than 255 bytes (rare but possible case)\n\t\t\t\tif(count === tagNumberBufferMaxLength)\n\t\t\t\t{\n\t\t\t\t\ttagNumberBufferMaxLength += 255;\n\n\t\t\t\t\tconst tempBuffer = new ArrayBuffer(tagNumberBufferMaxLength);\n\t\t\t\t\tconst tempBufferView = new Uint8Array(tempBuffer);\n\n\t\t\t\t\tfor(let i = 0; i < intTagNumberBuffer.length; i++)\n\t\t\t\t\t\ttempBufferView[i] = intTagNumberBuffer[i];\n\n\t\t\t\t\tthis.valueHex = new ArrayBuffer(tagNumberBufferMaxLength);\n\t\t\t\t\tintTagNumberBuffer = new Uint8Array(this.valueHex);\n\t\t\t\t}\n\t\t\t\t//endregion\n\t\t\t}\n\n\t\t\tthis.blockLength = (count + 1);\n\t\t\tintTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F; // Write last byte to buffer\n\n\t\t\t//region Cut buffer\n\t\t\tconst tempBuffer = new ArrayBuffer(count);\n\t\t\tconst tempBufferView = new Uint8Array(tempBuffer);\n\n\t\t\tfor(let i = 0; i < count; i++)\n\t\t\t\ttempBufferView[i] = intTagNumberBuffer[i];\n\n\t\t\tthis.valueHex = new ArrayBuffer(count);\n\t\t\tintTagNumberBuffer = new Uint8Array(this.valueHex);\n\t\t\tintTagNumberBuffer.set(tempBufferView);\n\t\t\t//endregion\n\n\t\t\t//region Try to convert long tag number to short form\n\t\t\tif(this.blockLength <= 9)\n\t\t\t\tthis.tagNumber = utilFromBase(intTagNumberBuffer, 7);\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.isHexOnly = true;\n\t\t\t\tthis.warnings.push(\"Tag too long, represented as hex-coded\");\n\t\t\t}\n\t\t\t//endregion\n\t\t}\n\t\t//endregion\n\t\t//endregion\n\n\t\t//region Check if constructed encoding was using for primitive type\n\t\tif(((this.tagClass === 1)) &&\n\t\t\t(this.isConstructed))\n\t\t{\n\t\t\tswitch(this.tagNumber)\n\t\t\t{\n\t\t\t\tcase 1:  // Boolean\n\t\t\t\tcase 2:  // REAL\n\t\t\t\tcase 5:  // Null\n\t\t\t\tcase 6:  // OBJECT IDENTIFIER\n\t\t\t\tcase 9:  // REAL\n\t\t\t\tcase 13: // RELATIVE OBJECT IDENTIFIER\n\t\t\t\tcase 14: // Time\n\t\t\t\tcase 23:\n\t\t\t\tcase 24:\n\t\t\t\tcase 31:\n\t\t\t\tcase 32:\n\t\t\t\tcase 33:\n\t\t\t\tcase 34:\n\t\t\t\t\tthis.error = \"Constructed encoding used for primitive type\";\n\t\t\t\t\treturn (-1);\n\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t\t//endregion\n\n\t\treturn (inputOffset + this.blockLength); // Return current offset in input buffer\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName: string,\n\t *  tagClass: number,\n\t *  tagNumber: number,\n\t *  isConstructed: boolean,\n\t *  isHexOnly: boolean,\n\t *  valueHex: ArrayBuffer,\n\t *  blockLength: number,\n\t *  error: string, warnings: Array.<string>,\n\t *  valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.blockName = this.constructor.blockName();\n\t\tobject.tagClass = this.tagClass;\n\t\tobject.tagNumber = this.tagNumber;\n\t\tobject.isConstructed = this.isConstructed;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of length block class\n//**************************************************************************************\nclass LocalLengthBlock extends LocalBaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalLengthBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {Object} [lenBlock]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper();\n\n\t\tif(\"lenBlock\" in parameters)\n\t\t{\n\t\t\tthis.isIndefiniteForm = getParametersValue(parameters.lenBlock, \"isIndefiniteForm\", false);\n\t\t\tthis.longFormUsed = getParametersValue(parameters.lenBlock, \"longFormUsed\", false);\n\t\t\tthis.length = getParametersValue(parameters.lenBlock, \"length\", 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.isIndefiniteForm = false;\n\t\t\tthis.longFormUsed = false;\n\t\t\tthis.length = 0;\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"lengthBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\t//region Getting Uint8Array from ArrayBuffer\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t\t//endregion\n\n\t\t//region Initial checks\n\t\tif(intBuffer.length === 0)\n\t\t{\n\t\t\tthis.error = \"Zero buffer length\";\n\t\t\treturn (-1);\n\t\t}\n\n\t\tif(intBuffer[0] === 0xFF)\n\t\t{\n\t\t\tthis.error = \"Length block 0xFF is reserved by standard\";\n\t\t\treturn (-1);\n\t\t}\n\t\t//endregion\n\n\t\t//region Check for length form type\n\t\tthis.isIndefiniteForm = intBuffer[0] === 0x80;\n\t\t//endregion\n\n\t\t//region Stop working in case of indefinite length form\n\t\tif(this.isIndefiniteForm === true)\n\t\t{\n\t\t\tthis.blockLength = 1;\n\t\t\treturn (inputOffset + this.blockLength);\n\t\t}\n\t\t//endregion\n\n\t\t//region Check is long form of length encoding using\n\t\tthis.longFormUsed = !!(intBuffer[0] & 0x80);\n\t\t//endregion\n\n\t\t//region Stop working in case of short form of length value\n\t\tif(this.longFormUsed === false)\n\t\t{\n\t\t\tthis.length = (intBuffer[0]);\n\t\t\tthis.blockLength = 1;\n\t\t\treturn (inputOffset + this.blockLength);\n\t\t}\n\t\t//endregion\n\n\t\t//region Calculate length value in case of long form\n\t\tconst count = intBuffer[0] & 0x7F;\n\n\t\tif(count > 8) // Too big length value\n\t\t{\n\t\t\tthis.error = \"Too big integer\";\n\t\t\treturn (-1);\n\t\t}\n\n\t\tif((count + 1) > intBuffer.length)\n\t\t{\n\t\t\tthis.error = \"End of input reached before message was fully decoded\";\n\t\t\treturn (-1);\n\t\t}\n\n\t\tconst lengthBufferView = new Uint8Array(count);\n\n\t\tfor(let i = 0; i < count; i++)\n\t\t\tlengthBufferView[i] = intBuffer[i + 1];\n\n\t\tif(lengthBufferView[count - 1] === 0x00)\n\t\t\tthis.warnings.push(\"Needlessly long encoded length\");\n\n\t\tthis.length = utilFromBase(lengthBufferView, 8);\n\n\t\tif(this.longFormUsed && (this.length <= 127))\n\t\t\tthis.warnings.push(\"Unnecessary usage of long length form\");\n\n\t\tthis.blockLength = count + 1;\n\t\t//endregion\n\n\t\treturn (inputOffset + this.blockLength); // Return current offset in input buffer\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\t//region Initial variables\n\t\tlet retBuf;\n\t\tlet retView;\n\t\t//endregion\n\n\t\tif(this.length > 127)\n\t\t\tthis.longFormUsed = true;\n\n\t\tif(this.isIndefiniteForm)\n\t\t{\n\t\t\tretBuf = new ArrayBuffer(1);\n\n\t\t\tif(sizeOnly === false)\n\t\t\t{\n\t\t\t\tretView = new Uint8Array(retBuf);\n\t\t\t\tretView[0] = 0x80;\n\t\t\t}\n\n\t\t\treturn retBuf;\n\t\t}\n\n\t\tif(this.longFormUsed === true)\n\t\t{\n\t\t\tconst encodedBuf = utilToBase(this.length, 8);\n\n\t\t\tif(encodedBuf.byteLength > 127)\n\t\t\t{\n\t\t\t\tthis.error = \"Too big length\";\n\t\t\t\treturn (new ArrayBuffer(0));\n\t\t\t}\n\n\t\t\tretBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\n\n\t\t\tif(sizeOnly === true)\n\t\t\t\treturn retBuf;\n\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tretView[0] = encodedBuf.byteLength | 0x80;\n\n\t\t\tfor(let i = 0; i < encodedBuf.byteLength; i++)\n\t\t\t\tretView[i + 1] = encodedView[i];\n\n\t\t\treturn retBuf;\n\t\t}\n\n\t\tretBuf = new ArrayBuffer(1);\n\n\t\tif(sizeOnly === false)\n\t\t{\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tretView[0] = this.length;\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.blockName = this.constructor.blockName();\n\t\tobject.isIndefiniteForm = this.isIndefiniteForm;\n\t\tobject.longFormUsed = this.longFormUsed;\n\t\tobject.length = this.length;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of value block class\n//**************************************************************************************\nexport class ValueBlock extends LocalBaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"ValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"valueBlock\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols,JSUnusedLocalSymbols,JSUnusedLocalSymbols\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Throw an exception for a function which needs to be specified in extended classes\n\t\tthrow TypeError(\"User need to make a specific function in a class which extends \\\"ValueBlock\\\"\");\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\t//region Throw an exception for a function which needs to be specified in extended classes\n\t\tthrow TypeError(\"User need to make a specific function in a class which extends \\\"ValueBlock\\\"\");\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of basic ASN.1 block class\n//**************************************************************************************\nexport class BaseBlock extends LocalBaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"BaseBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {Object} [primitiveSchema]\n\t * @property {string} [name]\n\t * @property {boolean} [optional]\n\t * @param valueBlockType Type of value block\n\t */\n\tconstructor(parameters = {}, valueBlockType = ValueBlock)\n\t{\n\t\tsuper(parameters);\n\n\t\tif(\"name\" in parameters)\n\t\t\tthis.name = parameters.name;\n\t\tif(\"optional\" in parameters)\n\t\t\tthis.optional = parameters.optional;\n\t\tif(\"primitiveSchema\" in parameters)\n\t\t\tthis.primitiveSchema = parameters.primitiveSchema;\n\n\t\tthis.idBlock = new LocalIdentificationBlock(parameters);\n\t\tthis.lenBlock = new LocalLengthBlock(parameters);\n\t\tthis.valueBlock = new valueBlockType(parameters);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BaseBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tlet retBuf;\n\n\t\tconst idBlockBuf = this.idBlock.toBER(sizeOnly);\n\t\tconst valueBlockSizeBuf = this.valueBlock.toBER(true);\n\n\t\tthis.lenBlock.length = valueBlockSizeBuf.byteLength;\n\t\tconst lenBlockBuf = this.lenBlock.toBER(sizeOnly);\n\n\t\tretBuf = utilConcatBuf(idBlockBuf, lenBlockBuf);\n\n\t\tlet valueBlockBuf;\n\n\t\tif(sizeOnly === false)\n\t\t\tvalueBlockBuf = this.valueBlock.toBER(sizeOnly);\n\t\telse\n\t\t\tvalueBlockBuf = new ArrayBuffer(this.lenBlock.length);\n\n\t\tretBuf = utilConcatBuf(retBuf, valueBlockBuf);\n\n\t\tif(this.lenBlock.isIndefiniteForm === true)\n\t\t{\n\t\t\tconst indefBuf = new ArrayBuffer(2);\n\n\t\t\tif(sizeOnly === false)\n\t\t\t{\n\t\t\t\tconst indefView = new Uint8Array(indefBuf);\n\n\t\t\t\tindefView[0] = 0x00;\n\t\t\t\tindefView[1] = 0x00;\n\t\t\t}\n\n\t\t\tretBuf = utilConcatBuf(retBuf, indefBuf);\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.idBlock = this.idBlock.toJSON();\n\t\tobject.lenBlock = this.lenBlock.toJSON();\n\t\tobject.valueBlock = this.valueBlock.toJSON();\n\n\t\tif(\"name\" in this)\n\t\t\tobject.name = this.name;\n\t\tif(\"optional\" in this)\n\t\t\tobject.optional = this.optional;\n\t\tif(\"primitiveSchema\" in this)\n\t\t\tobject.primitiveSchema = this.primitiveSchema.toJSON();\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${bufferToHexCodes(this.valueBlock.valueHex)}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of basic block for all PRIMITIVE types\n//**************************************************************************************\nclass LocalPrimitiveValueBlock extends ValueBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalPrimitiveValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueBeforeDecode]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\t//region Variables from \"hexBlock\" class\n\t\tif(\"valueHex\" in parameters)\n\t\t\tthis.valueHex = parameters.valueHex.slice(0);\n\t\telse\n\t\t\tthis.valueHex = new ArrayBuffer(0);\n\n\t\tthis.isHexOnly = getParametersValue(parameters, \"isHexOnly\", true);\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\t//region Getting Uint8Array from ArrayBuffer\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t\t//endregion\n\n\t\t//region Initial checks\n\t\tif(intBuffer.length === 0)\n\t\t{\n\t\t\tthis.warnings.push(\"Zero buffer length\");\n\t\t\treturn inputOffset;\n\t\t}\n\t\t//endregion\n\n\t\t//region Copy input buffer into internal buffer\n\t\tthis.valueHex = new ArrayBuffer(intBuffer.length);\n\t\tconst valueHexView = new Uint8Array(this.valueHex);\n\n\t\tfor(let i = 0; i < intBuffer.length; i++)\n\t\t\tvalueHexView[i] = intBuffer[i];\n\t\t//endregion\n\n\t\tthis.blockLength = inputLength;\n\n\t\treturn (inputOffset + inputLength);\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\treturn this.valueHex.slice(0);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"PrimitiveValueBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\t\tobject.isHexOnly = this.isHexOnly;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class Primitive extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Primitive\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalPrimitiveValueBlock);\n\n\t\tthis.idBlock.isConstructed = false;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"PRIMITIVE\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of basic block for all CONSTRUCTED types\n//**************************************************************************************\nclass LocalConstructedValueBlock extends ValueBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalConstructedValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.value = getParametersValue(parameters, \"value\", []);\n\t\tthis.isIndefiniteForm = getParametersValue(parameters, \"isIndefiniteForm\", false);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Store initial offset and length\n\t\tconst initialOffset = inputOffset;\n\t\tconst initialLength = inputLength;\n\t\t//endregion\n\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\t//region Getting Uint8Array from ArrayBuffer\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t\t//endregion\n\n\t\t//region Initial checks\n\t\tif(intBuffer.length === 0)\n\t\t{\n\t\t\tthis.warnings.push(\"Zero buffer length\");\n\t\t\treturn inputOffset;\n\t\t}\n\t\t//endregion\n\n\t\t//region Aux function\n\t\tfunction checkLen(indefiniteLength, length)\n\t\t{\n\t\t\tif(indefiniteLength === true)\n\t\t\t\treturn 1;\n\n\t\t\treturn length;\n\t\t}\n\t\t//endregion\n\n\t\tlet currentOffset = inputOffset;\n\n\t\twhile(checkLen(this.isIndefiniteForm, inputLength) > 0)\n\t\t{\n\t\t\tconst returnObject = LocalFromBER(inputBuffer, currentOffset, inputLength);\n\t\t\tif(returnObject.offset === (-1))\n\t\t\t{\n\t\t\t\tthis.error = returnObject.result.error;\n\t\t\t\tthis.warnings.concat(returnObject.result.warnings);\n\t\t\t\treturn (-1);\n\t\t\t}\n\n\t\t\tcurrentOffset = returnObject.offset;\n\n\t\t\tthis.blockLength += returnObject.result.blockLength;\n\t\t\tinputLength -= returnObject.result.blockLength;\n\n\t\t\tthis.value.push(returnObject.result);\n\n\t\t\tif((this.isIndefiniteForm === true) && (returnObject.result.constructor.blockName() === EndOfContent.blockName()))\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif(this.isIndefiniteForm === true)\n\t\t{\n\t\t\tif(this.value[this.value.length - 1].constructor.blockName() === EndOfContent.blockName())\n\t\t\t\tthis.value.pop();\n\t\t\telse\n\t\t\t\tthis.warnings.push(\"No EndOfContent block encoded\");\n\t\t}\n\n\t\t//region Copy \"inputBuffer\" to \"valueBeforeDecode\"\n\t\tthis.valueBeforeDecode = inputBuffer.slice(initialOffset, initialOffset + initialLength);\n\t\t//endregion\n\n\t\treturn currentOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tlet retBuf = new ArrayBuffer(0);\n\n\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t{\n\t\t\tconst valueBuf = this.value[i].toBER(sizeOnly);\n\t\t\tretBuf = utilConcatBuf(retBuf, valueBuf);\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"ConstructedValueBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.isIndefiniteForm = this.isIndefiniteForm;\n\t\tobject.value = [];\n\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t\tobject.value.push(this.value[i].toJSON());\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class Constructed extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Constructed\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalConstructedValueBlock);\n\n\t\tthis.idBlock.isConstructed = true;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"CONSTRUCTED\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tthis.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\tconst values = [];\n\t\tfor (const value of this.valueBlock.value) {\n\t\t\tvalues.push(value.toString().split(\"\\n\").map(o => `  ${o}`).join(\"\\n\"));\n\t\t}\n\t\tconst blockName = this.idBlock.tagClass === 3\n\t\t\t? `[${this.idBlock.tagNumber}]`\n\t\t\t: this.constructor.blockName();\n\t\treturn values.length \n\t\t\t? `${blockName} :\\n${values.join(\"\\n\")}` // items\n\t\t\t: `${blockName} :`; // empty\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 EndOfContent type class\n//**************************************************************************************\nclass LocalEndOfContentValueBlock extends ValueBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalEndOfContentValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols,JSUnusedLocalSymbols\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number}\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region There is no \"value block\" for EndOfContent type and we need to return the same offset\n\t\treturn inputOffset;\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\treturn new ArrayBuffer(0);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"EndOfContentValueBlock\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class EndOfContent extends BaseBlock\n{\n\t//**********************************************************************************\n\tconstructor(paramaters = {})\n\t{\n\t\tsuper(paramaters, LocalEndOfContentValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 0; // EndOfContent\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"EndOfContent\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 Boolean type class\n//**************************************************************************************\nclass LocalBooleanValueBlock extends ValueBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalBooleanValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\t\t\n\t\tthis.value = getParametersValue(parameters, \"value\", false);\n\t\tthis.isHexOnly = getParametersValue(parameters, \"isHexOnly\", false);\n\t\t\n\t\tif(\"valueHex\" in parameters)\n\t\t\tthis.valueHex = parameters.valueHex.slice(0);\n\t\telse\n\t\t{\n\t\t\tthis.valueHex = new ArrayBuffer(1);\n\t\t\tif(this.value === true)\n\t\t\t{\n\t\t\t\tconst view = new Uint8Array(this.valueHex);\n\t\t\t\tview[0] = 0xFF;\n\t\t\t}\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\t//region Getting Uint8Array from ArrayBuffer\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t\t//endregion\n\n\t\tif(inputLength > 1)\n\t\t\tthis.warnings.push(\"Boolean value encoded in more then 1 octet\");\n\n\t\tthis.isHexOnly = true;\n\n\t\t//region Copy input buffer to internal array\n\t\tthis.valueHex = new ArrayBuffer(intBuffer.length);\n\t\tconst view = new Uint8Array(this.valueHex);\n\n\t\tfor(let i = 0; i < intBuffer.length; i++)\n\t\t\tview[i] = intBuffer[i];\n\t\t//endregion\n\t\t\n\t\tif(utilDecodeTC.call(this) !== 0 )\n\t\t\tthis.value = true;\n\t\telse\n\t\t\tthis.value = false;\n\n\t\tthis.blockLength = inputLength;\n\n\t\treturn (inputOffset + inputLength);\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\treturn this.valueHex;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BooleanValueBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.value = this.value;\n\t\tobject.isHexOnly = this.isHexOnly;\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class Boolean extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Boolean\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalBooleanValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 1; // Boolean\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BOOLEAN\";\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${this.valueBlock.value}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 Sequence and Set type classes\n//**************************************************************************************\nexport class Sequence extends Constructed\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Sequence\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 16; // Sequence\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"SEQUENCE\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class Set extends Constructed\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Set\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 17; // Set\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"SET\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 Null type class\n//**************************************************************************************\nexport class Null extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Null\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalBaseBlock); // We will not have a call to \"Null value block\" because of specified \"fromBER\" and \"toBER\" functions\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 5; // Null\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"NULL\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedLocalSymbols\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tif(this.lenBlock.length > 0)\n\t\t\tthis.warnings.push(\"Non-zero length of value block for Null type\");\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\t\t\n\t\tthis.blockLength += inputLength;\n\t\t\n\t\tif((inputOffset + inputLength) > inputBuffer.byteLength)\n\t\t{\n\t\t\tthis.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\n\t\t\treturn (-1);\n\t\t}\n\t\t\n\t\treturn (inputOffset + inputLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tconst retBuf = new ArrayBuffer(2);\n\n\t\tif(sizeOnly === true)\n\t\t\treturn retBuf;\n\n\t\tconst retView = new Uint8Array(retBuf);\n\t\tretView[0] = 0x05;\n\t\tretView[1] = 0x00;\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 OctetString type class\n//**************************************************************************************\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalOctetStringValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.isConstructed = getParametersValue(parameters, \"isConstructed\", false);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tlet resultOffset = 0;\n\n\t\tif(this.isConstructed === true)\n\t\t{\n\t\t\tthis.isHexOnly = false;\n\n\t\t\tresultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n\t\t\tif(resultOffset === (-1))\n\t\t\t\treturn resultOffset;\n\n\t\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t\t{\n\t\t\t\tconst currentBlockName = this.value[i].constructor.blockName();\n\n\t\t\t\tif(currentBlockName === EndOfContent.blockName())\n\t\t\t\t{\n\t\t\t\t\tif(this.isIndefiniteForm === true)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\n\t\t\t\t\t\treturn (-1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(currentBlockName !== OctetString.blockName())\n\t\t\t\t{\n\t\t\t\t\tthis.error = \"OCTET STRING may consists of OCTET STRINGs only\";\n\t\t\t\t\treturn (-1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.isHexOnly = true;\n\n\t\t\tresultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n\t\t\tthis.blockLength = inputLength;\n\t\t}\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tif(this.isConstructed === true)\n\t\t\treturn LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly);\n\n\t\tlet retBuf = new ArrayBuffer(this.valueHex.byteLength);\n\n\t\tif(sizeOnly === true)\n\t\t\treturn retBuf;\n\n\t\tif(this.valueHex.byteLength === 0)\n\t\t\treturn retBuf;\n\n\t\tretBuf = this.valueHex.slice(0);\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"OctetStringValueBlock\";\n\t}\n\t//**********************************************************************************\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.isConstructed = this.isConstructed;\n\t\tobject.isHexOnly = this.isHexOnly;\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class OctetString extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"OctetString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalOctetStringValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 4; // OctetString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tthis.valueBlock.isConstructed = this.idBlock.isConstructed;\n\t\tthis.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n\n\t\t//region Ability to encode empty OCTET STRING\n\t\tif(inputLength === 0)\n\t\t{\n\t\t\tif(this.idBlock.error.length === 0)\n\t\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\t\tif(this.lenBlock.error.length === 0)\n\t\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\t\treturn inputOffset;\n\t\t}\n\t\t//endregion\n\n\t\tif (!this.valueBlock.isConstructed) {\n\t\t\tconst buf = inputBuffer.slice(inputOffset, inputOffset + inputLength);\n\t\t\ttry {\n\t\t\t\tconst asn = fromBER(buf);\n\t\t\t\tif (asn.offset !== -1 && asn.offset === inputLength) {\n\t\t\t\t\tthis.valueBlock.value = [asn.result];\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// nothing\n\t\t\t}\n\t\t}\n\n\t\treturn super.fromBER(inputBuffer, inputOffset, inputLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"OCTET STRING\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Checking that two OCTETSTRINGs are equal\n\t * @param {OctetString} octetString\n\t */\n\tisEqual(octetString)\n\t{\n\t\t//region Check input type\n\t\tif((octetString instanceof OctetString) === false)\n\t\t\treturn false;\n\t\t//endregion\n\n\t\t//region Compare two JSON strings\n\t\tif(JSON.stringify(this) !== JSON.stringify(octetString))\n\t\t\treturn false;\n\t\t//endregion\n\n\t\treturn true;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\tif (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n\t\t\treturn Constructed.prototype.toString.call(this);\n\t\t} else {\n\t\t\treturn `${this.constructor.blockName()} : ${bufferToHexCodes(this.valueBlock.valueHex)}`;\n\t\t}\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 BitString type class\n//**************************************************************************************\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalBitStringValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.unusedBits = getParametersValue(parameters, \"unusedBits\", 0);\n\t\tthis.isConstructed = getParametersValue(parameters, \"isConstructed\", false);\n\t\tthis.blockLength = this.valueHex.byteLength;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Ability to decode zero-length BitString value\n\t\tif(inputLength === 0)\n\t\t\treturn inputOffset;\n\t\t//endregion\n\n\t\tlet resultOffset = (-1);\n\n\t\t//region If the BISTRING supposed to be a constructed value\n\t\tif(this.isConstructed === true)\n\t\t{\n\t\t\tresultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\n\t\t\tif(resultOffset === (-1))\n\t\t\t\treturn resultOffset;\n\n\t\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t\t{\n\t\t\t\tconst currentBlockName = this.value[i].constructor.blockName();\n\n\t\t\t\tif(currentBlockName === EndOfContent.blockName())\n\t\t\t\t{\n\t\t\t\t\tif(this.isIndefiniteForm === true)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\n\t\t\t\t\t\treturn (-1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(currentBlockName !== BitString.blockName())\n\t\t\t\t{\n\t\t\t\t\tthis.error = \"BIT STRING may consists of BIT STRINGs only\";\n\t\t\t\t\treturn (-1);\n\t\t\t\t}\n\n\t\t\t\tif((this.unusedBits > 0) && (this.value[i].valueBlock.unusedBits > 0))\n\t\t\t\t{\n\t\t\t\t\tthis.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\n\t\t\t\t\treturn (-1);\n\t\t\t\t}\n\n\t\t\t\tthis.unusedBits = this.value[i].valueBlock.unusedBits;\n\t\t\t\tif(this.unusedBits > 7)\n\t\t\t\t{\n\t\t\t\t\tthis.error = \"Unused bits for BitString must be in range 0-7\";\n\t\t\t\t\treturn (-1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn resultOffset;\n\t\t}\n\t\t//endregion\n\t\t//region If the BitString supposed to be a primitive value\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\n\t\tthis.unusedBits = intBuffer[0];\n\t\t\n\t\tif(this.unusedBits > 7)\n\t\t{\n\t\t\tthis.error = \"Unused bits for BitString must be in range 0-7\";\n\t\t\treturn (-1);\n\t\t}\n\n\t\tif (!this.unusedBits) {\n\t\t\tconst buf = inputBuffer.slice(inputOffset + 1, inputOffset + inputLength);\n\t\t\ttry {\n\t\t\t\tconst asn = fromBER(buf);\n\t\t\t\tif (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\n\t\t\t\t\tthis.value = [asn.result];\n\t\t\t\t}\n\t\t\t} catch(e) {\n\t\t\t\t// nothing\n\t\t\t}\n\t\t}\n\n\t\t//region Copy input buffer to internal buffer\n\t\tthis.valueHex = new ArrayBuffer(intBuffer.length - 1);\n\t\tconst view = new Uint8Array(this.valueHex);\n\t\tfor(let i = 0; i < (inputLength - 1); i++)\n\t\t\tview[i] = intBuffer[i + 1];\n\t\t//endregion\n\n\t\tthis.blockLength = intBuffer.length;\n\n\t\treturn (inputOffset + inputLength);\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tif(this.isConstructed === true)\n\t\t\treturn LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly);\n\n\t\tif(sizeOnly === true)\n\t\t\treturn (new ArrayBuffer(this.valueHex.byteLength + 1));\n\n\t\tif(this.valueHex.byteLength === 0)\n\t\t\treturn (new ArrayBuffer(0));\n\n\t\tconst curView = new Uint8Array(this.valueHex);\n\n\t\tconst retBuf = new ArrayBuffer(this.valueHex.byteLength + 1);\n\t\tconst retView = new Uint8Array(retBuf);\n\n\t\tretView[0] = this.unusedBits;\n\n\t\tfor(let i = 0; i < this.valueHex.byteLength; i++)\n\t\t\tretView[i + 1] = curView[i];\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BitStringValueBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {{blockName, blockLength, error, warnings, valueBeforeDecode}|{blockName: string, blockLength: number, error: string, warnings: Array.<string>, valueBeforeDecode: string}}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.unusedBits = this.unusedBits;\n\t\tobject.isConstructed = this.isConstructed;\n\t\tobject.isHexOnly = this.isHexOnly;\n\t\tobject.valueHex = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class BitString extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"BitString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalBitStringValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 3; // BitString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BIT STRING\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\t//region Ability to encode empty BitString\n\t\tif(inputLength === 0)\n\t\t\treturn inputOffset;\n\t\t//endregion\n\n\t\tthis.valueBlock.isConstructed = this.idBlock.isConstructed;\n\t\tthis.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\n\n\t\treturn super.fromBER(inputBuffer, inputOffset, inputLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Checking that two BITSTRINGs are equal\n\t * @param {BitString} bitString\n\t */\n\tisEqual(bitString)\n\t{\n\t\t//region Check input type\n\t\tif((bitString instanceof BitString) === false)\n\t\t\treturn false;\n\t\t//endregion\n\n\t\t//region Compare two JSON strings\n\t\tif(JSON.stringify(this) !== JSON.stringify(bitString))\n\t\t\treturn false;\n\t\t//endregion\n\n\t\treturn true;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\tif (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\n\t\t\treturn Constructed.prototype.toString.call(this);\n\t\t} else {\n\t\t\t// convert bytes to bits\n\t\t\tconst bits = [];\n\t\t\tconst valueHex = new Uint8Array(this.valueBlock.valueHex);\n\t\t\tfor (const byte of valueHex) {\n\t\t\t\tbits.push(byte.toString(2).padStart(8, \"0\"));\n\t\t\t}\n\t\t\treturn `${this.constructor.blockName()} : ${bits.join(\"\")}`;\n\t\t}\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 Integer type class\n//**************************************************************************************\n/**\n * @extends ValueBlock\n */\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalIntegerValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tif(\"value\" in parameters)\n\t\t\tthis.valueDec = parameters.value;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Setter for \"valueHex\"\n\t * @param {ArrayBuffer} _value\n\t */\n\tset valueHex(_value)\n\t{\n\t\tthis._valueHex = _value.slice(0);\n\n\t\tif(_value.byteLength >= 4)\n\t\t{\n\t\t\tthis.warnings.push(\"Too big Integer for decoding, hex only\");\n\t\t\tthis.isHexOnly = true;\n\t\t\tthis._valueDec = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.isHexOnly = false;\n\n\t\t\tif(_value.byteLength > 0)\n\t\t\t\tthis._valueDec = utilDecodeTC.call(this);\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Getter for \"valueHex\"\n\t * @returns {ArrayBuffer}\n\t */\n\tget valueHex()\n\t{\n\t\treturn this._valueHex;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Getter for \"valueDec\"\n\t * @param {number} _value\n\t */\n\tset valueDec(_value)\n\t{\n\t\tthis._valueDec = _value;\n\n\t\tthis.isHexOnly = false;\n\t\tthis._valueHex = utilEncodeTC(_value);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Getter for \"valueDec\"\n\t * @returns {number}\n\t */\n\tget valueDec()\n\t{\n\t\treturn this._valueDec;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from DER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 DER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 DER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @param {number} [expectedLength=0] Expected length of converted \"valueHex\" buffer\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0)\n\t{\n\t\tconst offset = this.fromBER(inputBuffer, inputOffset, inputLength);\n\t\tif(offset === (-1))\n\t\t\treturn offset;\n\n\t\tconst view = new Uint8Array(this._valueHex);\n\n\t\tif((view[0] === 0x00) && ((view[1] & 0x80) !== 0))\n\t\t{\n\t\t\tconst updatedValueHex = new ArrayBuffer(this._valueHex.byteLength - 1);\n\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\n\n\t\t\tupdatedView.set(new Uint8Array(this._valueHex, 1, this._valueHex.byteLength - 1));\n\n\t\t\tthis._valueHex = updatedValueHex.slice(0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(expectedLength !== 0)\n\t\t\t{\n\t\t\t\tif(this._valueHex.byteLength < expectedLength)\n\t\t\t\t{\n\t\t\t\t\tif((expectedLength - this._valueHex.byteLength) > 1)\n\t\t\t\t\t\texpectedLength = this._valueHex.byteLength + 1;\n\t\t\t\t\t\n\t\t\t\t\tconst updatedValueHex = new ArrayBuffer(expectedLength);\n\t\t\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\n\n\t\t\t\t\tupdatedView.set(view, expectedLength - this._valueHex.byteLength);\n\n\t\t\t\t\tthis._valueHex = updatedValueHex.slice(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn offset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (DER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoDER(sizeOnly = false)\n\t{\n\t\tconst view = new Uint8Array(this._valueHex);\n\n\t\tswitch(true)\n\t\t{\n\t\t\tcase ((view[0] & 0x80) !== 0):\n\t\t\t\t{\n\t\t\t\t\tconst updatedValueHex = new ArrayBuffer(this._valueHex.byteLength + 1);\n\t\t\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\n\n\t\t\t\t\tupdatedView[0] = 0x00;\n\t\t\t\t\tupdatedView.set(view, 1);\n\n\t\t\t\t\tthis._valueHex = updatedValueHex.slice(0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\n\t\t\t\t{\n\t\t\t\t\tconst updatedValueHex = new ArrayBuffer(this._valueHex.byteLength - 1);\n\t\t\t\t\tconst updatedView = new Uint8Array(updatedValueHex);\n\n\t\t\t\t\tupdatedView.set(new Uint8Array(this._valueHex, 1, this._valueHex.byteLength - 1));\n\n\t\t\t\t\tthis._valueHex = updatedValueHex.slice(0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn this.toBER(sizeOnly);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\n\t\tif(resultOffset === (-1))\n\t\t\treturn resultOffset;\n\n\t\tthis.blockLength = inputLength;\n\n\t\treturn (inputOffset + inputLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\t//noinspection JSCheckFunctionSignatures\n\t\treturn this.valueHex.slice(0);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"IntegerValueBlock\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.valueDec = this.valueDec;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert current value to decimal string representation\n\t */\n\ttoString()\n\t{\n\t\t//region Aux functions\n\t\tfunction viewAdd(first, second)\n\t\t{\n\t\t\t//region Initial variables\n\t\t\tconst c = new Uint8Array([0]);\n\t\t\t\n\t\t\tlet firstView = new Uint8Array(first);\n\t\t\tlet secondView = new Uint8Array(second);\n\t\t\t\n\t\t\tlet firstViewCopy = firstView.slice(0);\n\t\t\tconst firstViewCopyLength = firstViewCopy.length - 1;\n\t\t\tlet secondViewCopy = secondView.slice(0);\n\t\t\tconst secondViewCopyLength = secondViewCopy.length - 1;\n\t\t\t\n\t\t\tlet value = 0;\n\t\t\t\n\t\t\tconst max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\n\t\t\t\n\t\t\tlet counter = 0;\n\t\t\t//endregion\n\t\t\t\n\t\t\tfor(let i = max; i >= 0; i--, counter++)\n\t\t\t{\n\t\t\t\tswitch(true)\n\t\t\t\t{\n\t\t\t\t\tcase (counter < secondViewCopy.length):\n\t\t\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] + c[0];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tc[0] = value / 10;\n\t\t\t\t\n\t\t\t\tswitch(true)\n\t\t\t\t{\n\t\t\t\t\tcase (counter >= firstViewCopy.length):\n\t\t\t\t\t\tfirstViewCopy = utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value % 10;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(c[0] > 0)\n\t\t\t\tfirstViewCopy = utilConcatView(c, firstViewCopy);\n\t\t\t\n\t\t\treturn firstViewCopy.slice(0);\n\t\t}\n\t\t\n\t\tfunction power2(n)\n\t\t{\n\t\t\tif(n >= powers2.length)\n\t\t\t{\n\t\t\t\tfor(let p = powers2.length; p <= n; p++)\n\t\t\t\t{\n\t\t\t\t\tconst c = new Uint8Array([0]);\n\t\t\t\t\tlet digits = (powers2[p - 1]).slice(0);\n\t\t\t\t\t\n\t\t\t\t\tfor(let i = (digits.length - 1); i >=0; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\n\t\t\t\t\t\tc[0] = newValue[0] / 10;\n\t\t\t\t\t\tdigits[i] = newValue[0] % 10;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (c[0] > 0)\n\t\t\t\t\t\tdigits = utilConcatView(c, digits);\n\t\t\t\t\t\n\t\t\t\t\tpowers2.push(digits);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn powers2[n];\n\t\t}\n\t\t\n\t\tfunction viewSub(first, second)\n\t\t{\n\t\t\t//region Initial variables\n\t\t\tlet b = 0;\n\t\t\t\n\t\t\tlet firstView = new Uint8Array(first);\n\t\t\tlet secondView = new Uint8Array(second);\n\t\t\t\n\t\t\tlet firstViewCopy = firstView.slice(0);\n\t\t\tconst firstViewCopyLength = firstViewCopy.length - 1;\n\t\t\tlet secondViewCopy = secondView.slice(0);\n\t\t\tconst secondViewCopyLength = secondViewCopy.length - 1;\n\t\t\t\n\t\t\tlet value;\n\t\t\t\n\t\t\tlet counter = 0;\n\t\t\t//endregion\n\t\t\t\n\t\t\tfor(let i = secondViewCopyLength; i >= 0; i--, counter++)\n\t\t\t{\n\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\n\t\t\t\t\n\t\t\t\tswitch(true)\n\t\t\t\t{\n\t\t\t\t\tcase (value < 0):\n\t\t\t\t\t\tb = 1;\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value + 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(b > 0)\n\t\t\t{\n\t\t\t\tfor(let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++)\n\t\t\t\t{\n\t\t\t\t\tvalue = firstViewCopy[firstViewCopyLength - counter] - b;\n\t\t\t\t\t\n\t\t\t\t\tif(value < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tb = 1;\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value + 10;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t\tfirstViewCopy[firstViewCopyLength - counter] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn firstViewCopy.slice();\n\t\t}\n\t\t//endregion\n\t\t\n\t\t//region Initial variables\n\t\tconst firstBit = (this._valueHex.byteLength * 8) - 1;\n\t\t\n\t\tlet digits = new Uint8Array((this._valueHex.byteLength * 8) / 3);\n\t\tlet bitNumber = 0;\n\t\tlet currentByte;\n\t\t\n\t\tconst asn1View = new Uint8Array(this._valueHex);\n\t\t\n\t\tlet result = \"\";\n\t\t\n\t\tlet flag = false;\n\t\t//endregion\n\t\t\n\t\t//region Calculate number\n\t\tfor(let byteNumber = (this._valueHex.byteLength - 1); byteNumber >= 0; byteNumber--)\n\t\t{\n\t\t\tcurrentByte = asn1View[byteNumber];\n\t\t\t\n\t\t\tfor(let i = 0; i < 8; i++)\n\t\t\t{\n\t\t\t\tif((currentByte & 1) === 1)\n\t\t\t\t{\n\t\t\t\t\tswitch(bitNumber)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase firstBit:\n\t\t\t\t\t\t\tdigits = viewSub(power2(bitNumber), digits);\n\t\t\t\t\t\t\tresult = \"-\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdigits = viewAdd(digits, power2(bitNumber));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbitNumber++;\n\t\t\t\tcurrentByte >>= 1;\n\t\t\t}\n\t\t}\n\t\t//endregion\n\t\t\n\t\t//region Print number\n\t\tfor(let i = 0; i < digits.length; i++)\n\t\t{\n\t\t\tif(digits[i])\n\t\t\t\tflag = true;\n\t\t\t\n\t\t\tif(flag)\n\t\t\t\tresult += digitsString.charAt(digits[i]);\n\t\t}\n\t\t\n\t\tif(flag === false)\n\t\t\tresult += digitsString.charAt(0);\n\t\t//endregion\n\t\t\n\t\treturn result;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nexport class Integer extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Integer\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalIntegerValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 2; // Integer\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"INTEGER\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Compare two Integer object, or Integer and ArrayBuffer objects\n\t * @param {!Integer|ArrayBuffer} otherValue\n\t * @returns {boolean}\n\t */\n\tisEqual(otherValue)\n\t{\n\t\tif(otherValue instanceof Integer)\n\t\t{\n\t\t\tif(this.valueBlock.isHexOnly && otherValue.valueBlock.isHexOnly) // Compare two ArrayBuffers\n\t\t\t\treturn isEqualBuffer(this.valueBlock.valueHex, otherValue.valueBlock.valueHex);\n\n\t\t\tif(this.valueBlock.isHexOnly === otherValue.valueBlock.isHexOnly)\n\t\t\t\treturn (this.valueBlock.valueDec === otherValue.valueBlock.valueDec);\n\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif(otherValue instanceof ArrayBuffer)\n\t\t\treturn isEqualBuffer(this.valueBlock.valueHex, otherValue);\n\n\t\treturn false;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert current Integer value from BER into DER format\n\t * @returns {Integer}\n\t */\n\tconvertToDER()\n\t{\n\t\tconst integer = new Integer({ valueHex: this.valueBlock.valueHex });\n\t\tinteger.valueBlock.toDER();\n\n\t\treturn integer;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convert current Integer value from DER to BER format\n\t * @returns {Integer}\n\t */\n\tconvertFromDER()\n\t{\n\t\tconst expectedLength = (this.valueBlock.valueHex.byteLength % 2) ? (this.valueBlock.valueHex.byteLength + 1) : this.valueBlock.valueHex.byteLength;\n\t\tconst integer = new Integer({ valueHex: this.valueBlock.valueHex });\n\t\tinteger.valueBlock.fromDER(integer.valueBlock.valueHex, 0, integer.valueBlock.valueHex.byteLength, expectedLength);\n\t\t\n\t\treturn integer;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\tassertBigInt();\n\t\tconst hex = bufferToHexCodes(this.valueBlock.valueHex);\n\t\tconst bigInt = BigInt(`0x${hex}`);\n\t\treturn `${this.constructor.blockName()} : ${bigInt.toString()}`;\n\t}\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 Enumerated type class\n//**************************************************************************************\nexport class Enumerated extends Integer\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Enumerated\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 10; // Enumerated\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"ENUMERATED\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of ASN.1 ObjectIdentifier type class\n//**************************************************************************************\nclass LocalSidValueBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalSidValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {number} [valueDec]\n\t * @property {boolean} [isFirstSid]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.valueDec = getParametersValue(parameters, \"valueDec\", -1);\n\t\tthis.isFirstSid = getParametersValue(parameters, \"isFirstSid\", false);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"sidBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tif(inputLength === 0)\n\t\t\treturn inputOffset;\n\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif(checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\n\t\tthis.valueHex = new ArrayBuffer(inputLength);\n\t\tlet view = new Uint8Array(this.valueHex);\n\n\t\tfor(let i = 0; i < inputLength; i++)\n\t\t{\n\t\t\tview[i] = intBuffer[i] & 0x7F;\n\n\t\t\tthis.blockLength++;\n\n\t\t\tif((intBuffer[i] & 0x80) === 0x00)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//region Ajust size of valueHex buffer\n\t\tconst tempValueHex = new ArrayBuffer(this.blockLength);\n\t\tconst tempView = new Uint8Array(tempValueHex);\n\n\t\tfor(let i = 0; i < this.blockLength; i++)\n\t\t\ttempView[i] = view[i];\n\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tthis.valueHex = tempValueHex.slice(0);\n\t\tview = new Uint8Array(this.valueHex);\n\t\t//endregion\n\n\t\tif((intBuffer[this.blockLength - 1] & 0x80) !== 0x00)\n\t\t{\n\t\t\tthis.error = \"End of input reached before message was fully decoded\";\n\t\t\treturn (-1);\n\t\t}\n\n\t\tif(view[0] === 0x00)\n\t\t\tthis.warnings.push(\"Needlessly long format of SID encoding\");\n\n\t\tif(this.blockLength <= 8)\n\t\t\tthis.valueDec = utilFromBase(view, 7);\n\t\telse\n\t\t{\n\t\t\tthis.isHexOnly = true;\n\t\t\tthis.warnings.push(\"Too big SID for decoding, hex only\");\n\t\t}\n\n\t\treturn (inputOffset + this.blockLength);\n\t}\n//**********************************************************************************\n\t/**\n\t * Save a BigInt value immediately as an array of octects.\n\t */\n set valueBigInt(value) {\n\n\tassertBigInt();\n\n\tlet bits = BigInt(value).toString(2);\n\twhile (bits.length % 7) {\n\t\tbits = '0' + bits\n\t}\n\tconst bytes = new Uint8Array(bits.length / 7)\n\tfor (let i = 0; i < bytes.length; i++) {\n\t\tbytes[i] = parseInt(bits.slice(i*7, i*7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0)\n\t}\n\tthis.fromBER(bytes.buffer, 0, bytes.length)\n}\n//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\t//region Initial variables\n\t\tlet retBuf;\n\t\tlet retView;\n\t\t//endregion\n\n\t\tif(this.isHexOnly)\n\t\t{\n\t\t\tif(sizeOnly === true)\n\t\t\t\treturn (new ArrayBuffer(this.valueHex.byteLength));\n\n\t\t\tconst curView = new Uint8Array(this.valueHex);\n\n\t\t\tretBuf = new ArrayBuffer(this.blockLength);\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tfor(let i = 0; i < (this.blockLength - 1); i++)\n\t\t\t\tretView[i] = curView[i] | 0x80;\n\n\t\t\tretView[this.blockLength - 1] = curView[this.blockLength - 1];\n\n\t\t\treturn retBuf;\n\t\t}\n\n\t\tconst encodedBuf = utilToBase(this.valueDec, 7);\n\t\tif(encodedBuf.byteLength === 0)\n\t\t{\n\t\t\tthis.error = \"Error during encoding SID value\";\n\t\t\treturn (new ArrayBuffer(0));\n\t\t}\n\n\t\tretBuf = new ArrayBuffer(encodedBuf.byteLength);\n\n\t\tif(sizeOnly === false)\n\t\t{\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tfor(let i = 0; i < (encodedBuf.byteLength - 1); i++)\n\t\t\t\tretView[i] = encodedView[i] | 0x80;\n\n\t\t\tretView[encodedBuf.byteLength - 1] = encodedView[encodedBuf.byteLength - 1];\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Create string representation of current SID block\n\t * @returns {string}\n\t */\n\ttoString()\n\t{\n\t\tlet result = \"\";\n\n\t\tif(this.isHexOnly === true)\n\t\t\tresult = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\t\telse\n\t\t{\n\t\t\tif(this.isFirstSid)\n\t\t\t{\n\t\t\t\tlet sidValue = this.valueDec;\n\n\t\t\t\tif(this.valueDec <= 39)\n\t\t\t\t\tresult = \"0.\";\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(this.valueDec <= 79)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = \"1.\";\n\t\t\t\t\t\tsidValue -= 40;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = \"2.\";\n\t\t\t\t\t\tsidValue -= 80;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult += sidValue.toString();\n\t\t\t}\n\t\t\telse\n\t\t\t\tresult = this.valueDec.toString();\n\t\t}\n\n\t\treturn result;\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.valueDec = this.valueDec;\n\t\tobject.isFirstSid = this.isFirstSid;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nclass LocalObjectIdentifierValueBlock extends ValueBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalObjectIdentifierValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.fromString(getParametersValue(parameters, \"value\", \"\"));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tlet resultOffset = inputOffset;\n\n\t\twhile(inputLength > 0)\n\t\t{\n\t\t\tconst sidBlock = new LocalSidValueBlock();\n\t\t\tresultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n\t\t\tif(resultOffset === (-1))\n\t\t\t{\n\t\t\t\tthis.blockLength = 0;\n\t\t\t\tthis.error = sidBlock.error;\n\t\t\t\treturn resultOffset;\n\t\t\t}\n\n\t\t\tif(this.value.length === 0)\n\t\t\t\tsidBlock.isFirstSid = true;\n\n\t\t\tthis.blockLength += sidBlock.blockLength;\n\t\t\tinputLength -= sidBlock.blockLength;\n\n\t\t\tthis.value.push(sidBlock);\n\t\t}\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tlet retBuf = new ArrayBuffer(0);\n\n\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t{\n\t\t\tconst valueBuf = this.value[i].toBER(sizeOnly);\n\t\t\tif(valueBuf.byteLength === 0)\n\t\t\t{\n\t\t\t\tthis.error = this.value[i].error;\n\t\t\t\treturn (new ArrayBuffer(0));\n\t\t\t}\n\n\t\t\tretBuf = utilConcatBuf(retBuf, valueBuf);\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Create \"LocalObjectIdentifierValueBlock\" class from string\n\t * @param {string} string Input string to convert from\n\t * @returns {boolean}\n\t */\n\tfromString(string)\n\t{\n\t\tthis.value = []; // Clear existing SID values\n\n\t\tlet pos1 = 0;\n\t\tlet pos2 = 0;\n\n\t\tlet sid = \"\";\n\n\t\tlet flag = false;\n\n\t\tdo\n\t\t{\n\t\t\tpos2 = string.indexOf(\".\", pos1);\n\t\t\tif(pos2 === (-1))\n\t\t\t\tsid = string.substr(pos1);\n\t\t\telse\n\t\t\t\tsid = string.substr(pos1, pos2 - pos1);\n\n\t\t\tpos1 = pos2 + 1;\n\n\t\t\tif(flag)\n\t\t\t{\n\t\t\t\tconst sidBlock = this.value[0];\n\n\t\t\t\tlet plus = 0;\n\n\t\t\t\tswitch(sidBlock.valueDec)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tplus = 40;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tplus = 80;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.value = []; // clear SID array\n\t\t\t\t\t\treturn false; // ???\n\t\t\t\t}\n\n\t\t\t\tconst parsedSID = parseInt(sid, 10);\n\t\t\t\tif(isNaN(parsedSID))\n\t\t\t\t\treturn true;\n\n\t\t\t\tsidBlock.valueDec = parsedSID + plus;\n\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst sidBlock = new LocalSidValueBlock();\n        if (sid > Number.MAX_SAFE_INTEGER) {\n\t\t\t\t\tassertBigInt();\n\t\t\t\t\tconst sidValue = BigInt(sid);\n          sidBlock.valueBigInt = sidValue\n        } else {\n          sidBlock.valueDec = parseInt(sid, 10);\n          if (isNaN(sidBlock.valueDec)) return true;  \n        }\n\n\t\t\t\tif(this.value.length === 0)\n\t\t\t\t{\n\t\t\t\t\tsidBlock.isFirstSid = true;\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\n\t\t\t\tthis.value.push(sidBlock);\n\t\t\t}\n\t\t} while(pos2 !== (-1));\n\n\t\treturn true;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Converts \"LocalObjectIdentifierValueBlock\" class to string\n\t * @returns {string}\n\t */\n\ttoString()\n\t{\n\t\tlet result = \"\";\n\t\tlet isHexOnly = false;\n\n\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t{\n\t\t\tisHexOnly = this.value[i].isHexOnly;\n\n\t\t\tlet sidStr = this.value[i].toString();\n\n\t\t\tif(i !== 0)\n\t\t\t\tresult = `${result}.`;\n\n\t\t\tif(isHexOnly)\n\t\t\t{\n\t\t\t\tsidStr = `{${sidStr}}`;\n\n\t\t\t\tif(this.value[i].isFirstSid)\n\t\t\t\t\tresult = `2.{${sidStr} - 80}`;\n\t\t\t\telse\n\t\t\t\t\tresult += sidStr;\n\t\t\t}\n\t\t\telse\n\t\t\t\tresult += sidStr;\n\t\t}\n\n\t\treturn result;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"ObjectIdentifierValueBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.value = this.toString();\n\t\tobject.sidArray = [];\n\t\tfor(let i = 0; i < this.value.length; i++)\n\t\t\tobject.sidArray.push(this.value[i].toJSON());\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends BaseBlock\n */\nexport class ObjectIdentifier extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"ObjectIdentifier\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalObjectIdentifierValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 6; // OBJECT IDENTIFIER\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"OBJECT IDENTIFIER\";\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${this.valueBlock.toString()}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of all string's classes\n//**************************************************************************************\nclass LocalUtf8StringValueBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Constructor for \"LocalUtf8StringValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.isHexOnly = true;\n\t\tthis.value = \"\"; // String representation of decoded ArrayBuffer\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"Utf8StringValueBlock\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.value = this.value;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends BaseBlock\n */\nexport class Utf8String extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Utf8String\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalUtf8StringValueBlock);\n\n\t\tif(\"value\" in parameters)\n\t\t\tthis.fromString(parameters.value);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 12; // Utf8String\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"UTF8String\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ArrayBuffer into ASN.1 internal string\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t */\n\tfromBuffer(inputBuffer)\n\t{\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint8Array(inputBuffer));\n\n\t\ttry\n\t\t{\n\t\t\t//noinspection JSDeprecatedSymbols\n\t\t\tthis.valueBlock.value = decodeURIComponent(escape(this.valueBlock.value));\n\t\t}\n\t\tcatch(ex)\n\t\t{\n\t\t\tthis.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\n\t\t}\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting JavaScript string into ASN.1 internal class\n\t * @param {!string} inputString ASN.1 BER encoded array\n\t */\n\tfromString(inputString)\n\t{\n\t\t//noinspection JSDeprecatedSymbols\n\t\tconst str = unescape(encodeURIComponent(inputString));\n\t\tconst strLen = str.length;\n\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLen);\n\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\n\n\t\tfor(let i = 0; i < strLen; i++)\n\t\t\tview[i] = str.charCodeAt(i);\n\n\t\tthis.valueBlock.value = inputString;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${this.valueBlock.value}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//region Declaration of ASN.1 RelativeObjectIdentifier type class\n//**************************************************************************************\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalRelativeSidValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {number} [valueDec]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.valueDec = getParametersValue(parameters, \"valueDec\", -1);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"relativeSidBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tif (inputLength === 0)\n\t\t\treturn inputOffset;\n\n\t\t//region Basic check for parameters\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tif (checkBufferParams(this, inputBuffer, inputOffset, inputLength) === false)\n\t\t\treturn (-1);\n\t\t//endregion\n\n\t\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\n\t\tthis.valueHex = new ArrayBuffer(inputLength);\n\t\tlet view = new Uint8Array(this.valueHex);\n\n\t\tfor (let i = 0; i < inputLength; i++)\n\t\t{\n\t\t\tview[i] = intBuffer[i] & 0x7F;\n\n\t\t\tthis.blockLength++;\n\n\t\t\tif ((intBuffer[i] & 0x80) === 0x00)\n\t\t\t\tbreak;\n\t\t}\n\n\t\t//region Ajust size of valueHex buffer\n\t\tconst tempValueHex = new ArrayBuffer(this.blockLength);\n\t\tconst tempView = new Uint8Array(tempValueHex);\n\n\t\tfor (let i = 0; i < this.blockLength; i++)\n\t\t\ttempView[i] = view[i];\n\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tthis.valueHex = tempValueHex.slice(0);\n\t\tview = new Uint8Array(this.valueHex);\n\t\t//endregion\n\n\t\tif ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00)\n\t\t{\n\t\t\tthis.error = \"End of input reached before message was fully decoded\";\n\t\t\treturn (-1);\n\t\t}\n\n\t\tif (view[0] === 0x00)\n\t\t\tthis.warnings.push(\"Needlessly long format of SID encoding\");\n\n\t\tif (this.blockLength <= 8)\n\t\t\tthis.valueDec = utilFromBase(view, 7);\n\t\telse\n\t\t{\n\t\t\tthis.isHexOnly = true;\n\t\t\tthis.warnings.push(\"Too big SID for decoding, hex only\");\n\t\t}\n\n\t\treturn (inputOffset + this.blockLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\t//region Initial variables\n\t\tlet retBuf;\n\t\tlet retView;\n\t\t//endregion\n\n\t\tif (this.isHexOnly)\n\t\t{\n\t\t\tif (sizeOnly === true)\n\t\t\t\treturn (new ArrayBuffer(this.valueHex.byteLength));\n\n\t\t\tconst curView = new Uint8Array(this.valueHex);\n\n\t\t\tretBuf = new ArrayBuffer(this.blockLength);\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tfor (let i = 0; i < (this.blockLength - 1); i++)\n\t\t\t\tretView[i] = curView[i] | 0x80;\n\n\t\t\tretView[this.blockLength - 1] = curView[this.blockLength - 1];\n\n\t\t\treturn retBuf;\n\t\t}\n\n\t\tconst encodedBuf = utilToBase(this.valueDec, 7);\n\t\tif (encodedBuf.byteLength === 0)\n\t\t{\n\t\t\tthis.error = \"Error during encoding SID value\";\n\t\t\treturn (new ArrayBuffer(0));\n\t\t}\n\n\t\tretBuf = new ArrayBuffer(encodedBuf.byteLength);\n\n\t\tif (sizeOnly === false)\n\t\t{\n\t\t\tconst encodedView = new Uint8Array(encodedBuf);\n\t\t\tretView = new Uint8Array(retBuf);\n\n\t\t\tfor (let i = 0; i < (encodedBuf.byteLength - 1); i++)\n\t\t\t\tretView[i] = encodedView[i] | 0x80;\n\n\t\t\tretView[encodedBuf.byteLength - 1] = encodedView[encodedBuf.byteLength - 1];\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Create string representation of current SID block\n\t * @returns {string}\n\t */\n\ttoString()\n\t{\n\t\tlet result = \"\";\n\n\t\tif (this.isHexOnly === true)\n\t\t\tresult = bufferToHexCodes(this.valueHex, 0, this.valueHex.byteLength);\n\t\telse {\n\t\t\tresult = this.valueDec.toString();\n\t\t}\n\n\t\treturn result;\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry {\n\t\t\tobject = super.toJSON();\n\t\t} catch (ex) {}\n\t\t//endregion\n\n\t\tobject.valueDec = this.valueDec;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalRelativeObjectIdentifierValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.fromString(getParametersValue(parameters, \"value\", \"\"));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tlet resultOffset = inputOffset;\n\n\t\twhile (inputLength > 0)\n\t\t{\n\t\t\tconst sidBlock = new LocalRelativeSidValueBlock();\n\t\t\tresultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\n\t\t\tif (resultOffset === (-1))\n\t\t\t{\n\t\t\t\tthis.blockLength = 0;\n\t\t\t\tthis.error = sidBlock.error;\n\t\t\t\treturn resultOffset;\n\t\t\t}\n\n\t\t\tthis.blockLength += sidBlock.blockLength;\n\t\t\tinputLength -= sidBlock.blockLength;\n\n\t\t\tthis.value.push(sidBlock);\n\t\t}\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\tlet retBuf = new ArrayBuffer(0);\n\n\t\tfor (let i = 0; i < this.value.length; i++)\n\t\t{\n\t\t\tconst valueBuf = this.value[i].toBER(sizeOnly);\n\t\t\tif (valueBuf.byteLength === 0)\n\t\t\t{\n\t\t\t\tthis.error = this.value[i].error;\n\t\t\t\treturn (new ArrayBuffer(0));\n\t\t\t}\n\n\t\t\tretBuf = utilConcatBuf(retBuf, valueBuf);\n\t\t}\n\n\t\treturn retBuf;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Create \"LocalRelativeObjectIdentifierValueBlock\" class from string\n\t * @param {string} string Input string to convert from\n\t * @returns {boolean}\n\t */\n\tfromString(string)\n\t{\n\t\tthis.value = []; // Clear existing SID values\n\n\t\tlet pos1 = 0;\n\t\tlet pos2 = 0;\n\n\t\tlet sid = \"\";\n\n\t\tdo\n\t\t{\n\t\t\tpos2 = string.indexOf(\".\", pos1);\n\t\t\tif (pos2 === (-1))\n\t\t\t\tsid = string.substr(pos1);\n\t\t\telse\n\t\t\t\tsid = string.substr(pos1, pos2 - pos1);\n\n\t\t\tpos1 = pos2 + 1;\n\n\t\t\tconst sidBlock = new LocalRelativeSidValueBlock();\n\t\t\tsidBlock.valueDec = parseInt(sid, 10);\n\t\t\tif (isNaN(sidBlock.valueDec))\n\t\t\t\treturn true;\n\n\t\t\tthis.value.push(sidBlock);\n\n\t\t} while (pos2 !== (-1));\n\n\t\treturn true;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Converts \"LocalRelativeObjectIdentifierValueBlock\" class to string\n\t * @returns {string}\n\t */\n\ttoString()\n\t{\n\t\tlet result = \"\";\n\t\tlet isHexOnly = false;\n\n\t\tfor (let i = 0; i < this.value.length; i++)\n\t\t{\n\t\t\tisHexOnly = this.value[i].isHexOnly;\n\n\t\t\tlet sidStr = this.value[i].toString();\n\n\t\t\tif (i !== 0)\n\t\t\t\tresult = `${result}.`;\n\n\t\t\tif (isHexOnly)\n\t\t\t{\n\t\t\t\tsidStr = `{${sidStr}}`;\n\t\t\t\tresult += sidStr;\n\t\t\t} else\n\t\t\t\tresult += sidStr;\n\t\t}\n\n\t\treturn result;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"RelativeObjectIdentifierValueBlock\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t} catch (ex) {}\n\t\t//endregion\n\n\t\tobject.value = this.toString();\n\t\tobject.sidArray = [];\n\t\tfor (let i = 0; i < this.value.length; i++)\n\t\t\tobject.sidArray.push(this.value[i].toJSON());\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends BaseBlock\n */\nexport class RelativeObjectIdentifier extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"RelativeObjectIdentifier\" class\n\t * @param {Object} [parameters={}]\n\t * @property {ArrayBuffer} [valueHex]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalRelativeObjectIdentifierValueBlock);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 13; // RELATIVE OBJECT IDENTIFIER\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"RelativeObjectIdentifier\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n/**\n * @extends LocalBaseBlock\n * @extends HexBlock\n */\nclass LocalBmpStringValueBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalBmpStringValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.isHexOnly = true;\n\t\tthis.value = \"\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BmpStringValueBlock\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.value = this.value;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends BaseBlock\n */\nexport class BmpString extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"BmpString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalBmpStringValueBlock);\n\n\t\tif(\"value\" in parameters)\n\t\t\tthis.fromString(parameters.value);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 30; // BmpString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"BMPString\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ArrayBuffer into ASN.1 internal string\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t */\n\tfromBuffer(inputBuffer)\n\t{\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tconst copyBuffer = inputBuffer.slice(0);\n\t\tconst valueView = new Uint8Array(copyBuffer);\n\n\t\tfor(let i = 0; i < valueView.length; i += 2)\n\t\t{\n\t\t\tconst temp = valueView[i];\n\n\t\t\tvalueView[i] = valueView[i + 1];\n\t\t\tvalueView[i + 1] = temp;\n\t\t}\n\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint16Array(copyBuffer));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting JavaScript string into ASN.1 internal class\n\t * @param {!string} inputString ASN.1 BER encoded array\n\t */\n\tfromString(inputString)\n\t{\n\t\tconst strLength = inputString.length;\n\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLength * 2);\n\t\tconst valueHexView = new Uint8Array(this.valueBlock.valueHex);\n\n\t\tfor(let i = 0; i < strLength; i++)\n\t\t{\n\t\t\tconst codeBuf = utilToBase(inputString.charCodeAt(i), 8);\n\t\t\tconst codeView = new Uint8Array(codeBuf);\n\t\t\tif(codeView.length > 2)\n\t\t\t\tcontinue;\n\n\t\t\tconst dif = 2 - codeView.length;\n\n\t\t\tfor(let j = (codeView.length - 1); j >= 0; j--)\n\t\t\t\tvalueHexView[i * 2 + j + dif] = codeView[j];\n\t\t}\n\n\t\tthis.valueBlock.value = inputString;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${this.valueBlock.value}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nclass LocalUniversalStringValueBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalUniversalStringValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.isHexOnly = true;\n\t\tthis.value = \"\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"UniversalStringValueBlock\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.value = this.value;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends BaseBlock\n */\nexport class UniversalString extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"UniversalString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalUniversalStringValueBlock);\n\n\t\tif(\"value\" in parameters)\n\t\t\tthis.fromString(parameters.value);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 28; // UniversalString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"UniversalString\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ArrayBuffer into ASN.1 internal string\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t */\n\tfromBuffer(inputBuffer)\n\t{\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tconst copyBuffer = inputBuffer.slice(0);\n\t\tconst valueView = new Uint8Array(copyBuffer);\n\n\t\tfor(let i = 0; i < valueView.length; i += 4)\n\t\t{\n\t\t\tvalueView[i] = valueView[i + 3];\n\t\t\tvalueView[i + 1] = valueView[i + 2];\n\t\t\tvalueView[i + 2] = 0x00;\n\t\t\tvalueView[i + 3] = 0x00;\n\t\t}\n\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting JavaScript string into ASN.1 internal class\n\t * @param {!string} inputString ASN.1 BER encoded array\n\t */\n\tfromString(inputString)\n\t{\n\t\tconst strLength = inputString.length;\n\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLength * 4);\n\t\tconst valueHexView = new Uint8Array(this.valueBlock.valueHex);\n\n\t\tfor(let i = 0; i < strLength; i++)\n\t\t{\n\t\t\tconst codeBuf = utilToBase(inputString.charCodeAt(i), 8);\n\t\t\tconst codeView = new Uint8Array(codeBuf);\n\t\t\tif(codeView.length > 4)\n\t\t\t\tcontinue;\n\n\t\t\tconst dif = 4 - codeView.length;\n\n\t\t\tfor(let j = (codeView.length - 1); j >= 0; j--)\n\t\t\t\tvalueHexView[i * 4 + j + dif] = codeView[j];\n\t\t}\n\n\t\tthis.valueBlock.value = inputString;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${this.valueBlock.value}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\nclass LocalSimpleStringValueBlock extends HexBlock(LocalBaseBlock)\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalSimpleStringValueBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.value = \"\";\n\t\tthis.isHexOnly = true;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"SimpleStringValueBlock\";\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.value = this.value;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends BaseBlock\n */\nclass LocalSimpleStringBlock extends BaseBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"LocalSimpleStringBlock\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters, LocalSimpleStringValueBlock);\n\n\t\tif(\"value\" in parameters)\n\t\t\tthis.fromString(parameters.value);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"SIMPLESTRING\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ArrayBuffer into ASN.1 internal string\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t */\n\tfromBuffer(inputBuffer)\n\t{\n\t\tthis.valueBlock.value = String.fromCharCode.apply(null, new Uint8Array(inputBuffer));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting JavaScript string into ASN.1 internal class\n\t * @param {!string} inputString ASN.1 BER encoded array\n\t */\n\tfromString(inputString)\n\t{\n\t\tconst strLen = inputString.length;\n\n\t\tthis.valueBlock.valueHex = new ArrayBuffer(strLen);\n\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\n\n\t\tfor(let i = 0; i < strLen; i++)\n\t\t\tview[i] = inputString.charCodeAt(i);\n\n\t\tthis.valueBlock.value = inputString;\n\t}\n\t//**********************************************************************************\n\ttoString() {\n\t\treturn `${this.constructor.blockName()} : ${this.valueBlock.value}`;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class NumericString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"NumericString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 18; // NumericString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"NumericString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class PrintableString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"PrintableString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 19; // PrintableString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"PrintableString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class TeletexString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"TeletexString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 20; // TeletexString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"TeletexString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class VideotexString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"VideotexString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 21; // VideotexString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"VideotexString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class IA5String extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"IA5String\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 22; // IA5String\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"IA5String\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class GraphicString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"GraphicString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 25; // GraphicString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"GraphicString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class VisibleString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"VisibleString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 26; // VisibleString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"VisibleString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class GeneralString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"GeneralString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 27; // GeneralString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"GeneralString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends LocalSimpleStringBlock\n */\nexport class CharacterString extends LocalSimpleStringBlock\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"CharacterString\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 29; // CharacterString\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"CharacterString\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of all date and time classes\n//**************************************************************************************\n/**\n * @extends VisibleString\n */\nexport class UTCTime extends VisibleString\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"UTCTime\" class\n\t * @param {Object} [parameters={}]\n\t * @property {string} [value] String representatio of the date\n\t * @property {Date} [valueDate] JavaScript \"Date\" object\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.year = 0;\n\t\tthis.month = 0;\n\t\tthis.day = 0;\n\t\tthis.hour = 0;\n\t\tthis.minute = 0;\n\t\tthis.second = 0;\n\n\t\t//region Create UTCTime from ASN.1 UTC string value\n\t\tif(\"value\" in parameters)\n\t\t{\n\t\t\tthis.fromString(parameters.value);\n\n\t\t\tthis.valueBlock.valueHex = new ArrayBuffer(parameters.value.length);\n\t\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\n\n\t\t\tfor(let i = 0; i < parameters.value.length; i++)\n\t\t\t\tview[i] = parameters.value.charCodeAt(i);\n\t\t}\n\t\t//endregion\n\t\t//region Create GeneralizedTime from JavaScript Date type\n\t\tif(\"valueDate\" in parameters)\n\t\t{\n\t\t\tthis.fromDate(parameters.valueDate);\n\t\t\tthis.valueBlock.valueHex = this.toBuffer();\n\t\t}\n\t\t//endregion\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 23; // UTCTime\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ArrayBuffer into ASN.1 internal string\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t */\n\tfromBuffer(inputBuffer)\n\t{\n\t\tthis.fromString(String.fromCharCode.apply(null, new Uint8Array(inputBuffer)));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ASN.1 internal string into ArrayBuffer\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBuffer()\n\t{\n\t\tconst str = this.toString();\n\n\t\tconst buffer = new ArrayBuffer(str.length);\n\t\tconst view = new Uint8Array(buffer);\n\n\t\tfor(let i = 0; i < str.length; i++)\n\t\t\tview[i] = str.charCodeAt(i);\n\n\t\treturn buffer;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting \"Date\" object into ASN.1 internal string\n\t * @param {!Date} inputDate JavaScript \"Date\" object\n\t */\n\tfromDate(inputDate)\n\t{\n\t\tthis.year = inputDate.getUTCFullYear();\n\t\tthis.month = inputDate.getUTCMonth() + 1;\n\t\tthis.day = inputDate.getUTCDate();\n\t\tthis.hour = inputDate.getUTCHours();\n\t\tthis.minute = inputDate.getUTCMinutes();\n\t\tthis.second = inputDate.getUTCSeconds();\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Function converting ASN.1 internal string into \"Date\" object\n\t * @returns {Date}\n\t */\n\ttoDate()\n\t{\n\t\treturn (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting JavaScript string into ASN.1 internal class\n\t * @param {!string} inputString ASN.1 BER encoded array\n\t */\n\tfromString(inputString)\n\t{\n\t\t//region Parse input string\n\t\tconst parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\n\t\tconst parserArray = parser.exec(inputString);\n\t\tif(parserArray === null)\n\t\t{\n\t\t\tthis.error = \"Wrong input string for convertion\";\n\t\t\treturn;\n\t\t}\n\t\t//endregion\n\n\t\t//region Store parsed values\n\t\tconst year = parseInt(parserArray[1], 10);\n\t\tif(year >= 50)\n\t\t\tthis.year = 1900 + year;\n\t\telse\n\t\t\tthis.year = 2000 + year;\n\n\t\tthis.month = parseInt(parserArray[2], 10);\n\t\tthis.day = parseInt(parserArray[3], 10);\n\t\tthis.hour = parseInt(parserArray[4], 10);\n\t\tthis.minute = parseInt(parserArray[5], 10);\n\t\tthis.second = parseInt(parserArray[6], 10);\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ASN.1 internal class into JavaScript string\n\t * @returns {string}\n\t */\n\ttoString()\n\t{\n\t\tconst outputArray = new Array(7);\n\n\t\toutputArray[0] = padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\n\t\toutputArray[1] = padNumber(this.month, 2);\n\t\toutputArray[2] = padNumber(this.day, 2);\n\t\toutputArray[3] = padNumber(this.hour, 2);\n\t\toutputArray[4] = padNumber(this.minute, 2);\n\t\toutputArray[5] = padNumber(this.second, 2);\n\t\toutputArray[6] = \"Z\";\n\n\t\treturn outputArray.join(\"\");\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"UTCTime\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.year = this.year;\n\t\tobject.month = this.month;\n\t\tobject.day = this.day;\n\t\tobject.hour = this.hour;\n\t\tobject.minute = this.minute;\n\t\tobject.second = this.second;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends VisibleString\n */\nexport class GeneralizedTime extends VisibleString\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"GeneralizedTime\" class\n\t * @param {Object} [parameters={}]\n\t * @property {string} [value] String representatio of the date\n\t * @property {Date} [valueDate] JavaScript \"Date\" object\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.year = 0;\n\t\tthis.month = 0;\n\t\tthis.day = 0;\n\t\tthis.hour = 0;\n\t\tthis.minute = 0;\n\t\tthis.second = 0;\n\t\tthis.millisecond = 0;\n\n\t\t//region Create UTCTime from ASN.1 UTC string value\n\t\tif(\"value\" in parameters)\n\t\t{\n\t\t\tthis.fromString(parameters.value);\n\n\t\t\tthis.valueBlock.valueHex = new ArrayBuffer(parameters.value.length);\n\t\t\tconst view = new Uint8Array(this.valueBlock.valueHex);\n\n\t\t\tfor(let i = 0; i < parameters.value.length; i++)\n\t\t\t\tview[i] = parameters.value.charCodeAt(i);\n\t\t}\n\t\t//endregion\n\t\t//region Create GeneralizedTime from JavaScript Date type\n\t\tif(\"valueDate\" in parameters)\n\t\t{\n\t\t\tthis.fromDate(parameters.valueDate);\n\t\t\tthis.valueBlock.valueHex = this.toBuffer();\n\t\t}\n\t\t//endregion\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 24; // GeneralizedTime\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tconst resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm === true) ? inputLength : this.lenBlock.length);\n\t\tif(resultOffset === (-1))\n\t\t{\n\t\t\tthis.error = this.valueBlock.error;\n\t\t\treturn resultOffset;\n\t\t}\n\n\t\tthis.fromBuffer(this.valueBlock.valueHex);\n\n\t\tif(this.idBlock.error.length === 0)\n\t\t\tthis.blockLength += this.idBlock.blockLength;\n\n\t\tif(this.lenBlock.error.length === 0)\n\t\t\tthis.blockLength += this.lenBlock.blockLength;\n\n\t\tif(this.valueBlock.error.length === 0)\n\t\t\tthis.blockLength += this.valueBlock.blockLength;\n\n\t\treturn resultOffset;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ArrayBuffer into ASN.1 internal string\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t */\n\tfromBuffer(inputBuffer)\n\t{\n\t\tthis.fromString(String.fromCharCode.apply(null, new Uint8Array(inputBuffer)));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ASN.1 internal string into ArrayBuffer\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBuffer()\n\t{\n\t\tconst str = this.toString();\n\n\t\tconst buffer = new ArrayBuffer(str.length);\n\t\tconst view = new Uint8Array(buffer);\n\n\t\tfor(let i = 0; i < str.length; i++)\n\t\t\tview[i] = str.charCodeAt(i);\n\n\t\treturn buffer;\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting \"Date\" object into ASN.1 internal string\n\t * @param {!Date} inputDate JavaScript \"Date\" object\n\t */\n\tfromDate(inputDate)\n\t{\n\t\tthis.year = inputDate.getUTCFullYear();\n\t\tthis.month = inputDate.getUTCMonth() + 1;\n\t\tthis.day = inputDate.getUTCDate();\n\t\tthis.hour = inputDate.getUTCHours();\n\t\tthis.minute = inputDate.getUTCMinutes();\n\t\tthis.second = inputDate.getUTCSeconds();\n\t\tthis.millisecond = inputDate.getUTCMilliseconds();\n\t}\n\t//**********************************************************************************\n\t//noinspection JSUnusedGlobalSymbols\n\t/**\n\t * Function converting ASN.1 internal string into \"Date\" object\n\t * @returns {Date}\n\t */\n\ttoDate()\n\t{\n\t\treturn (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting JavaScript string into ASN.1 internal class\n\t * @param {!string} inputString ASN.1 BER encoded array\n\t */\n\tfromString(inputString)\n\t{\n\t\t//region Initial variables\n\t\tlet isUTC = false;\n\n\t\tlet timeString = \"\";\n\t\tlet dateTimeString = \"\";\n\t\tlet fractionPart = 0;\n\n\t\tlet parser;\n\n\t\tlet hourDifference = 0;\n\t\tlet minuteDifference = 0;\n\t\t//endregion\n\n\t\t//region Convert as UTC time\n\t\tif(inputString[inputString.length - 1] === \"Z\")\n\t\t{\n\t\t\ttimeString = inputString.substr(0, inputString.length - 1);\n\n\t\t\tisUTC = true;\n\t\t}\n\t\t//endregion\n\t\t//region Convert as local time\n\t\telse\n\t\t{\n\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\n\t\t\tconst number = new Number(inputString[inputString.length - 1]);\n\n\t\t\tif(isNaN(number.valueOf()))\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\t\ttimeString = inputString;\n\t\t}\n\t\t//endregion\n\n\t\t//region Check that we do not have a \"+\" and \"-\" symbols inside UTC time\n\t\tif(isUTC)\n\t\t{\n\t\t\tif(timeString.indexOf(\"+\") !== (-1))\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\t\tif(timeString.indexOf(\"-\") !== (-1))\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\t\t}\n\t\t//endregion\n\t\t//region Get \"UTC time difference\" in case of local time\n\t\telse\n\t\t{\n\t\t\tlet multiplier = 1;\n\t\t\tlet differencePosition = timeString.indexOf(\"+\");\n\t\t\tlet differenceString = \"\";\n\n\t\t\tif(differencePosition === (-1))\n\t\t\t{\n\t\t\t\tdifferencePosition = timeString.indexOf(\"-\");\n\t\t\t\tmultiplier = (-1);\n\t\t\t}\n\n\t\t\tif(differencePosition !== (-1))\n\t\t\t{\n\t\t\t\tdifferenceString = timeString.substr(differencePosition + 1);\n\t\t\t\ttimeString = timeString.substr(0, differencePosition);\n\n\t\t\t\tif((differenceString.length !== 2) && (differenceString.length !== 4))\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\n\t\t\t\tlet number = new Number(differenceString.substr(0, 2));\n\n\t\t\t\tif(isNaN(number.valueOf()))\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\t\t\thourDifference = multiplier * number;\n\n\t\t\t\tif(differenceString.length === 4)\n\t\t\t\t{\n\t\t\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\n\t\t\t\t\tnumber = new Number(differenceString.substr(2, 2));\n\n\t\t\t\t\tif(isNaN(number.valueOf()))\n\t\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\t\t\t\tminuteDifference = multiplier * number;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//endregion\n\n\t\t//region Get position of fraction point\n\t\tlet fractionPointPosition = timeString.indexOf(\".\"); // Check for \"full stop\" symbol\n\t\tif(fractionPointPosition === (-1))\n\t\t\tfractionPointPosition = timeString.indexOf(\",\"); // Check for \"comma\" symbol\n\t\t//endregion\n\n\t\t//region Get fraction part\n\t\tif(fractionPointPosition !== (-1))\n\t\t{\n\t\t\t//noinspection JSPrimitiveTypeWrapperUsage\n\t\t\tconst fractionPartCheck = new Number(`0${timeString.substr(fractionPointPosition)}`);\n\n\t\t\tif(isNaN(fractionPartCheck.valueOf()))\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\t\tfractionPart = fractionPartCheck.valueOf();\n\n\t\t\tdateTimeString = timeString.substr(0, fractionPointPosition);\n\t\t}\n\t\telse\n\t\t\tdateTimeString = timeString;\n\t\t//endregion\n\n\t\t//region Parse internal date\n\t\tswitch(true)\n\t\t{\n\t\t\tcase (dateTimeString.length === 8): // \"YYYYMMDD\"\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})/ig;\n\t\t\t\tif(fractionPointPosition !== (-1))\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\"); // Here we should not have a \"fraction point\"\n\t\t\t\tbreak;\n\t\t\tcase (dateTimeString.length === 10): // \"YYYYMMDDHH\"\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\n\n\t\t\t\tif(fractionPointPosition !== (-1))\n\t\t\t\t{\n\t\t\t\t\tlet fractionResult = 60 * fractionPart;\n\t\t\t\t\tthis.minute = Math.floor(fractionResult);\n\n\t\t\t\t\tfractionResult = 60 * (fractionResult - this.minute);\n\t\t\t\t\tthis.second = Math.floor(fractionResult);\n\n\t\t\t\t\tfractionResult = 1000 * (fractionResult - this.second);\n\t\t\t\t\tthis.millisecond = Math.floor(fractionResult);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase (dateTimeString.length === 12): // \"YYYYMMDDHHMM\"\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n\n\t\t\t\tif(fractionPointPosition !== (-1))\n\t\t\t\t{\n\t\t\t\t\tlet fractionResult = 60 * fractionPart;\n\t\t\t\t\tthis.second = Math.floor(fractionResult);\n\n\t\t\t\t\tfractionResult = 1000 * (fractionResult - this.second);\n\t\t\t\t\tthis.millisecond = Math.floor(fractionResult);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase (dateTimeString.length === 14): // \"YYYYMMDDHHMMSS\"\n\t\t\t\tparser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\n\n\t\t\t\tif(fractionPointPosition !== (-1))\n\t\t\t\t{\n\t\t\t\t\tconst fractionResult = 1000 * fractionPart;\n\t\t\t\t\tthis.millisecond = Math.floor(fractionResult);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\t\t}\n\t\t//endregion\n\n\t\t//region Put parsed values at right places\n\t\tconst parserArray = parser.exec(dateTimeString);\n\t\tif(parserArray === null)\n\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\n\t\tfor(let j = 1; j < parserArray.length; j++)\n\t\t{\n\t\t\tswitch(j)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.year = parseInt(parserArray[j], 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.month = parseInt(parserArray[j], 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.day = parseInt(parserArray[j], 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tthis.hour = parseInt(parserArray[j], 10) + hourDifference;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tthis.minute = parseInt(parserArray[j], 10) + minuteDifference;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tthis.second = parseInt(parserArray[j], 10);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Wrong input string for convertion\");\n\t\t\t}\n\t\t}\n\t\t//endregion\n\n\t\t//region Get final date\n\t\tif(isUTC === false)\n\t\t{\n\t\t\tconst tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n\n\t\t\tthis.year = tempDate.getUTCFullYear();\n\t\t\tthis.month = tempDate.getUTCMonth();\n\t\t\tthis.day = tempDate.getUTCDay();\n\t\t\tthis.hour = tempDate.getUTCHours();\n\t\t\tthis.minute = tempDate.getUTCMinutes();\n\t\t\tthis.second = tempDate.getUTCSeconds();\n\t\t\tthis.millisecond = tempDate.getUTCMilliseconds();\n\t\t}\n\t\t//endregion\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Function converting ASN.1 internal class into JavaScript string\n\t * @returns {string}\n\t */\n\ttoString()\n\t{\n\t\tconst outputArray = [];\n\n\t\toutputArray.push(padNumber(this.year, 4));\n\t\toutputArray.push(padNumber(this.month, 2));\n\t\toutputArray.push(padNumber(this.day, 2));\n\t\toutputArray.push(padNumber(this.hour, 2));\n\t\toutputArray.push(padNumber(this.minute, 2));\n\t\toutputArray.push(padNumber(this.second, 2));\n\t\tif(this.millisecond !== 0)\n\t\t{\n\t\t\toutputArray.push(\".\");\n\t\t\toutputArray.push(padNumber(this.millisecond, 3));\n\t\t}\n\t\toutputArray.push(\"Z\");\n\n\t\treturn outputArray.join(\"\");\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"GeneralizedTime\";\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Convertion for the block to JSON object\n\t * @returns {Object}\n\t */\n\ttoJSON()\n\t{\n\t\tlet object = {};\n\t\t\n\t\t//region Seems at the moment (Sep 2016) there is no way how to check method is supported in \"super\" object\n\t\ttry\n\t\t{\n\t\t\tobject = super.toJSON();\n\t\t}\n\t\tcatch(ex){}\n\t\t//endregion\n\n\t\tobject.year = this.year;\n\t\tobject.month = this.month;\n\t\tobject.day = this.day;\n\t\tobject.hour = this.hour;\n\t\tobject.minute = this.minute;\n\t\tobject.second = this.second;\n\t\tobject.millisecond = this.millisecond;\n\n\t\treturn object;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends Utf8String\n */\nexport class DATE extends Utf8String\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"DATE\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 31; // DATE\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"DATE\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends Utf8String\n */\nexport class TimeOfDay extends Utf8String\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"TimeOfDay\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 32; // TimeOfDay\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"TimeOfDay\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends Utf8String\n */\nexport class DateTime extends Utf8String\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"DateTime\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 33; // DateTime\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"DateTime\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends Utf8String\n */\nexport class Duration extends Utf8String\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Duration\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 34; // Duration\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"Duration\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n/**\n * @extends Utf8String\n */\nexport class TIME extends Utf8String\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Time\" class\n\t * @param {Object} [parameters={}]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tsuper(parameters);\n\n\t\tthis.idBlock.tagClass = 1; // UNIVERSAL\n\t\tthis.idBlock.tagNumber = 14; // Time\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Aux function, need to get a block name. Need to have it here for inhiritence\n\t * @returns {string}\n\t */\n\tstatic blockName()\n\t{\n\t\treturn \"TIME\";\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of special ASN.1 schema type Choice\n//**************************************************************************************\nexport class Choice\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Choice\" class\n\t * @param {Object} [parameters={}]\n\t * @property {Array} [value] Array of ASN.1 types for make a choice from\n\t * @property {boolean} [optional]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tthis.value = getParametersValue(parameters, \"value\", []);\n\t\tthis.optional = getParametersValue(parameters, \"optional\", false);\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of special ASN.1 schema type Any\n//**************************************************************************************\nexport class Any\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Any\" class\n\t * @param {Object} [parameters={}]\n\t * @property {string} [name]\n\t * @property {boolean} [optional]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tthis.name = getParametersValue(parameters, \"name\", \"\");\n\t\tthis.optional = getParametersValue(parameters, \"optional\", false);\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of special ASN.1 schema type Repeated\n//**************************************************************************************\nexport class Repeated\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Repeated\" class\n\t * @param {Object} [parameters={}]\n\t * @property {string} [name]\n\t * @property {boolean} [optional]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tthis.name = getParametersValue(parameters, \"name\", \"\");\n\t\tthis.optional = getParametersValue(parameters, \"optional\", false);\n\t\tthis.value = getParametersValue(parameters, \"value\", new Any());\n\t\tthis.local = getParametersValue(parameters, \"local\", false); // Could local or global array to store elements\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Declaration of special ASN.1 schema type RawData\n//**************************************************************************************\n/**\n * @description Special class providing ability to have \"toBER/fromBER\" for raw ArrayBuffer\n */\nexport class RawData\n{\n\t//**********************************************************************************\n\t/**\n\t * Constructor for \"Repeated\" class\n\t * @param {Object} [parameters={}]\n\t * @property {string} [name]\n\t * @property {boolean} [optional]\n\t */\n\tconstructor(parameters = {})\n\t{\n\t\tthis.data = getParametersValue(parameters, \"data\", new ArrayBuffer(0));\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Base function for converting block from BER encoded array of bytes\n\t * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n\t * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n\t * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n\t * @returns {number} Offset after least decoded byte\n\t */\n\tfromBER(inputBuffer, inputOffset, inputLength)\n\t{\n\t\tthis.data = inputBuffer.slice(inputOffset, inputLength);\n\t\treturn (inputOffset + inputLength);\n\t}\n\t//**********************************************************************************\n\t/**\n\t * Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)\n\t * @param {boolean} [sizeOnly=false] Flag that we need only a size of encoding, not a real array of bytes\n\t * @returns {ArrayBuffer}\n\t */\n\ttoBER(sizeOnly = false)\n\t{\n\t\treturn this.data;\n\t}\n\t//**********************************************************************************\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Major ASN.1 BER decoding function\n//**************************************************************************************\n/**\n * Internal library function for decoding ASN.1 BER\n * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array\n * @param {!number} inputOffset Offset in ASN.1 BER encoded array where decoding should be started\n * @param {!number} inputLength Maximum length of array of bytes which can be using in this function\n * @returns {{offset: number, result: Object}}\n */\nfunction LocalFromBER(inputBuffer, inputOffset, inputLength)\n{\n\tconst incomingOffset = inputOffset; // Need to store initial offset since \"inputOffset\" is changing in the function\n\n\t//region Local function changing a type for ASN.1 classes\n\tfunction localChangeType(inputObject, newType)\n\t{\n\t\tif(inputObject instanceof newType)\n\t\t\treturn inputObject;\n\n\t\tconst newObject = new newType();\n\t\tnewObject.idBlock = inputObject.idBlock;\n\t\tnewObject.lenBlock = inputObject.lenBlock;\n\t\tnewObject.warnings = inputObject.warnings;\n\t\t//noinspection JSCheckFunctionSignatures\n\t\tnewObject.valueBeforeDecode = inputObject.valueBeforeDecode.slice(0);\n\n\t\treturn newObject;\n\t}\n\t//endregion\n\n\t//region Create a basic ASN.1 type since we need to return errors and warnings from the function\n\tlet returnObject = new BaseBlock({}, Object);\n\t//endregion\n\n\t//region Basic check for parameters\n\tconst baseBlock = new LocalBaseBlock();\n\tif(checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) === false)\n\t{\n\t\treturnObject.error = baseBlock.error;\n\t\treturn {\n\t\t\toffset: (-1),\n\t\t\tresult: returnObject\n\t\t};\n\t}\n\t//endregion\n\n\t//region Getting Uint8Array from ArrayBuffer\n\tconst intBuffer = new Uint8Array(inputBuffer, inputOffset, inputLength);\n\t//endregion\n\n\t//region Initial checks\n\tif(intBuffer.length === 0)\n\t{\n\t\treturnObject.error = \"Zero buffer length\";\n\t\treturn {\n\t\t\toffset: (-1),\n\t\t\tresult: returnObject\n\t\t};\n\t}\n\t//endregion\n\n\t//region Decode indentifcation block of ASN.1 BER structure\n\tlet resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\n\treturnObject.warnings.concat(returnObject.idBlock.warnings);\n\tif(resultOffset === (-1))\n\t{\n\t\treturnObject.error = returnObject.idBlock.error;\n\t\treturn {\n\t\t\toffset: (-1),\n\t\t\tresult: returnObject\n\t\t};\n\t}\n\n\tinputOffset = resultOffset;\n\tinputLength -= returnObject.idBlock.blockLength;\n\t//endregion\n\n\t//region Decode length block of ASN.1 BER structure\n\tresultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\n\treturnObject.warnings.concat(returnObject.lenBlock.warnings);\n\tif(resultOffset === (-1))\n\t{\n\t\treturnObject.error = returnObject.lenBlock.error;\n\t\treturn {\n\t\t\toffset: (-1),\n\t\t\tresult: returnObject\n\t\t};\n\t}\n\n\tinputOffset = resultOffset;\n\tinputLength -= returnObject.lenBlock.blockLength;\n\t//endregion\n\n\t//region Check for usign indefinite length form in encoding for primitive types\n\tif((returnObject.idBlock.isConstructed === false) &&\n\t\t(returnObject.lenBlock.isIndefiniteForm === true))\n\t{\n\t\treturnObject.error = \"Indefinite length form used for primitive encoding form\";\n\t\treturn {\n\t\t\toffset: (-1),\n\t\t\tresult: returnObject\n\t\t};\n\t}\n\t//endregion\n\n\t//region Switch ASN.1 block type\n\tlet newASN1Type = BaseBlock;\n\n\tswitch(returnObject.idBlock.tagClass)\n\t{\n\t\t//region UNIVERSAL\n\t\tcase 1:\n\t\t\t//region Check for reserved tag numbers\n\t\t\tif((returnObject.idBlock.tagNumber >= 37) &&\n\t\t\t\t(returnObject.idBlock.isHexOnly === false))\n\t\t\t{\n\t\t\t\treturnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\n\t\t\t\treturn {\n\t\t\t\t\toffset: (-1),\n\t\t\t\t\tresult: returnObject\n\t\t\t\t};\n\t\t\t}\n\t\t\t//endregion\n\n\t\t\tswitch(returnObject.idBlock.tagNumber)\n\t\t\t{\n\t\t\t\t//region EndOfContent type\n\t\t\t\tcase 0:\n\t\t\t\t\t//region Check for EndOfContent type\n\t\t\t\t\tif((returnObject.idBlock.isConstructed === true) &&\n\t\t\t\t\t\t(returnObject.lenBlock.length > 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treturnObject.error = \"Type [UNIVERSAL 0] is reserved\";\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toffset: (-1),\n\t\t\t\t\t\t\tresult: returnObject\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t//endregion\n\n\t\t\t\t\tnewASN1Type = EndOfContent;\n\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Boolean type\n\t\t\t\tcase 1:\n\t\t\t\t\tnewASN1Type = Boolean;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Integer type\n\t\t\t\tcase 2:\n\t\t\t\t\tnewASN1Type = Integer;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region BitString type\n\t\t\t\tcase 3:\n\t\t\t\t\tnewASN1Type = BitString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region OctetString type\n\t\t\t\tcase 4:\n\t\t\t\t\tnewASN1Type = OctetString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Null type\n\t\t\t\tcase 5:\n\t\t\t\t\tnewASN1Type = Null;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region OBJECT IDENTIFIER type\n\t\t\t\tcase 6:\n\t\t\t\t\tnewASN1Type = ObjectIdentifier;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Enumerated type\n\t\t\t\tcase 10:\n\t\t\t\t\tnewASN1Type = Enumerated;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Utf8String type\n\t\t\t\tcase 12:\n\t\t\t\t\tnewASN1Type = Utf8String;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Time type\n\t\t\t\t//region RELATIVE OBJECT IDENTIFIER type\n\t\t\t\tcase 13:\n\t\t\t\t\tnewASN1Type = RelativeObjectIdentifier;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\tcase 14:\n\t\t\t\t\tnewASN1Type = TIME;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region ASN.1 reserved type\n\t\t\t\tcase 15:\n\t\t\t\t\treturnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\n\t\t\t\t\treturn {\n\t\t\t\t\t\toffset: (-1),\n\t\t\t\t\t\tresult: returnObject\n\t\t\t\t\t};\n\t\t\t\t//endregion\n\t\t\t\t//region Sequence type\n\t\t\t\tcase 16:\n\t\t\t\t\tnewASN1Type = Sequence;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Set type\n\t\t\t\tcase 17:\n\t\t\t\t\tnewASN1Type = Set;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region NumericString type\n\t\t\t\tcase 18:\n\t\t\t\t\tnewASN1Type = NumericString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region PrintableString type\n\t\t\t\tcase 19:\n\t\t\t\t\tnewASN1Type = PrintableString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region TeletexString type\n\t\t\t\tcase 20:\n\t\t\t\t\tnewASN1Type = TeletexString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region VideotexString type\n\t\t\t\tcase 21:\n\t\t\t\t\tnewASN1Type = VideotexString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region IA5String type\n\t\t\t\tcase 22:\n\t\t\t\t\tnewASN1Type = IA5String;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region UTCTime type\n\t\t\t\tcase 23:\n\t\t\t\t\tnewASN1Type = UTCTime;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region GeneralizedTime type\n\t\t\t\tcase 24:\n\t\t\t\t\tnewASN1Type = GeneralizedTime;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region GraphicString type\n\t\t\t\tcase 25:\n\t\t\t\t\tnewASN1Type = GraphicString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region VisibleString type\n\t\t\t\tcase 26:\n\t\t\t\t\tnewASN1Type = VisibleString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region GeneralString type\n\t\t\t\tcase 27:\n\t\t\t\t\tnewASN1Type = GeneralString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region UniversalString type\n\t\t\t\tcase 28:\n\t\t\t\t\tnewASN1Type = UniversalString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region CharacterString type\n\t\t\t\tcase 29:\n\t\t\t\t\tnewASN1Type = CharacterString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region BmpString type\n\t\t\t\tcase 30:\n\t\t\t\t\tnewASN1Type = BmpString;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region DATE type\n\t\t\t\tcase 31:\n\t\t\t\t\tnewASN1Type = DATE;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region TimeOfDay type\n\t\t\t\tcase 32:\n\t\t\t\t\tnewASN1Type = TimeOfDay;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Date-Time type\n\t\t\t\tcase 33:\n\t\t\t\t\tnewASN1Type = DateTime;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region Duration type\n\t\t\t\tcase 34:\n\t\t\t\t\tnewASN1Type = Duration;\n\t\t\t\t\tbreak;\n\t\t\t\t//endregion\n\t\t\t\t//region default\n\t\t\t\tdefault:\n\t\t\t\t\t{\n\t\t\t\t\t\tlet newObject;\n\n\t\t\t\t\t\tif(returnObject.idBlock.isConstructed === true)\n\t\t\t\t\t\t\tnewObject = new Constructed();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnewObject = new Primitive();\n\n\t\t\t\t\t\tnewObject.idBlock = returnObject.idBlock;\n\t\t\t\t\t\tnewObject.lenBlock = returnObject.lenBlock;\n\t\t\t\t\t\tnewObject.warnings = returnObject.warnings;\n\n\t\t\t\t\t\treturnObject = newObject;\n\t\t\t\t\t}\n\t\t\t\t//endregion\n\t\t\t}\n\t\t\tbreak;\n\t\t//endregion\n\t\t//region All other tag classes\n\t\tcase 2: // APPLICATION\n\t\tcase 3: // CONTEXT-SPECIFIC\n\t\tcase 4: // PRIVATE\n\t\tdefault:\n\t\t\t{\n\t\t\t\tif(returnObject.idBlock.isConstructed === true)\n\t\t\t\t\tnewASN1Type = Constructed;\n\t\t\t\telse\n\t\t\t\t\tnewASN1Type = Primitive;\n\t\t\t}\n\t\t//endregion\n\t}\n\t//endregion\n\n\t//region Change type and perform BER decoding\n\treturnObject = localChangeType(returnObject, newASN1Type);\n\tresultOffset = returnObject.fromBER(inputBuffer, inputOffset, (returnObject.lenBlock.isIndefiniteForm === true) ? inputLength : returnObject.lenBlock.length);\n\t//endregion\n\n\t//region Coping incoming buffer for entire ASN.1 block\n\treturnObject.valueBeforeDecode = inputBuffer.slice(incomingOffset, incomingOffset + returnObject.blockLength);\n\t//endregion\n\n\treturn {\n\t\toffset: resultOffset,\n\t\tresult: returnObject\n\t};\n}\n//**************************************************************************************\n/**\n * Major function for decoding ASN.1 BER array into internal library structuries\n * @param {!ArrayBuffer} inputBuffer ASN.1 BER encoded array of bytes\n */\nexport function fromBER(inputBuffer)\n{\n\tif(inputBuffer.byteLength === 0)\n\t{\n\t\tconst result = new BaseBlock({}, Object);\n\t\tresult.error = \"Input buffer has zero length\";\n\n\t\treturn {\n\t\t\toffset: (-1),\n\t\t\tresult\n\t\t};\n\t}\n\n\treturn LocalFromBER(inputBuffer, 0, inputBuffer.byteLength);\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Major scheme verification function\n//**************************************************************************************\n/**\n * Compare of two ASN.1 object trees\n * @param {!Object} root Root of input ASN.1 object tree\n * @param {!Object} inputData Input ASN.1 object tree\n * @param {!Object} inputSchema Input ASN.1 schema to compare with\n * @return {{verified: boolean}|{verified:boolean, result: Object}}\n */\nexport function compareSchema(root, inputData, inputSchema)\n{\n\t//region Special case for Choice schema element type\n\tif(inputSchema instanceof Choice)\n\t{\n\t\tconst choiceResult = false;\n\n\t\tfor(let j = 0; j < inputSchema.value.length; j++)\n\t\t{\n\t\t\tconst result = compareSchema(root, inputData, inputSchema.value[j]);\n\t\t\tif(result.verified === true)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tverified: true,\n\t\t\t\t\tresult: root\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif(choiceResult === false)\n\t\t{\n\t\t\tconst _result = {\n\t\t\t\tverified: false,\n\t\t\t\tresult: {\n\t\t\t\t\terror: \"Wrong values for Choice type\"\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t\t_result.name = inputSchema.name;\n\n\t\t\treturn _result;\n\t\t}\n\t}\n\t//endregion\n\n\t//region Special case for Any schema element type\n\tif(inputSchema instanceof Any)\n\t{\n\t\t//region Add named component of ASN.1 schema\n\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\troot[inputSchema.name] = inputData;\n\t\t//endregion\n\n\t\treturn {\n\t\t\tverified: true,\n\t\t\tresult: root\n\t\t};\n\t}\n\t//endregion\n\n\t//region Initial check\n\tif((root instanceof Object) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong root object\" }\n\t\t};\n\t}\n\n\tif((inputData instanceof Object) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 data\" }\n\t\t};\n\t}\n\n\tif((inputSchema instanceof Object) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tif((\"idBlock\" in inputSchema) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\t//endregion\n\n\t//region Comparing idBlock properties in ASN.1 data and ASN.1 schema\n\t//region Encode and decode ASN.1 schema idBlock\n\t/// <remarks>This encoding/decoding is neccessary because could be an errors in schema definition</remarks>\n\tif((\"fromBER\" in inputSchema.idBlock) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tif((\"toBER\" in inputSchema.idBlock) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tconst encodedId = inputSchema.idBlock.toBER(false);\n\tif(encodedId.byteLength === 0)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Error encoding idBlock for ASN.1 schema\" }\n\t\t};\n\t}\n\n\tconst decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\n\tif(decodedOffset === (-1))\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Error decoding idBlock for ASN.1 schema\" }\n\t\t};\n\t}\n\t//endregion\n\n\t//region tagClass\n\tif(inputSchema.idBlock.hasOwnProperty(\"tagClass\") === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tif(inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: root\n\t\t};\n\t}\n\t//endregion\n\t//region tagNumber\n\tif(inputSchema.idBlock.hasOwnProperty(\"tagNumber\") === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tif(inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: root\n\t\t};\n\t}\n\t//endregion\n\t//region isConstructed\n\tif(inputSchema.idBlock.hasOwnProperty(\"isConstructed\") === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tif(inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: root\n\t\t};\n\t}\n\t//endregion\n\t//region isHexOnly\n\tif((\"isHexOnly\" in inputSchema.idBlock) === false) // Since 'isHexOnly' is an inhirited property\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t};\n\t}\n\n\tif(inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: root\n\t\t};\n\t}\n\t//endregion\n\t//region valueHex\n\tif(inputSchema.idBlock.isHexOnly === true)\n\t{\n\t\tif((\"valueHex\" in inputSchema.idBlock) === false) // Since 'valueHex' is an inhirited property\n\t\t{\n\t\t\treturn {\n\t\t\t\tverified: false,\n\t\t\t\tresult: { error: \"Wrong ASN.1 schema\" }\n\t\t\t};\n\t\t}\n\n\t\tconst schemaView = new Uint8Array(inputSchema.idBlock.valueHex);\n\t\tconst asn1View = new Uint8Array(inputData.idBlock.valueHex);\n\n\t\tif(schemaView.length !== asn1View.length)\n\t\t{\n\t\t\treturn {\n\t\t\t\tverified: false,\n\t\t\t\tresult: root\n\t\t\t};\n\t\t}\n\n\t\tfor(let i = 0; i < schemaView.length; i++)\n\t\t{\n\t\t\tif(schemaView[i] !== asn1View[1])\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tverified: false,\n\t\t\t\t\tresult: root\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\t//endregion\n\t//endregion\n\n\t//region Add named component of ASN.1 schema\n\tif(inputSchema.hasOwnProperty(\"name\"))\n\t{\n\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\tif(inputSchema.name !== \"\")\n\t\t\troot[inputSchema.name] = inputData;\n\t}\n\t//endregion\n\n\t//region Getting next ASN.1 block for comparition\n\tif(inputSchema.idBlock.isConstructed === true)\n\t{\n\t\tlet admission = 0;\n\t\tlet result = { verified: false };\n\n\t\tlet maxLength = inputSchema.valueBlock.value.length;\n\n\t\tif(maxLength > 0)\n\t\t{\n\t\t\tif(inputSchema.valueBlock.value[0] instanceof Repeated)\n\t\t\t\tmaxLength = inputData.valueBlock.value.length;\n\t\t}\n\n\t\t//region Special case when constructive value has no elements\n\t\tif(maxLength === 0)\n\t\t{\n\t\t\treturn {\n\t\t\t\tverified: true,\n\t\t\t\tresult: root\n\t\t\t};\n\t\t}\n\t\t//endregion\n\n\t\t//region Special case when \"inputData\" has no values and \"inputSchema\" has all optional values\n\t\tif((inputData.valueBlock.value.length === 0) &&\n\t\t\t(inputSchema.valueBlock.value.length !== 0))\n\t\t{\n\t\t\tlet _optional = true;\n\n\t\t\tfor(let i = 0; i < inputSchema.valueBlock.value.length; i++)\n\t\t\t\t_optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\n\n\t\t\tif(_optional === true)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tverified: true,\n\t\t\t\t\tresult: root\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t//region Delete early added name of block\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t{\n\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\tif(inputSchema.name !== \"\")\n\t\t\t\t\tdelete root[inputSchema.name];\n\t\t\t}\n\t\t\t//endregion\n\n\t\t\troot.error = \"Inconsistent object length\";\n\n\t\t\treturn {\n\t\t\t\tverified: false,\n\t\t\t\tresult: root\n\t\t\t};\n\t\t}\n\t\t//endregion\n\n\t\tfor(let i = 0; i < maxLength; i++)\n\t\t{\n\t\t\t//region Special case when there is an \"optional\" element of ASN.1 schema at the end\n\t\t\tif((i - admission) >= inputData.valueBlock.value.length)\n\t\t\t{\n\t\t\t\tif(inputSchema.valueBlock.value[i].optional === false)\n\t\t\t\t{\n\t\t\t\t\tconst _result = {\n\t\t\t\t\t\tverified: false,\n\t\t\t\t\t\tresult: root\n\t\t\t\t\t};\n\n\t\t\t\t\troot.error = \"Inconsistent length between ASN.1 data and schema\";\n\n\t\t\t\t\t//region Delete early added name of block\n\t\t\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\t\t\tif(inputSchema.name !== \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdelete root[inputSchema.name];\n\t\t\t\t\t\t\t_result.name = inputSchema.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//endregion\n\n\t\t\t\t\treturn _result;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//endregion\n\t\t\telse\n\t\t\t{\n\t\t\t\t//region Special case for Repeated type of ASN.1 schema element\n\t\t\t\tif(inputSchema.valueBlock.value[0] instanceof Repeated)\n\t\t\t\t{\n\t\t\t\t\tresult = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\n\t\t\t\t\tif(result.verified === false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(inputSchema.valueBlock.value[0].optional === true)\n\t\t\t\t\t\t\tadmission++;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//region Delete early added name of block\n\t\t\t\t\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\t\t\t\t\tif(inputSchema.name !== \"\")\n\t\t\t\t\t\t\t\t\tdelete root[inputSchema.name];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//endregion\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif((\"name\" in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet arrayRoot = {};\n\n\t\t\t\t\t\tif((\"local\" in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local === true))\n\t\t\t\t\t\t\tarrayRoot = inputData;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tarrayRoot = root;\n\n\t\t\t\t\t\tif(typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\n\t\t\t\t\t\t\tarrayRoot[inputSchema.valueBlock.value[0].name] = [];\n\n\t\t\t\t\t\tarrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//endregion\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\n\t\t\t\t\tif(result.verified === false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(inputSchema.valueBlock.value[i].optional === true)\n\t\t\t\t\t\t\tadmission++;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//region Delete early added name of block\n\t\t\t\t\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\t\t\t\t\tif(inputSchema.name !== \"\")\n\t\t\t\t\t\t\t\t\tdelete root[inputSchema.name];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//endregion\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(result.verified === false) // The situation may take place if last element is \"optional\" and verification failed\n\t\t{\n\t\t\tconst _result = {\n\t\t\t\tverified: false,\n\t\t\t\tresult: root\n\t\t\t};\n\n\t\t\t//region Delete early added name of block\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t{\n\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\tif(inputSchema.name !== \"\")\n\t\t\t\t{\n\t\t\t\t\tdelete root[inputSchema.name];\n\t\t\t\t\t_result.name = inputSchema.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//endregion\n\n\t\t\treturn _result;\n\t\t}\n\n\t\treturn {\n\t\t\tverified: true,\n\t\t\tresult: root\n\t\t};\n\t}\n\t//endregion\n\t//region Ability to parse internal value for primitive-encoded value (value of OctetString, for example)\n\tif((\"primitiveSchema\" in inputSchema) &&\n\t\t(\"valueHex\" in inputData.valueBlock))\n\t{\n\t\t//region Decoding of raw ASN.1 data\n\t\tconst asn1 = fromBER(inputData.valueBlock.valueHex);\n\t\tif(asn1.offset === (-1))\n\t\t{\n\t\t\tconst _result = {\n\t\t\t\tverified: false,\n\t\t\t\tresult: asn1.result\n\t\t\t};\n\n\t\t\t//region Delete early added name of block\n\t\t\tif(inputSchema.hasOwnProperty(\"name\"))\n\t\t\t{\n\t\t\t\tinputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, \"\");\n\t\t\t\tif(inputSchema.name !== \"\")\n\t\t\t\t{\n\t\t\t\t\tdelete root[inputSchema.name];\n\t\t\t\t\t_result.name = inputSchema.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//endregion\n\n\t\t\treturn _result;\n\t\t}\n\t\t//endregion\n\n\t\treturn compareSchema(root, asn1.result, inputSchema.primitiveSchema);\n\t}\n\n\treturn {\n\t\tverified: true,\n\t\tresult: root\n\t};\n\t//endregion\n}\n//**************************************************************************************\n//noinspection JSUnusedGlobalSymbols\n/**\n * ASN.1 schema verification for ArrayBuffer data\n * @param {!ArrayBuffer} inputBuffer Input BER-encoded ASN.1 data\n * @param {!Object} inputSchema Input ASN.1 schema to verify against to\n * @return {{verified: boolean}|{verified:boolean, result: Object}}\n */\nexport function verifySchema(inputBuffer, inputSchema)\n{\n\t//region Initial check\n\tif((inputSchema instanceof Object) === false)\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: { error: \"Wrong ASN.1 schema type\" }\n\t\t};\n\t}\n\t//endregion\n\n\t//region Decoding of raw ASN.1 data\n\tconst asn1 = fromBER(inputBuffer);\n\tif(asn1.offset === (-1))\n\t{\n\t\treturn {\n\t\t\tverified: false,\n\t\t\tresult: asn1.result\n\t\t};\n\t}\n\t//endregion\n\n\t//region Compare ASN.1 struct with input schema\n\treturn compareSchema(asn1.result, asn1.result, inputSchema);\n\t//endregion\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n//region Major function converting JSON to ASN.1 objects\n//**************************************************************************************\n//noinspection JSUnusedGlobalSymbols\n/**\n * Converting from JSON to ASN.1 objects\n * @param {string|Object} json JSON string or object to convert to ASN.1 objects\n */\nexport function fromJSON(json)\n{\n\t// TODO Implement\n}\n//**************************************************************************************\n//endregion\n//**************************************************************************************\n","export var AsnTypeTypes;\n(function (AsnTypeTypes) {\n    AsnTypeTypes[AsnTypeTypes[\"Sequence\"] = 0] = \"Sequence\";\n    AsnTypeTypes[AsnTypeTypes[\"Set\"] = 1] = \"Set\";\n    AsnTypeTypes[AsnTypeTypes[\"Choice\"] = 2] = \"Choice\";\n})(AsnTypeTypes || (AsnTypeTypes = {}));\nexport var AsnPropTypes;\n(function (AsnPropTypes) {\n    AsnPropTypes[AsnPropTypes[\"Any\"] = 1] = \"Any\";\n    AsnPropTypes[AsnPropTypes[\"Boolean\"] = 2] = \"Boolean\";\n    AsnPropTypes[AsnPropTypes[\"OctetString\"] = 3] = \"OctetString\";\n    AsnPropTypes[AsnPropTypes[\"BitString\"] = 4] = \"BitString\";\n    AsnPropTypes[AsnPropTypes[\"Integer\"] = 5] = \"Integer\";\n    AsnPropTypes[AsnPropTypes[\"Enumerated\"] = 6] = \"Enumerated\";\n    AsnPropTypes[AsnPropTypes[\"ObjectIdentifier\"] = 7] = \"ObjectIdentifier\";\n    AsnPropTypes[AsnPropTypes[\"Utf8String\"] = 8] = \"Utf8String\";\n    AsnPropTypes[AsnPropTypes[\"BmpString\"] = 9] = \"BmpString\";\n    AsnPropTypes[AsnPropTypes[\"UniversalString\"] = 10] = \"UniversalString\";\n    AsnPropTypes[AsnPropTypes[\"NumericString\"] = 11] = \"NumericString\";\n    AsnPropTypes[AsnPropTypes[\"PrintableString\"] = 12] = \"PrintableString\";\n    AsnPropTypes[AsnPropTypes[\"TeletexString\"] = 13] = \"TeletexString\";\n    AsnPropTypes[AsnPropTypes[\"VideotexString\"] = 14] = \"VideotexString\";\n    AsnPropTypes[AsnPropTypes[\"IA5String\"] = 15] = \"IA5String\";\n    AsnPropTypes[AsnPropTypes[\"GraphicString\"] = 16] = \"GraphicString\";\n    AsnPropTypes[AsnPropTypes[\"VisibleString\"] = 17] = \"VisibleString\";\n    AsnPropTypes[AsnPropTypes[\"GeneralString\"] = 18] = \"GeneralString\";\n    AsnPropTypes[AsnPropTypes[\"CharacterString\"] = 19] = \"CharacterString\";\n    AsnPropTypes[AsnPropTypes[\"UTCTime\"] = 20] = \"UTCTime\";\n    AsnPropTypes[AsnPropTypes[\"GeneralizedTime\"] = 21] = \"GeneralizedTime\";\n    AsnPropTypes[AsnPropTypes[\"DATE\"] = 22] = \"DATE\";\n    AsnPropTypes[AsnPropTypes[\"TimeOfDay\"] = 23] = \"TimeOfDay\";\n    AsnPropTypes[AsnPropTypes[\"DateTime\"] = 24] = \"DateTime\";\n    AsnPropTypes[AsnPropTypes[\"Duration\"] = 25] = \"Duration\";\n    AsnPropTypes[AsnPropTypes[\"TIME\"] = 26] = \"TIME\";\n    AsnPropTypes[AsnPropTypes[\"Null\"] = 27] = \"Null\";\n})(AsnPropTypes || (AsnPropTypes = {}));\n","import * as asn1 from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nexport const AsnAnyConverter = {\n    fromASN: (value) => value instanceof asn1.Null ? null : value.valueBeforeDecode,\n    toASN: (value) => {\n        if (value === null) {\n            return new asn1.Null();\n        }\n        const schema = asn1.fromBER(value);\n        if (schema.result.error) {\n            throw new Error(schema.result.error);\n        }\n        return schema.result;\n    },\n};\nexport const AsnIntegerConverter = {\n    fromASN: (value) => value.valueBlock.valueHex.byteLength > 4\n        ? value.valueBlock.toString()\n        : value.valueBlock.valueDec,\n    toASN: (value) => new asn1.Integer({ value: value }),\n};\nexport const AsnEnumeratedConverter = {\n    fromASN: (value) => value.valueBlock.valueDec,\n    toASN: (value) => new asn1.Enumerated({ value }),\n};\nexport const AsnIntegerArrayBufferConverter = {\n    fromASN: (value) => value.valueBlock.valueHex,\n    toASN: (value) => new asn1.Integer({ valueHex: value }),\n};\nexport const AsnBitStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHex,\n    toASN: (value) => new asn1.BitString({ valueHex: value }),\n};\nexport const AsnObjectIdentifierConverter = {\n    fromASN: (value) => value.valueBlock.toString(),\n    toASN: (value) => new asn1.ObjectIdentifier({ value }),\n};\nexport const AsnBooleanConverter = {\n    fromASN: (value) => value.valueBlock.value,\n    toASN: (value) => new asn1.Boolean({ value }),\n};\nexport const AsnOctetStringConverter = {\n    fromASN: (value) => value.valueBlock.valueHex,\n    toASN: (value) => new asn1.OctetString({ valueHex: value }),\n};\nfunction createStringConverter(Asn1Type) {\n    return {\n        fromASN: (value) => value.valueBlock.value,\n        toASN: (value) => new Asn1Type({ value }),\n    };\n}\nexport const AsnUtf8StringConverter = createStringConverter(asn1.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1.CharacterString);\nexport const AsnUTCTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1.UTCTime({ valueDate: value }),\n};\nexport const AsnGeneralizedTimeConverter = {\n    fromASN: (value) => value.toDate(),\n    toASN: (value) => new asn1.GeneralizedTime({ valueDate: value }),\n};\nexport const AsnNullConverter = {\n    fromASN: (value) => null,\n    toASN: (value) => {\n        return new asn1.Null();\n    },\n};\nexport function defaultConverter(type) {\n    switch (type) {\n        case AsnPropTypes.Any:\n            return AsnAnyConverter;\n        case AsnPropTypes.BitString:\n            return AsnBitStringConverter;\n        case AsnPropTypes.BmpString:\n            return AsnBmpStringConverter;\n        case AsnPropTypes.Boolean:\n            return AsnBooleanConverter;\n        case AsnPropTypes.CharacterString:\n            return AsnCharacterStringConverter;\n        case AsnPropTypes.Enumerated:\n            return AsnEnumeratedConverter;\n        case AsnPropTypes.GeneralString:\n            return AsnGeneralStringConverter;\n        case AsnPropTypes.GeneralizedTime:\n            return AsnGeneralizedTimeConverter;\n        case AsnPropTypes.GraphicString:\n            return AsnGraphicStringConverter;\n        case AsnPropTypes.IA5String:\n            return AsnIA5StringConverter;\n        case AsnPropTypes.Integer:\n            return AsnIntegerConverter;\n        case AsnPropTypes.Null:\n            return AsnNullConverter;\n        case AsnPropTypes.NumericString:\n            return AsnNumericStringConverter;\n        case AsnPropTypes.ObjectIdentifier:\n            return AsnObjectIdentifierConverter;\n        case AsnPropTypes.OctetString:\n            return AsnOctetStringConverter;\n        case AsnPropTypes.PrintableString:\n            return AsnPrintableStringConverter;\n        case AsnPropTypes.TeletexString:\n            return AsnTeletexStringConverter;\n        case AsnPropTypes.UTCTime:\n            return AsnUTCTimeConverter;\n        case AsnPropTypes.UniversalString:\n            return AsnUniversalStringConverter;\n        case AsnPropTypes.Utf8String:\n            return AsnUtf8StringConverter;\n        case AsnPropTypes.VideotexString:\n            return AsnVideotexStringConverter;\n        case AsnPropTypes.VisibleString:\n            return AsnVisibleStringConverter;\n        default:\n            return null;\n    }\n}\n","/**\n * Copyright (c) 2020, Peculiar Ventures, All rights reserved.\n */\n\nclass BufferSourceConverter {\r\n    static isArrayBuffer(data) {\r\n        return Object.prototype.toString.call(data) === '[object ArrayBuffer]';\r\n    }\r\n    static toArrayBuffer(data) {\r\n        const buf = this.toUint8Array(data);\r\n        if (buf.byteOffset || buf.length) {\r\n            return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\r\n        }\r\n        return buf.buffer;\r\n    }\r\n    static toUint8Array(data) {\r\n        return this.toView(data, Uint8Array);\r\n    }\r\n    static toView(data, type) {\r\n        if (typeof Buffer !== \"undefined\" && Buffer.isBuffer(data)) {\r\n            return new type(data.buffer, data.byteOffset, data.byteLength);\r\n        }\r\n        if (this.isArrayBuffer(data)) {\r\n            return new type(data);\r\n        }\r\n        if (this.isArrayBufferView(data)) {\r\n            return new type(data.buffer, data.byteOffset, data.byteLength);\r\n        }\r\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\r\n    }\r\n    static isBufferSource(data) {\r\n        return this.isArrayBufferView(data)\r\n            || this.isArrayBuffer(data);\r\n    }\r\n    static isArrayBufferView(data) {\r\n        return ArrayBuffer.isView(data)\r\n            || (data && this.isArrayBuffer(data.buffer));\r\n    }\r\n    static isEqual(a, b) {\r\n        const aView = BufferSourceConverter.toUint8Array(a);\r\n        const bView = BufferSourceConverter.toUint8Array(b);\r\n        if (aView.length !== bView.byteLength) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < aView.length; i++) {\r\n            if (aView[i] !== bView[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\n\nclass Utf8Converter {\r\n    static fromString(text) {\r\n        const s = unescape(encodeURIComponent(text));\r\n        const uintArray = new Uint8Array(s.length);\r\n        for (let i = 0; i < s.length; i++) {\r\n            uintArray[i] = s.charCodeAt(i);\r\n        }\r\n        return uintArray.buffer;\r\n    }\r\n    static toString(buffer) {\r\n        const buf = BufferSourceConverter.toUint8Array(buffer);\r\n        let encodedString = \"\";\r\n        for (let i = 0; i < buf.length; i++) {\r\n            encodedString += String.fromCharCode(buf[i]);\r\n        }\r\n        const decodedString = decodeURIComponent(escape(encodedString));\r\n        return decodedString;\r\n    }\r\n}\r\nclass Utf16Converter {\r\n    static toString(buffer, littleEndian = false) {\r\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\r\n        const dataView = new DataView(arrayBuffer);\r\n        let res = \"\";\r\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\r\n            const code = dataView.getUint16(i, littleEndian);\r\n            res += String.fromCharCode(code);\r\n        }\r\n        return res;\r\n    }\r\n    static fromString(text, littleEndian = false) {\r\n        const res = new ArrayBuffer(text.length * 2);\r\n        const dataView = new DataView(res);\r\n        for (let i = 0; i < text.length; i++) {\r\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nclass Convert {\r\n    static isHex(data) {\r\n        return typeof data === \"string\"\r\n            && /^[a-z0-9]+$/i.test(data);\r\n    }\r\n    static isBase64(data) {\r\n        return typeof data === \"string\"\r\n            && /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(data);\r\n    }\r\n    static isBase64Url(data) {\r\n        return typeof data === \"string\"\r\n            && /^[a-zA-Z0-9-_]+$/i.test(data);\r\n    }\r\n    static ToString(buffer, enc = \"utf8\") {\r\n        const buf = BufferSourceConverter.toUint8Array(buffer);\r\n        switch (enc.toLowerCase()) {\r\n            case \"utf8\":\r\n                return this.ToUtf8String(buf);\r\n            case \"binary\":\r\n                return this.ToBinary(buf);\r\n            case \"hex\":\r\n                return this.ToHex(buf);\r\n            case \"base64\":\r\n                return this.ToBase64(buf);\r\n            case \"base64url\":\r\n                return this.ToBase64Url(buf);\r\n            case \"utf16le\":\r\n                return Utf16Converter.toString(buf, true);\r\n            case \"utf16\":\r\n            case \"utf16be\":\r\n                return Utf16Converter.toString(buf);\r\n            default:\r\n                throw new Error(`Unknown type of encoding '${enc}'`);\r\n        }\r\n    }\r\n    static FromString(str, enc = \"utf8\") {\r\n        if (!str) {\r\n            return new ArrayBuffer(0);\r\n        }\r\n        switch (enc.toLowerCase()) {\r\n            case \"utf8\":\r\n                return this.FromUtf8String(str);\r\n            case \"binary\":\r\n                return this.FromBinary(str);\r\n            case \"hex\":\r\n                return this.FromHex(str);\r\n            case \"base64\":\r\n                return this.FromBase64(str);\r\n            case \"base64url\":\r\n                return this.FromBase64Url(str);\r\n            case \"utf16le\":\r\n                return Utf16Converter.fromString(str, true);\r\n            case \"utf16\":\r\n            case \"utf16be\":\r\n                return Utf16Converter.fromString(str);\r\n            default:\r\n                throw new Error(`Unknown type of encoding '${enc}'`);\r\n        }\r\n    }\r\n    static ToBase64(buffer) {\r\n        const buf = BufferSourceConverter.toUint8Array(buffer);\r\n        if (typeof btoa !== \"undefined\") {\r\n            const binary = this.ToString(buf, \"binary\");\r\n            return btoa(binary);\r\n        }\r\n        else {\r\n            return Buffer.from(buf).toString(\"base64\");\r\n        }\r\n    }\r\n    static FromBase64(base64) {\r\n        const formatted = this.formatString(base64);\r\n        if (!formatted) {\r\n            return new ArrayBuffer(0);\r\n        }\r\n        if (!Convert.isBase64(formatted)) {\r\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\r\n        }\r\n        if (typeof atob !== \"undefined\") {\r\n            return this.FromBinary(atob(formatted));\r\n        }\r\n        else {\r\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\r\n        }\r\n    }\r\n    static FromBase64Url(base64url) {\r\n        const formatted = this.formatString(base64url);\r\n        if (!formatted) {\r\n            return new ArrayBuffer(0);\r\n        }\r\n        if (!Convert.isBase64Url(formatted)) {\r\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\r\n        }\r\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\r\n    }\r\n    static ToBase64Url(data) {\r\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\r\n    }\r\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\r\n        switch (encoding) {\r\n            case \"ascii\":\r\n                return this.FromBinary(text);\r\n            case \"utf8\":\r\n                return Utf8Converter.fromString(text);\r\n            case \"utf16\":\r\n            case \"utf16be\":\r\n                return Utf16Converter.fromString(text);\r\n            case \"utf16le\":\r\n            case \"usc2\":\r\n                return Utf16Converter.fromString(text, true);\r\n            default:\r\n                throw new Error(`Unknown type of encoding '${encoding}'`);\r\n        }\r\n    }\r\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\r\n        switch (encoding) {\r\n            case \"ascii\":\r\n                return this.ToBinary(buffer);\r\n            case \"utf8\":\r\n                return Utf8Converter.toString(buffer);\r\n            case \"utf16\":\r\n            case \"utf16be\":\r\n                return Utf16Converter.toString(buffer);\r\n            case \"utf16le\":\r\n            case \"usc2\":\r\n                return Utf16Converter.toString(buffer, true);\r\n            default:\r\n                throw new Error(`Unknown type of encoding '${encoding}'`);\r\n        }\r\n    }\r\n    static FromBinary(text) {\r\n        const stringLength = text.length;\r\n        const resultView = new Uint8Array(stringLength);\r\n        for (let i = 0; i < stringLength; i++) {\r\n            resultView[i] = text.charCodeAt(i);\r\n        }\r\n        return resultView.buffer;\r\n    }\r\n    static ToBinary(buffer) {\r\n        const buf = BufferSourceConverter.toUint8Array(buffer);\r\n        let res = \"\";\r\n        for (let i = 0; i < buf.length; i++) {\r\n            res += String.fromCharCode(buf[i]);\r\n        }\r\n        return res;\r\n    }\r\n    static ToHex(buffer) {\r\n        const buf = BufferSourceConverter.toUint8Array(buffer);\r\n        const splitter = \"\";\r\n        const res = [];\r\n        const len = buf.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const char = buf[i].toString(16).padStart(2, \"0\");\r\n            res.push(char);\r\n        }\r\n        return res.join(splitter);\r\n    }\r\n    static FromHex(hexString) {\r\n        let formatted = this.formatString(hexString);\r\n        if (!formatted) {\r\n            return new ArrayBuffer(0);\r\n        }\r\n        if (!Convert.isHex(formatted)) {\r\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\r\n        }\r\n        if (formatted.length % 2) {\r\n            formatted = `0${formatted}`;\r\n        }\r\n        const res = new Uint8Array(formatted.length / 2);\r\n        for (let i = 0; i < formatted.length; i = i + 2) {\r\n            const c = formatted.slice(i, i + 2);\r\n            res[i / 2] = parseInt(c, 16);\r\n        }\r\n        return res.buffer;\r\n    }\r\n    static ToUtf16String(buffer, littleEndian = false) {\r\n        return Utf16Converter.toString(buffer, littleEndian);\r\n    }\r\n    static FromUtf16String(text, littleEndian = false) {\r\n        return Utf16Converter.fromString(text, littleEndian);\r\n    }\r\n    static Base64Padding(base64) {\r\n        const padCount = 4 - (base64.length % 4);\r\n        if (padCount < 4) {\r\n            for (let i = 0; i < padCount; i++) {\r\n                base64 += \"=\";\r\n            }\r\n        }\r\n        return base64;\r\n    }\r\n    static formatString(data) {\r\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\r\n    }\r\n}\r\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\r\n    const res = arguments[0];\r\n    for (let i = 1; i < arguments.length; i++) {\r\n        const obj = arguments[i];\r\n        for (const prop in obj) {\r\n            res[prop] = obj[prop];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction combine(...buf) {\r\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\r\n    const res = new Uint8Array(totalByteLength);\r\n    let currentPos = 0;\r\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\r\n        for (const item2 of arr) {\r\n            res[currentPos++] = item2;\r\n        }\r\n    });\r\n    return res.buffer;\r\n}\r\nfunction isEqual(bytes1, bytes2) {\r\n    if (!(bytes1 && bytes2)) {\r\n        return false;\r\n    }\r\n    if (bytes1.byteLength !== bytes2.byteLength) {\r\n        return false;\r\n    }\r\n    const b1 = new Uint8Array(bytes1);\r\n    const b2 = new Uint8Array(bytes2);\r\n    for (let i = 0; i < bytes1.byteLength; i++) {\r\n        if (b1[i] !== b2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nexport { BufferSourceConverter, Convert, assign, combine, isEqual };\n","import { BitString as AsnBitString } from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class BitString {\n    constructor(params, unusedBits = 0) {\n        this.unusedBits = 0;\n        this.value = new ArrayBuffer(0);\n        if (params) {\n            if (typeof params === \"number\") {\n                this.fromNumber(params);\n            }\n            else if (BufferSourceConverter.isBufferSource(params)) {\n                this.unusedBits = unusedBits;\n                this.value = BufferSourceConverter.toArrayBuffer(params);\n            }\n            else {\n                throw TypeError(\"Unsupported type of 'params' argument for BitString\");\n            }\n        }\n    }\n    fromASN(asn) {\n        if (!(asn instanceof AsnBitString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 BitString\");\n        }\n        this.unusedBits = asn.valueBlock.unusedBits;\n        this.value = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new AsnBitString({ unusedBits: this.unusedBits, valueHex: this.value });\n    }\n    toSchema(name) {\n        return new AsnBitString({ name });\n    }\n    toNumber() {\n        let res = \"\";\n        const uintArray = new Uint8Array(this.value);\n        for (const octet of uintArray) {\n            res += octet.toString(2).padStart(8, \"0\");\n        }\n        res = res.split(\"\").reverse().join(\"\");\n        if (this.unusedBits) {\n            res = res.slice(this.unusedBits).padStart(this.unusedBits, \"0\");\n        }\n        return parseInt(res, 2);\n    }\n    fromNumber(value) {\n        let bits = value.toString(2);\n        const octetSize = (bits.length + 7) >> 3;\n        this.unusedBits = (octetSize << 3) - bits.length;\n        const octets = new Uint8Array(octetSize);\n        bits = bits.padStart(octetSize << 3, \"0\").split(\"\").reverse().join(\"\");\n        let index = 0;\n        while (index < octetSize) {\n            octets[index] = parseInt(bits.slice(index << 3, (index << 3) + 8), 2);\n            index++;\n        }\n        this.value = octets.buffer;\n    }\n}\n","import { OctetString as AsnOctetString } from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nexport class OctetString {\n    constructor(param) {\n        if (typeof param === \"number\") {\n            this.buffer = new ArrayBuffer(param);\n        }\n        else {\n            if (BufferSourceConverter.isBufferSource(param)) {\n                this.buffer = BufferSourceConverter.toArrayBuffer(param);\n            }\n            else if (Array.isArray(param)) {\n                this.buffer = new Uint8Array(param);\n            }\n            else {\n                this.buffer = new ArrayBuffer(0);\n            }\n        }\n    }\n    get byteLength() {\n        return this.buffer.byteLength;\n    }\n    get byteOffset() {\n        return 0;\n    }\n    fromASN(asn) {\n        if (!(asn instanceof AsnOctetString)) {\n            throw new TypeError(\"Argument 'asn' is not instance of ASN.1 OctetString\");\n        }\n        this.buffer = asn.valueBlock.valueHex;\n        return this;\n    }\n    toASN() {\n        return new AsnOctetString({ valueHex: this.buffer });\n    }\n    toSchema(name) {\n        return new AsnOctetString({ name });\n    }\n}\n","export function isConvertible(target) {\n    if (target && target.prototype) {\n        if (target.prototype.toASN && target.prototype.fromASN) {\n            return true;\n        }\n        else {\n            return isConvertible(target.prototype);\n        }\n    }\n    else {\n        return !!(target && target.toASN && target.fromASN);\n    }\n}\nexport function isTypeOfArray(target) {\n    var _a;\n    if (target) {\n        const proto = Object.getPrototypeOf(target);\n        if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n            return true;\n        }\n        return isTypeOfArray(proto);\n    }\n    return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n","import * as asn1 from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible } from \"./helper\";\nexport class AsnSchemaStorage {\n    constructor() {\n        this.items = new WeakMap();\n    }\n    has(target) {\n        return this.items.has(target);\n    }\n    get(target) {\n        var _a, _b, _c, _d;\n        const schema = this.items.get(target);\n        if (!schema) {\n            throw new Error(`Cannot get schema for '${(_d = (_c = (_b = (_a = target) === null || _a === void 0 ? void 0 : _a.prototype) === null || _b === void 0 ? void 0 : _b.constructor) === null || _c === void 0 ? void 0 : _c.name) !== null && _d !== void 0 ? _d : target}' target`);\n        }\n        return schema;\n    }\n    cache(target) {\n        const schema = this.get(target);\n        if (!schema.schema) {\n            schema.schema = this.create(target, true);\n        }\n    }\n    createDefault(target) {\n        const schema = {\n            type: AsnTypeTypes.Sequence,\n            items: {},\n        };\n        const parentSchema = this.findParentSchema(target);\n        if (parentSchema) {\n            Object.assign(schema, parentSchema);\n            schema.items = Object.assign({}, schema.items, parentSchema.items);\n        }\n        return schema;\n    }\n    create(target, useNames) {\n        const schema = this.items.get(target) || this.createDefault(target);\n        const asn1Value = [];\n        for (const key in schema.items) {\n            const item = schema.items[key];\n            const name = useNames ? key : \"\";\n            let asn1Item;\n            if (typeof (item.type) === \"number\") {\n                const Asn1TypeName = AsnPropTypes[item.type];\n                const Asn1Type = asn1[Asn1TypeName];\n                if (!Asn1Type) {\n                    throw new Error(`Cannot get ASN1 class by name '${Asn1TypeName}'`);\n                }\n                asn1Item = new Asn1Type({ name });\n            }\n            else if (isConvertible(item.type)) {\n                const instance = new item.type();\n                asn1Item = instance.toSchema(name);\n            }\n            else if (item.optional) {\n                const itemSchema = this.get(item.type);\n                if (itemSchema.type === AsnTypeTypes.Choice) {\n                    asn1Item = new asn1.Any({ name });\n                }\n                else {\n                    asn1Item = this.create(item.type, false);\n                    asn1Item.name = name;\n                }\n            }\n            else {\n                asn1Item = new asn1.Any({ name });\n            }\n            const optional = !!item.optional || item.defaultValue !== undefined;\n            if (item.repeated) {\n                asn1Item.name = \"\";\n                const Container = item.repeated === \"set\"\n                    ? asn1.Set\n                    : asn1.Sequence;\n                asn1Item = new Container({\n                    name: \"\",\n                    value: [\n                        new asn1.Repeated({\n                            name,\n                            value: asn1Item,\n                        }),\n                    ],\n                });\n            }\n            if (item.context !== null && item.context !== undefined) {\n                if (item.implicit) {\n                    if (typeof item.type === \"number\" || isConvertible(item.type)) {\n                        const Container = item.repeated\n                            ? asn1.Constructed\n                            : asn1.Primitive;\n                        asn1Value.push(new Container({\n                            name,\n                            optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: item.context,\n                            },\n                        }));\n                    }\n                    else {\n                        this.cache(item.type);\n                        const isRepeated = !!item.repeated;\n                        let value = !isRepeated\n                            ? this.get(item.type).schema\n                            : asn1Item;\n                        value = value.valueBlock ? value.valueBlock.value : value.value;\n                        asn1Value.push(new asn1.Constructed({\n                            name: !isRepeated ? name : \"\",\n                            optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: item.context,\n                            },\n                            value,\n                        }));\n                    }\n                }\n                else {\n                    asn1Value.push(new asn1.Constructed({\n                        optional,\n                        idBlock: {\n                            tagClass: 3,\n                            tagNumber: item.context,\n                        },\n                        value: [asn1Item],\n                    }));\n                }\n            }\n            else {\n                asn1Item.optional = optional;\n                asn1Value.push(asn1Item);\n            }\n        }\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                return new asn1.Sequence({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Set:\n                return new asn1.Set({ value: asn1Value, name: \"\" });\n            case AsnTypeTypes.Choice:\n                return new asn1.Choice({ value: asn1Value, name: \"\" });\n            default:\n                throw new Error(`Unsupported ASN1 type in use`);\n        }\n    }\n    set(target, schema) {\n        this.items.set(target, schema);\n        return this;\n    }\n    findParentSchema(target) {\n        const parent = target.__proto__;\n        if (parent) {\n            const schema = this.items.get(parent);\n            return schema || this.findParentSchema(parent);\n        }\n        return null;\n    }\n}\n","import { AsnSchemaStorage } from \"./schema\";\nexport const schemaStorage = new AsnSchemaStorage();\n","import * as converters from \"./converters\";\nimport { schemaStorage } from \"./storage\";\nexport const AsnType = (options) => (target) => {\n    let schema;\n    if (!schemaStorage.has(target)) {\n        schema = schemaStorage.createDefault(target);\n        schemaStorage.set(target, schema);\n    }\n    else {\n        schema = schemaStorage.get(target);\n    }\n    Object.assign(schema, options);\n};\nexport const AsnProp = (options) => (target, propertyKey) => {\n    let schema;\n    if (!schemaStorage.has(target.constructor)) {\n        schema = schemaStorage.createDefault(target.constructor);\n        schemaStorage.set(target.constructor, schema);\n    }\n    else {\n        schema = schemaStorage.get(target.constructor);\n    }\n    const copyOptions = Object.assign({}, options);\n    if (typeof copyOptions.type === \"number\" && !copyOptions.converter) {\n        const defaultConverter = converters.defaultConverter(options.type);\n        if (!defaultConverter) {\n            throw new Error(`Cannot get default converter for property '${propertyKey}' of ${target.constructor.name}`);\n        }\n        copyOptions.converter = defaultConverter;\n    }\n    schema.items[propertyKey] = copyOptions;\n};\n","export class AsnSchemaValidationError extends Error {\n    constructor() {\n        super(...arguments);\n        this.schemas = [];\n    }\n}\n","import * as asn1 from \"asn1js\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport * as converters from \"./converters\";\nimport { AsnSchemaValidationError } from \"./errors\";\nimport { isConvertible, isTypeOfArray } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnParser {\n    static parse(data, target) {\n        let buf;\n        if (data instanceof ArrayBuffer) {\n            buf = data;\n        }\n        else if (typeof Buffer !== \"undefined\" && Buffer.isBuffer(data)) {\n            buf = new Uint8Array(data).buffer;\n        }\n        else if (ArrayBuffer.isView(data) || data.buffer instanceof ArrayBuffer) {\n            buf = data.buffer;\n        }\n        else {\n            throw new TypeError(\"Wrong type of 'data' argument\");\n        }\n        const asn1Parsed = asn1.fromBER(buf);\n        if (asn1Parsed.result.error) {\n            throw new Error(asn1Parsed.result.error);\n        }\n        const res = this.fromASN(asn1Parsed.result, target);\n        return res;\n    }\n    static fromASN(asn1Schema, target) {\n        var _a;\n        try {\n            if (isConvertible(target)) {\n                const value = new target();\n                return value.fromASN(asn1Schema);\n            }\n            const schema = schemaStorage.get(target);\n            schemaStorage.cache(target);\n            let targetSchema = schema.schema;\n            if (asn1Schema.constructor === asn1.Constructed && schema.type !== AsnTypeTypes.Choice) {\n                targetSchema = new asn1.Constructed({\n                    idBlock: {\n                        tagClass: 3,\n                        tagNumber: asn1Schema.idBlock.tagNumber,\n                    },\n                    value: schema.schema.valueBlock.value,\n                });\n                for (const key in schema.items) {\n                    delete asn1Schema[key];\n                }\n            }\n            const asn1ComparedSchema = asn1.compareSchema(asn1Schema, asn1Schema, targetSchema);\n            if (!asn1ComparedSchema.verified) {\n                throw new AsnSchemaValidationError(`Data does not match to ${target.name} ASN1 schema. ${asn1ComparedSchema.result.error}`);\n            }\n            const res = new target();\n            if (isTypeOfArray(target)) {\n                if (typeof schema.itemType === \"number\") {\n                    const converter = converters.defaultConverter(schema.itemType);\n                    if (!converter) {\n                        throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                    }\n                    return target.from(asn1Schema.valueBlock.value, (element) => converter.fromASN(element));\n                }\n                else {\n                    return target.from(asn1Schema.valueBlock.value, (element) => this.fromASN(element, schema.itemType));\n                }\n            }\n            for (const key in schema.items) {\n                if (!asn1Schema[key]) {\n                    continue;\n                }\n                const schemaItem = schema.items[key];\n                if (typeof (schemaItem.type) === \"number\" || isConvertible(schemaItem.type)) {\n                    const converter = (_a = schemaItem.converter) !== null && _a !== void 0 ? _a : (isConvertible(schemaItem.type)\n                        ? new schemaItem.type()\n                        : null);\n                    if (!converter) {\n                        throw new Error(\"Converter is empty\");\n                    }\n                    if (schemaItem.repeated) {\n                        if (schemaItem.implicit) {\n                            const Container = schemaItem.repeated === \"sequence\"\n                                ? asn1.Sequence\n                                : asn1.Set;\n                            const newItem = new Container();\n                            newItem.valueBlock = asn1Schema[key].valueBlock;\n                            const value = asn1.fromBER(newItem.toBER(false)).result.valueBlock.value;\n                            res[key] = Array.from(value, (element) => converter.fromASN(element));\n                        }\n                        else {\n                            res[key] = Array.from(asn1Schema[key], (element) => converter.fromASN(element));\n                        }\n                    }\n                    else {\n                        let value = asn1Schema[key];\n                        if (schemaItem.implicit) {\n                            let newItem;\n                            if (isConvertible(schemaItem.type)) {\n                                newItem = new schemaItem.type().toSchema(\"\");\n                            }\n                            else {\n                                const Asn1TypeName = AsnPropTypes[schemaItem.type];\n                                const Asn1Type = asn1[Asn1TypeName];\n                                if (!Asn1Type) {\n                                    throw new Error(`Cannot get '${Asn1TypeName}' class from asn1js module`);\n                                }\n                                newItem = new Asn1Type();\n                            }\n                            newItem.valueBlock = value.valueBlock;\n                            value = asn1.fromBER(newItem.toBER(false)).result;\n                        }\n                        res[key] = converter.fromASN(value);\n                    }\n                }\n                else {\n                    if (schemaItem.repeated) {\n                        res[key] = Array.from(asn1Schema[key], (element) => this.fromASN(element, schemaItem.type));\n                    }\n                    else {\n                        res[key] = this.fromASN(asn1Schema[key], schemaItem.type);\n                    }\n                }\n            }\n            return res;\n        }\n        catch (error) {\n            if (error instanceof AsnSchemaValidationError) {\n                error.schemas.push(target.name);\n            }\n            throw error;\n        }\n    }\n}\n","import * as asn1 from \"asn1js\";\nimport * as converters from \"./converters\";\nimport { AsnPropTypes, AsnTypeTypes } from \"./enums\";\nimport { isConvertible, isArrayEqual } from \"./helper\";\nimport { schemaStorage } from \"./storage\";\nexport class AsnSerializer {\n    static serialize(obj) {\n        if (obj instanceof asn1.BaseBlock) {\n            return obj.toBER(false);\n        }\n        return this.toASN(obj).toBER(false);\n    }\n    static toASN(obj) {\n        if (obj && isConvertible(obj.constructor)) {\n            return obj.toASN();\n        }\n        const target = obj.constructor;\n        const schema = schemaStorage.get(target);\n        schemaStorage.cache(target);\n        let asn1Value = [];\n        if (schema.itemType) {\n            if (typeof schema.itemType === \"number\") {\n                const converter = converters.defaultConverter(schema.itemType);\n                if (!converter) {\n                    throw new Error(`Cannot get default converter for array item of ${target.name} ASN1 schema`);\n                }\n                asn1Value = obj.map((o) => converter.toASN(o));\n            }\n            else {\n                asn1Value = obj.map((o) => this.toAsnItem({ type: schema.itemType }, \"[]\", target, o));\n            }\n        }\n        else {\n            for (const key in schema.items) {\n                const schemaItem = schema.items[key];\n                const objProp = obj[key];\n                if (objProp === undefined\n                    || schemaItem.defaultValue === objProp\n                    || (typeof schemaItem.defaultValue === \"object\" && typeof objProp === \"object\"\n                        && isArrayEqual(this.serialize(schemaItem.defaultValue), this.serialize(objProp)))) {\n                    continue;\n                }\n                let asn1Item = AsnSerializer.toAsnItem(schemaItem, key, target, objProp);\n                if (typeof schemaItem.context === \"number\") {\n                    if (schemaItem.implicit) {\n                        if (!schemaItem.repeated\n                            && (typeof schemaItem.type === \"number\" || isConvertible(schemaItem.type))) {\n                            const value = {};\n                            value.valueHex = asn1Item instanceof asn1.Null ? asn1Item.valueBeforeDecode : asn1Item.valueBlock.toBER();\n                            asn1Value.push(new asn1.Primitive(Object.assign({ optional: schemaItem.optional, idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                } }, value)));\n                        }\n                        else {\n                            asn1Value.push(new asn1.Constructed({\n                                optional: schemaItem.optional,\n                                idBlock: {\n                                    tagClass: 3,\n                                    tagNumber: schemaItem.context,\n                                },\n                                value: asn1Item.valueBlock.value,\n                            }));\n                        }\n                    }\n                    else {\n                        asn1Value.push(new asn1.Constructed({\n                            optional: schemaItem.optional,\n                            idBlock: {\n                                tagClass: 3,\n                                tagNumber: schemaItem.context,\n                            },\n                            value: [asn1Item],\n                        }));\n                    }\n                }\n                else if (schemaItem.repeated) {\n                    asn1Value = asn1Value.concat(asn1Item);\n                }\n                else {\n                    asn1Value.push(asn1Item);\n                }\n            }\n        }\n        let asnSchema;\n        switch (schema.type) {\n            case AsnTypeTypes.Sequence:\n                asnSchema = new asn1.Sequence({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Set:\n                asnSchema = new asn1.Set({ value: asn1Value });\n                break;\n            case AsnTypeTypes.Choice:\n                if (!asn1Value[0]) {\n                    throw new Error(`Schema '${target.name}' has wrong data. Choice cannot be empty.`);\n                }\n                asnSchema = asn1Value[0];\n                break;\n        }\n        return asnSchema;\n    }\n    static toAsnItem(schemaItem, key, target, objProp) {\n        let asn1Item;\n        if (typeof (schemaItem.type) === \"number\") {\n            const converter = schemaItem.converter;\n            if (!converter) {\n                throw new Error(`Property '${key}' doesn't have converter for type ${AsnPropTypes[schemaItem.type]} in schema '${target.name}'`);\n            }\n            if (schemaItem.repeated) {\n                const items = Array.from(objProp, (element) => converter.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\"\n                    ? asn1.Sequence\n                    : asn1.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = converter.toASN(objProp);\n            }\n        }\n        else {\n            if (schemaItem.repeated) {\n                const items = Array.from(objProp, (element) => this.toASN(element));\n                const Container = schemaItem.repeated === \"sequence\"\n                    ? asn1.Sequence\n                    : asn1.Set;\n                asn1Item = new Container({\n                    value: items,\n                });\n            }\n            else {\n                asn1Item = this.toASN(objProp);\n            }\n        }\n        return asn1Item;\n    }\n}\n","export class AsnArray extends Array {\n    constructor(items = []) {\n        if (typeof items === \"number\") {\n            super(items);\n        }\n        else {\n            super();\n            for (const item of items) {\n                this.push(item);\n            }\n        }\n    }\n}\n","import * as asn1js from \"asn1js\";\nimport { BufferSourceConverter } from \"pvtsutils\";\nimport { AsnParser } from \"./parser\";\nimport { AsnSerializer } from \"./serializer\";\nexport class AsnConvert {\n    static serialize(obj) {\n        return AsnSerializer.serialize(obj);\n    }\n    static parse(data, target) {\n        return AsnParser.parse(data, target);\n    }\n    static toString(data) {\n        const buf = BufferSourceConverter.isBufferSource(data)\n            ? BufferSourceConverter.toArrayBuffer(data)\n            : AsnConvert.serialize(data);\n        const asn = asn1js.fromBER(buf);\n        if (asn.offset === -1) {\n            throw new Error(`Cannot decode ASN.1 data. ${asn.result.error}`);\n        }\n        return asn.result.toString();\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","(function (root) {\n    'use strict';\n    // A list of regular expressions that match arbitrary IPv4 addresses,\n    // for which a number of weird notations exist.\n    // Note that an address like 0010.0xa5.1.1 is considered legal.\n    const ipv4Part = '(0?\\\\d+|0x[a-f0-9]+)';\n    const ipv4Regexes = {\n        fourOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        threeOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        twoOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        longValue: new RegExp(`^${ipv4Part}$`, 'i')\n    };\n\n    // Regular Expression for checking Octal numbers\n    const octalRegex = new RegExp(`^0[0-7]+$`, 'i');\n    const hexRegex = new RegExp(`^0x[a-f0-9]+$`, 'i');\n\n    const zoneIndex = '%[0-9a-z]{1,}';\n\n    // IPv6-matching regular expressions.\n    // For IPv6, the task is simpler: it is enough to match the colon-delimited\n    // hexadecimal IPv6 and a transitional variant with dotted-decimal IPv4 at\n    // the end.\n    const ipv6Part = '(?:[0-9a-f]+::?)+';\n    const ipv6Regexes = {\n        zoneIndex: new RegExp(zoneIndex, 'i'),\n        'native': new RegExp(`^(::)?(${ipv6Part})?([0-9a-f]+)?(::)?(${zoneIndex})?$`, 'i'),\n        deprecatedTransitional: new RegExp(`^(?:::)(${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?)$`, 'i'),\n        transitional: new RegExp(`^((?:${ipv6Part})|(?:::)(?:${ipv6Part})?)${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?$`, 'i')\n    };\n\n    // Expand :: in an IPv6 address or address part consisting of `parts` groups.\n    function expandIPv6 (string, parts) {\n        // More than one '::' means invalid adddress\n        if (string.indexOf('::') !== string.lastIndexOf('::')) {\n            return null;\n        }\n\n        let colonCount = 0;\n        let lastColon = -1;\n        let zoneId = (string.match(ipv6Regexes.zoneIndex) || [])[0];\n        let replacement, replacementCount;\n\n        // Remove zone index and save it for later\n        if (zoneId) {\n            zoneId = zoneId.substring(1);\n            string = string.replace(/%.+$/, '');\n        }\n\n        // How many parts do we already have?\n        while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n            colonCount++;\n        }\n\n        // 0::0 is two parts more than ::\n        if (string.substr(0, 2) === '::') {\n            colonCount--;\n        }\n\n        if (string.substr(-2, 2) === '::') {\n            colonCount--;\n        }\n\n        // The following loop would hang if colonCount > parts\n        if (colonCount > parts) {\n            return null;\n        }\n\n        // replacement = ':' + '0:' * (parts - colonCount)\n        replacementCount = parts - colonCount;\n        replacement = ':';\n        while (replacementCount--) {\n            replacement += '0:';\n        }\n\n        // Insert the missing zeroes\n        string = string.replace('::', replacement);\n\n        // Trim any garbage which may be hanging around if :: was at the edge in\n        // the source strin\n        if (string[0] === ':') {\n            string = string.slice(1);\n        }\n\n        if (string[string.length - 1] === ':') {\n            string = string.slice(0, -1);\n        }\n\n        parts = (function () {\n            const ref = string.split(':');\n            const results = [];\n\n            for (let i = 0; i < ref.length; i++) {\n                results.push(parseInt(ref[i], 16));\n            }\n\n            return results;\n        })();\n\n        return {\n            parts: parts,\n            zoneId: zoneId\n        };\n    }\n\n    // A generic CIDR (Classless Inter-Domain Routing) RFC1518 range matcher.\n    function matchCIDR (first, second, partSize, cidrBits) {\n        if (first.length !== second.length) {\n            throw new Error('ipaddr: cannot match CIDR for objects with different lengths');\n        }\n\n        let part = 0;\n        let shift;\n\n        while (cidrBits > 0) {\n            shift = partSize - cidrBits;\n            if (shift < 0) {\n                shift = 0;\n            }\n\n            if (first[part] >> shift !== second[part] >> shift) {\n                return false;\n            }\n\n            cidrBits -= partSize;\n            part += 1;\n        }\n\n        return true;\n    }\n\n    function parseIntAuto (string) {\n        // Hexadedimal base 16 (0x#)\n        if (hexRegex.test(string)) {\n            return parseInt(string, 16);\n        }\n        // While octal representation is discouraged by ECMAScript 3\n        // and forbidden by ECMAScript 5, we silently allow it to\n        // work only if the rest of the string has numbers less than 8.\n        if (string[0] === '0' && !isNaN(parseInt(string[1], 10))) {\n        if (octalRegex.test(string)) {\n            return parseInt(string, 8);\n        }\n            throw new Error(`ipaddr: cannot parse ${string} as octal`);\n        }\n        // Always include the base 10 radix!\n        return parseInt(string, 10);\n    }\n\n    function padPart (part, length) {\n        while (part.length < length) {\n            part = `0${part}`;\n        }\n\n        return part;\n    }\n\n    const ipaddr = {};\n\n    // An IPv4 address (RFC791).\n    ipaddr.IPv4 = (function () {\n        // Constructs a new IPv4 address from an array of four octets\n        // in network order (MSB first)\n        // Verifies the input.\n        function IPv4 (octets) {\n            if (octets.length !== 4) {\n                throw new Error('ipaddr: ipv4 octet count should be 4');\n            }\n\n            let i, octet;\n\n            for (i = 0; i < octets.length; i++) {\n                octet = octets[i];\n                if (!((0 <= octet && octet <= 255))) {\n                    throw new Error('ipaddr: ipv4 octet should fit in 8 bits');\n                }\n            }\n\n            this.octets = octets;\n        }\n\n        // Special IPv4 address ranges.\n        // See also https://en.wikipedia.org/wiki/Reserved_IP_addresses\n        IPv4.prototype.SpecialRanges = {\n            unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n            broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n            // RFC3171\n            multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n            // RFC3927\n            linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n            // RFC5735\n            loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n            // RFC6598\n            carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n            // RFC1918\n            'private': [\n                [new IPv4([10, 0, 0, 0]), 8],\n                [new IPv4([172, 16, 0, 0]), 12],\n                [new IPv4([192, 168, 0, 0]), 16]\n            ],\n            // Reserved and testing-only ranges; RFCs 5735, 5737, 2544, 1700\n            reserved: [\n                [new IPv4([192, 0, 0, 0]), 24],\n                [new IPv4([192, 0, 2, 0]), 24],\n                [new IPv4([192, 88, 99, 0]), 24],\n                [new IPv4([198, 51, 100, 0]), 24],\n                [new IPv4([203, 0, 113, 0]), 24],\n                [new IPv4([240, 0, 0, 0]), 4]\n            ]\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv4.prototype.kind = function () {\n            return 'ipv4';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv4.prototype.match = function (other, cidrRange) {\n            let ref;\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv4') {\n                throw new Error('ipaddr: cannot match ipv4 address with non-ipv4 one');\n            }\n\n            return matchCIDR(this.octets, other.octets, 8, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv4 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv4.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 8,\n                128: 7,\n                192: 6,\n                224: 5,\n                240: 4,\n                248: 3,\n                252: 2,\n                254: 1,\n                255: 0\n            };\n            let i, octet, zeros;\n\n            for (i = 3; i >= 0; i -= 1) {\n                octet = this.octets[i];\n                if (octet in zerotable) {\n                    zeros = zerotable[octet];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 8) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 32 - cidr;\n        };\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv4.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv4.prototype.toByteArray = function () {\n            return this.octets.slice(0);\n        };\n\n        // Converts this IPv4 address to an IPv4-mapped IPv6 address.\n        IPv4.prototype.toIPv4MappedAddress = function () {\n            return ipaddr.IPv6.parse(`::ffff:${this.toString()}`);\n        };\n\n        // Symmetrical method strictly for aligning with the IPv6 methods.\n        IPv4.prototype.toNormalizedString = function () {\n            return this.toString();\n        };\n\n        // Returns the address in convenient, decimal-dotted format.\n        IPv4.prototype.toString = function () {\n            return this.octets.join('.');\n        };\n\n        return IPv4;\n    })();\n\n    // A utility function to return broadcast address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.broadcastAddressFromCIDR = function (string) {\n\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 4) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Checks if a given string is formatted like IPv4 address.\n    ipaddr.IPv4.isIPv4 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks if a given string is a valid IPv4 address.\n    ipaddr.IPv4.isValid = function (string) {\n        try {\n            new this(this.parser(string));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // Checks if a given string is a full four-part IPv4 Address.\n    ipaddr.IPv4.isValidFourPartDecimal = function (string) {\n        if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 4) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Tries to parse and validate a string with IPv4 address.\n    // Throws an error if it fails.\n    ipaddr.IPv4.parse = function (string) {\n        const parts = this.parser(string);\n\n        if (parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv4 Address');\n        }\n\n        return new this(parts);\n    };\n\n    // Parses the string as an IPv4 Address with CIDR Notation.\n    ipaddr.IPv4.parseCIDR = function (string) {\n        let match;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            const maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 32) {\n                const parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv4 CIDR range');\n    };\n\n    // Classful variants (like a.b, where a is an octet, and b is a 24-bit\n    // value representing last three octets; this corresponds to a class C\n    // address) are omitted due to classless nature of modern Internet.\n    ipaddr.IPv4.parser = function (string) {\n        let match, part, value;\n\n        // parseInt recognizes all that octal & hexadecimal weirdness for us\n        if ((match = string.match(ipv4Regexes.fourOctet))) {\n            return (function () {\n                const ref = match.slice(1, 6);\n                const results = [];\n\n                for (let i = 0; i < ref.length; i++) {\n                    part = ref[i];\n                    results.push(parseIntAuto(part));\n                }\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.longValue))) {\n            value = parseIntAuto(match[1]);\n            if (value > 0xffffffff || value < 0) {\n                throw new Error('ipaddr: address outside defined range');\n            }\n\n            return ((function () {\n                const results = [];\n                let shift;\n\n                for (shift = 0; shift <= 24; shift += 8) {\n                    results.push((value >> shift) & 0xff);\n                }\n\n                return results;\n            })()).reverse();\n        } else if ((match = string.match(ipv4Regexes.twoOctet))) {\n            return (function () {\n                const ref = match.slice(1, 4);\n                const results = [];\n\n                value = parseIntAuto(ref[1]);\n                if (value > 0xffffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push((value >> 16) & 0xff);\n                results.push((value >>  8) & 0xff);\n                results.push( value        & 0xff);\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.threeOctet))) {\n            return (function () {\n                const ref = match.slice(1, 5);\n                const results = [];\n\n                value = parseIntAuto(ref[2]);\n                if (value > 0xffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push(parseIntAuto(ref[1]));\n                results.push((value >> 8) & 0xff);\n                results.push( value       & 0xff);\n\n                return results;\n            })();\n        } else {\n            return null;\n        }\n    };\n\n    // A utility function to return subnet mask in IPv4 format given the prefix length\n    ipaddr.IPv4.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 32) {\n            throw new Error('ipaddr: invalid IPv4 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 4) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // An IPv6 address (RFC2460)\n    ipaddr.IPv6 = (function () {\n        // Constructs an IPv6 address from an array of eight 16 - bit parts\n        // or sixteen 8 - bit parts in network order(MSB first).\n        // Throws an error if the input is invalid.\n        function IPv6 (parts, zoneId) {\n            let i, part;\n\n            if (parts.length === 16) {\n                this.parts = [];\n                for (i = 0; i <= 14; i += 2) {\n                    this.parts.push((parts[i] << 8) | parts[i + 1]);\n                }\n            } else if (parts.length === 8) {\n                this.parts = parts;\n            } else {\n                throw new Error('ipaddr: ipv6 part count should be 8 or 16');\n            }\n\n            for (i = 0; i < this.parts.length; i++) {\n                part = this.parts[i];\n                if (!((0 <= part && part <= 0xffff))) {\n                    throw new Error('ipaddr: ipv6 part should fit in 16 bits');\n                }\n            }\n\n            if (zoneId) {\n                this.zoneId = zoneId;\n            }\n        }\n\n        // Special IPv6 ranges\n        IPv6.prototype.SpecialRanges = {\n            // RFC4291, here and after\n            unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n            linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n            multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n            loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n            uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n            ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n            // RFC6145\n            rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n            // RFC6052\n            rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n            // RFC3056\n            '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n            // RFC6052, RFC6146\n            teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n            // RFC4291\n            reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n        };\n\n        // Checks if this address is an IPv4-mapped IPv6 address.\n        IPv6.prototype.isIPv4MappedAddress = function () {\n            return this.range() === 'ipv4Mapped';\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv6.prototype.kind = function () {\n            return 'ipv6';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv6.prototype.match = function (other, cidrRange) {\n            let ref;\n\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv6') {\n                throw new Error('ipaddr: cannot match ipv6 address with non-ipv6 one');\n            }\n\n            return matchCIDR(this.parts, other.parts, 16, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv6 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv6.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 16,\n                32768: 15,\n                49152: 14,\n                57344: 13,\n                61440: 12,\n                63488: 11,\n                64512: 10,\n                65024: 9,\n                65280: 8,\n                65408: 7,\n                65472: 6,\n                65504: 5,\n                65520: 4,\n                65528: 3,\n                65532: 2,\n                65534: 1,\n                65535: 0\n            };\n            let part, zeros;\n\n            for (let i = 7; i >= 0; i -= 1) {\n                part = this.parts[i];\n                if (part in zerotable) {\n                    zeros = zerotable[part];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 16) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 128 - cidr;\n        };\n\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv6.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv6.prototype.toByteArray = function () {\n            let part;\n            const bytes = [];\n            const ref = this.parts;\n            for (let i = 0; i < ref.length; i++) {\n                part = ref[i];\n                bytes.push(part >> 8);\n                bytes.push(part & 0xff);\n            }\n\n            return bytes;\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:0db8:0008:0066:0000:0000:0000:0001\n        IPv6.prototype.toFixedLengthString = function () {\n            const addr = ((function () {\n                const results = [];\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(padPart(this.parts[i].toString(16), 4));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Converts this address to IPv4 address if it is an IPv4-mapped IPv6 address.\n        // Throws an error otherwise.\n        IPv6.prototype.toIPv4Address = function () {\n            if (!this.isIPv4MappedAddress()) {\n                throw new Error('ipaddr: trying to convert a generic ipv6 address to ipv4');\n            }\n\n            const ref = this.parts.slice(-2);\n            const high = ref[0];\n            const low = ref[1];\n\n            return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:db8:8:66:0:0:0:1\n        //\n        // Deprecated: use toFixedLengthString() instead.\n        IPv6.prototype.toNormalizedString = function () {\n            const addr = ((function () {\n                const results = [];\n\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(this.parts[i].toString(16));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        // in line with RFC 5952 (see https://tools.ietf.org/html/rfc5952#section-4)\n        IPv6.prototype.toRFC5952String = function () {\n            const regex = /((^|:)(0(:|$)){2,})/g;\n            const string = this.toNormalizedString();\n            let bestMatchIndex = 0;\n            let bestMatchLength = -1;\n            let match;\n\n            while ((match = regex.exec(string))) {\n                if (match[0].length > bestMatchLength) {\n                    bestMatchIndex = match.index;\n                    bestMatchLength = match[0].length;\n                }\n            }\n\n            if (bestMatchLength < 0) {\n                return string;\n            }\n\n            return `${string.substring(0, bestMatchIndex)}::${string.substring(bestMatchIndex + bestMatchLength)}`;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        //\n        // Deprecated: use toRFC5952String() instead.\n        IPv6.prototype.toString = function () {\n            // Replace the first sequence of 1 or more '0' parts with '::'\n            return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n        };\n\n        return IPv6;\n\n    })();\n\n    // A utility function to return broadcast address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.broadcastAddressFromCIDR = function (string) {\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 16) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Checks if a given string is formatted like IPv6 address.\n    ipaddr.IPv6.isIPv6 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks to see if string is a valid IPv6 Address\n    ipaddr.IPv6.isValid = function (string) {\n\n        // Since IPv6.isValid is always called first, this shortcut\n        // provides a substantial performance gain.\n        if (typeof string === 'string' && string.indexOf(':') === -1) {\n            return false;\n        }\n\n        try {\n            const addr = this.parser(string);\n            new this(addr.parts, addr.zoneId);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 16) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Tries to parse and validate a string with IPv6 address.\n    // Throws an error if it fails.\n    ipaddr.IPv6.parse = function (string) {\n        const addr = this.parser(string);\n\n        if (addr.parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv6 Address');\n        }\n\n        return new this(addr.parts, addr.zoneId);\n    };\n\n    ipaddr.IPv6.parseCIDR = function (string) {\n        let maskLength, match, parsed;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 128) {\n                parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv6 CIDR range');\n    };\n\n    // Parse an IPv6 address.\n    ipaddr.IPv6.parser = function (string) {\n        let addr, i, match, octet, octets, zoneId;\n\n        if ((match = string.match(ipv6Regexes.deprecatedTransitional))) {\n            return this.parser(`::ffff:${match[1]}`);\n        }\n        if (ipv6Regexes.native.test(string)) {\n            return expandIPv6(string, 8);\n        }\n        if ((match = string.match(ipv6Regexes.transitional))) {\n            zoneId = match[6] || '';\n            addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n            if (addr.parts) {\n                octets = [\n                    parseInt(match[2]),\n                    parseInt(match[3]),\n                    parseInt(match[4]),\n                    parseInt(match[5])\n                ];\n                for (i = 0; i < octets.length; i++) {\n                    octet = octets[i];\n                    if (!((0 <= octet && octet <= 255))) {\n                        return null;\n                    }\n                }\n\n                addr.parts.push(octets[0] << 8 | octets[1]);\n                addr.parts.push(octets[2] << 8 | octets[3]);\n                return {\n                    parts: addr.parts,\n                    zoneId: addr.zoneId\n                };\n            }\n        }\n\n        return null;\n    };\n\n    // A utility function to return subnet mask in IPv6 format given the prefix length\n    ipaddr.IPv6.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 128) {\n            throw new Error('ipaddr: invalid IPv6 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 16) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // Try to parse an array in network order (MSB first) for IPv4 and IPv6\n    ipaddr.fromByteArray = function (bytes) {\n        const length = bytes.length;\n\n        if (length === 4) {\n            return new ipaddr.IPv4(bytes);\n        } else if (length === 16) {\n            return new ipaddr.IPv6(bytes);\n        } else {\n            throw new Error('ipaddr: the binary input is neither an IPv6 nor IPv4 address');\n        }\n    };\n\n    // Checks if the address is valid IP address\n    ipaddr.isValid = function (string) {\n        return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n    };\n\n\n    // Attempts to parse an IP Address, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parse = function (string) {\n        if (ipaddr.IPv6.isValid(string)) {\n            return ipaddr.IPv6.parse(string);\n        } else if (ipaddr.IPv4.isValid(string)) {\n            return ipaddr.IPv4.parse(string);\n        } else {\n            throw new Error('ipaddr: the address has neither IPv6 nor IPv4 format');\n        }\n    };\n\n    // Attempt to parse CIDR notation, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parseCIDR = function (string) {\n        try {\n            return ipaddr.IPv6.parseCIDR(string);\n        } catch (e) {\n            try {\n                return ipaddr.IPv4.parseCIDR(string);\n            } catch (e2) {\n                throw new Error('ipaddr: the address has neither IPv6 nor IPv4 CIDR format');\n            }\n        }\n    };\n\n    // Parse an address and return plain IPv4 address if it is an IPv4-mapped address\n    ipaddr.process = function (string) {\n        const addr = this.parse(string);\n\n        if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n            return addr.toIPv4Address();\n        } else {\n            return addr;\n        }\n    };\n\n    // An utility function to ease named range matching. See examples below.\n    // rangeList can contain both IPv4 and IPv6 subnet entries and will not throw errors\n    // on matching IPv4 addresses to IPv6 ranges or vice versa.\n    ipaddr.subnetMatch = function (address, rangeList, defaultName) {\n        let i, rangeName, rangeSubnets, subnet;\n\n        if (defaultName === undefined || defaultName === null) {\n            defaultName = 'unicast';\n        }\n\n        for (rangeName in rangeList) {\n            if (Object.prototype.hasOwnProperty.call(rangeList, rangeName)) {\n                rangeSubnets = rangeList[rangeName];\n                // ECMA5 Array.isArray isn't available everywhere\n                if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n                    rangeSubnets = [rangeSubnets];\n                }\n\n                for (i = 0; i < rangeSubnets.length; i++) {\n                    subnet = rangeSubnets[i];\n                    if (address.kind() === subnet[0].kind() && address.match.apply(address, subnet)) {\n                        return rangeName;\n                    }\n                }\n            }\n        }\n\n        return defaultName;\n    };\n\n    // Export for both the CommonJS and browser-like environment\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = ipaddr;\n\n    } else {\n        root.ipaddr = ipaddr;\n    }\n\n}(this));\n","import * as ip from \"ipaddr.js\";\nimport { Convert } from \"pvtsutils\";\nexport class IpConverter {\n    static decodeIP(value) {\n        if (value.length === 64 && parseInt(value, 16) === 0) {\n            return \"::/0\";\n        }\n        if (value.length !== 16) {\n            return value;\n        }\n        const mask = parseInt(value.slice(8), 16)\n            .toString(2)\n            .split('')\n            .reduce((a, k) => a + (+k), 0);\n        let ip = value.slice(0, 8)\n            .replace(/(.{2})/g, match => `${parseInt(match, 16)}.`);\n        ip = ip.slice(0, -1);\n        return `${ip}/${mask}`;\n    }\n    static toString(buf) {\n        if (buf.byteLength === 4 || buf.byteLength === 16) {\n            const uint8 = new Uint8Array(buf);\n            const addr = ip.fromByteArray(Array.from(uint8));\n            return addr.toString();\n        }\n        return this.decodeIP(Convert.ToHex(buf));\n    }\n    static fromString(text) {\n        const addr = ip.parse(text);\n        return new Uint8Array(addr.toByteArray()).buffer;\n    }\n}\n","var RelativeDistinguishedName_1, RDNSequence_1, Name_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Convert } from \"pvtsutils\";\nlet DirectoryString = class DirectoryString {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.bmpString || this.printableString || this.teletexString || this.universalString\n            || this.utf8String || \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.TeletexString })\n], DirectoryString.prototype, \"teletexString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], DirectoryString.prototype, \"printableString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.UniversalString })\n], DirectoryString.prototype, \"universalString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DirectoryString.prototype, \"utf8String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DirectoryString.prototype, \"bmpString\", void 0);\nDirectoryString = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DirectoryString);\nexport { DirectoryString };\nlet AttributeValue = class AttributeValue extends DirectoryString {\n    constructor(params = {}) {\n        super(params);\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || (this.anyValue ? Convert.ToHex(this.anyValue) : super.toString());\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], AttributeValue.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], AttributeValue.prototype, \"anyValue\", void 0);\nAttributeValue = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttributeValue);\nexport { AttributeValue };\nexport class AttributeTypeAndValue {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new AttributeValue();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AttributeTypeAndValue.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AttributeValue })\n], AttributeTypeAndValue.prototype, \"value\", void 0);\nlet RelativeDistinguishedName = RelativeDistinguishedName_1 = class RelativeDistinguishedName extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RelativeDistinguishedName_1.prototype);\n    }\n};\nRelativeDistinguishedName = RelativeDistinguishedName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: AttributeTypeAndValue })\n], RelativeDistinguishedName);\nexport { RelativeDistinguishedName };\nlet RDNSequence = RDNSequence_1 = class RDNSequence extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RDNSequence_1.prototype);\n    }\n};\nRDNSequence = RDNSequence_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: RelativeDistinguishedName })\n], RDNSequence);\nexport { RDNSequence };\nlet Name = Name_1 = class Name extends RDNSequence {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Name_1.prototype);\n    }\n};\nName = Name_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Name);\nexport { Name };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnOctetStringConverter } from \"@peculiar/asn1-schema\";\nimport { IpConverter } from \"./ip_converter\";\nimport { DirectoryString, Name } from \"./name\";\nexport const AsnIpConverter = {\n    fromASN: (value) => IpConverter.toString(AsnOctetStringConverter.fromASN(value)),\n    toASN: (value) => AsnOctetStringConverter.toASN(IpConverter.fromString(value)),\n};\nexport class OtherName {\n    constructor(params = {}) {\n        this.typeId = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherName.prototype, \"typeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], OtherName.prototype, \"value\", void 0);\nexport class EDIPartyName {\n    constructor(params = {}) {\n        this.partyName = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DirectoryString, optional: true, context: 0, implicit: true })\n], EDIPartyName.prototype, \"nameAssigner\", void 0);\n__decorate([\n    AsnProp({ type: DirectoryString, context: 1, implicit: true })\n], EDIPartyName.prototype, \"partyName\", void 0);\nlet GeneralName = class GeneralName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherName, context: 0, implicit: true })\n], GeneralName.prototype, \"otherName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 1, implicit: true })\n], GeneralName.prototype, \"rfc822Name\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 2, implicit: true })\n], GeneralName.prototype, \"dNSName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 3, implicit: true })\n], GeneralName.prototype, \"x400Address\", void 0);\n__decorate([\n    AsnProp({ type: Name, context: 4, implicit: false })\n], GeneralName.prototype, \"directoryName\", void 0);\n__decorate([\n    AsnProp({ type: EDIPartyName, context: 5 })\n], GeneralName.prototype, \"ediPartyName\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String, context: 6, implicit: true })\n], GeneralName.prototype, \"uniformResourceIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.OctetString, context: 7, implicit: true, converter: AsnIpConverter })\n], GeneralName.prototype, \"iPAddress\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, context: 8, implicit: true })\n], GeneralName.prototype, \"registeredID\", void 0);\nGeneralName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], GeneralName);\nexport { GeneralName };\n","export const id_pkix = \"1.3.6.1.5.5.7\";\nexport const id_pe = `${id_pkix}.1`;\nexport const id_qt = `${id_pkix}.2`;\nexport const id_kp = `${id_pkix}.3`;\nexport const id_ad = `${id_pkix}.48`;\nexport const id_qt_csp = `${id_qt}.1`;\nexport const id_qt_unotice = `${id_qt}.2`;\nexport const id_ad_ocsp = `${id_ad}.1`;\nexport const id_ad_caIssuers = `${id_ad}.2`;\nexport const id_ad_timeStamping = `${id_ad}.3`;\nexport const id_ad_caRepository = `${id_ad}.5`;\nexport const id_ce = \"2.5.29\";\n","var AuthorityInfoAccessSyntax_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_pe } from \"../object_identifiers\";\nexport const id_pe_authorityInfoAccess = `${id_pe}.1`;\nexport class AccessDescription {\n    constructor(params = {}) {\n        this.accessMethod = \"\";\n        this.accessLocation = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], AccessDescription.prototype, \"accessMethod\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], AccessDescription.prototype, \"accessLocation\", void 0);\nlet AuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = class AuthorityInfoAccessSyntax extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthorityInfoAccessSyntax_1.prototype);\n    }\n};\nAuthorityInfoAccessSyntax = AuthorityInfoAccessSyntax_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AccessDescription })\n], AuthorityInfoAccessSyntax);\nexport { AuthorityInfoAccessSyntax };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, OctetString } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_authorityKeyIdentifier = `${id_ce}.35`;\nexport class KeyIdentifier extends OctetString {\n}\nexport class AuthorityKeyIdentifier {\n    constructor(params = {}) {\n        if (params) {\n            Object.assign(this, params);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: KeyIdentifier, context: 0, optional: true, implicit: true })\n], AuthorityKeyIdentifier.prototype, \"keyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, optional: true, implicit: true, repeated: \"sequence\" })\n], AuthorityKeyIdentifier.prototype, \"authorityCertIssuer\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 2,\n        optional: true,\n        implicit: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], AuthorityKeyIdentifier.prototype, \"authorityCertSerialNumber\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_basicConstraints = `${id_ce}.19`;\nexport class BasicConstraints {\n    constructor(params = {}) {\n        this.cA = false;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: false })\n], BasicConstraints.prototype, \"cA\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], BasicConstraints.prototype, \"pathLenConstraint\", void 0);\n","var GeneralNames_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"./general_name\";\nimport { AsnArray } from \"@peculiar/asn1-schema\";\nlet GeneralNames = GeneralNames_1 = class GeneralNames extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralNames_1.prototype);\n    }\n};\nGeneralNames = GeneralNames_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralName })\n], GeneralNames);\nexport { GeneralNames };\n","var CertificateIssuer_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificateIssuer = `${id_ce}.29`;\nlet CertificateIssuer = CertificateIssuer_1 = class CertificateIssuer extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateIssuer_1.prototype);\n    }\n};\nCertificateIssuer = CertificateIssuer_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CertificateIssuer);\nexport { CertificateIssuer };\n","var CertificatePolicies_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_certificatePolicies = `${id_ce}.32`;\nexport const id_ce_certificatePolicies_anyPolicy = `${id_ce_certificatePolicies}.0`;\nlet DisplayText = class DisplayText {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n    toString() {\n        return this.ia5String || this.visibleString || this.bmpString || this.utf8String;\n        \"\";\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], DisplayText.prototype, \"ia5String\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.VisibleString })\n], DisplayText.prototype, \"visibleString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], DisplayText.prototype, \"bmpString\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], DisplayText.prototype, \"utf8String\", void 0);\nDisplayText = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DisplayText);\nexport { DisplayText };\nexport class NoticeReference {\n    constructor(params = {}) {\n        this.organization = new DisplayText();\n        this.noticeNumbers = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DisplayText })\n], NoticeReference.prototype, \"organization\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, repeated: \"sequence\" })\n], NoticeReference.prototype, \"noticeNumbers\", void 0);\nexport class UserNotice {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: NoticeReference, optional: true })\n], UserNotice.prototype, \"noticeRef\", void 0);\n__decorate([\n    AsnProp({ type: DisplayText, optional: true })\n], UserNotice.prototype, \"explicitText\", void 0);\nlet Qualifier = class Qualifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], Qualifier.prototype, \"cPSuri\", void 0);\n__decorate([\n    AsnProp({ type: UserNotice })\n], Qualifier.prototype, \"userNotice\", void 0);\nQualifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Qualifier);\nexport { Qualifier };\nexport class PolicyQualifierInfo {\n    constructor(params = {}) {\n        this.policyQualifierId = \"\";\n        this.qualifier = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyQualifierInfo.prototype, \"policyQualifierId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], PolicyQualifierInfo.prototype, \"qualifier\", void 0);\nexport class PolicyInformation {\n    constructor(params = {}) {\n        this.policyIdentifier = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyInformation.prototype, \"policyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: PolicyQualifierInfo, repeated: \"sequence\", optional: true })\n], PolicyInformation.prototype, \"policyQualifiers\", void 0);\nlet CertificatePolicies = CertificatePolicies_1 = class CertificatePolicies extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificatePolicies_1.prototype);\n    }\n};\nCertificatePolicies = CertificatePolicies_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PolicyInformation })\n], CertificatePolicies);\nexport { CertificatePolicies };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLNumber = `${id_ce}.20`;\nlet CRLNumber = class CRLNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CRLNumber.prototype, \"value\", void 0);\nCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLNumber);\nexport { CRLNumber };\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLNumber } from \"./crl_number\";\nexport const id_ce_deltaCRLIndicator = `${id_ce}.27`;\nlet BaseCRLNumber = class BaseCRLNumber extends CRLNumber {\n};\nBaseCRLNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], BaseCRLNumber);\nexport { BaseCRLNumber };\n","var CRLDistributionPoints_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray, BitString } from \"@peculiar/asn1-schema\";\nimport { RelativeDistinguishedName } from \"../name\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLDistributionPoints = `${id_ce}.31`;\nexport var ReasonFlags;\n(function (ReasonFlags) {\n    ReasonFlags[ReasonFlags[\"unused\"] = 1] = \"unused\";\n    ReasonFlags[ReasonFlags[\"keyCompromise\"] = 2] = \"keyCompromise\";\n    ReasonFlags[ReasonFlags[\"cACompromise\"] = 4] = \"cACompromise\";\n    ReasonFlags[ReasonFlags[\"affiliationChanged\"] = 8] = \"affiliationChanged\";\n    ReasonFlags[ReasonFlags[\"superseded\"] = 16] = \"superseded\";\n    ReasonFlags[ReasonFlags[\"cessationOfOperation\"] = 32] = \"cessationOfOperation\";\n    ReasonFlags[ReasonFlags[\"certificateHold\"] = 64] = \"certificateHold\";\n    ReasonFlags[ReasonFlags[\"privilegeWithdrawn\"] = 128] = \"privilegeWithdrawn\";\n    ReasonFlags[ReasonFlags[\"aACompromise\"] = 256] = \"aACompromise\";\n})(ReasonFlags || (ReasonFlags = {}));\nexport class Reason extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & ReasonFlags.aACompromise) {\n            res.push(\"aACompromise\");\n        }\n        if (flags & ReasonFlags.affiliationChanged) {\n            res.push(\"affiliationChanged\");\n        }\n        if (flags & ReasonFlags.cACompromise) {\n            res.push(\"cACompromise\");\n        }\n        if (flags & ReasonFlags.certificateHold) {\n            res.push(\"certificateHold\");\n        }\n        if (flags & ReasonFlags.cessationOfOperation) {\n            res.push(\"cessationOfOperation\");\n        }\n        if (flags & ReasonFlags.keyCompromise) {\n            res.push(\"keyCompromise\");\n        }\n        if (flags & ReasonFlags.privilegeWithdrawn) {\n            res.push(\"privilegeWithdrawn\");\n        }\n        if (flags & ReasonFlags.superseded) {\n            res.push(\"superseded\");\n        }\n        if (flags & ReasonFlags.unused) {\n            res.push(\"unused\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nlet DistributionPointName = class DistributionPointName {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, repeated: \"sequence\", implicit: true })\n], DistributionPointName.prototype, \"fullName\", void 0);\n__decorate([\n    AsnProp({ type: RelativeDistinguishedName, context: 1, implicit: true })\n], DistributionPointName.prototype, \"nameRelativeToCRLIssuer\", void 0);\nDistributionPointName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DistributionPointName);\nexport { DistributionPointName };\nexport class DistributionPoint {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], DistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 1, optional: true, implicit: true })\n], DistributionPoint.prototype, \"reasons\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 2, optional: true, repeated: \"sequence\", implicit: true })\n], DistributionPoint.prototype, \"cRLIssuer\", void 0);\nlet CRLDistributionPoints = CRLDistributionPoints_1 = class CRLDistributionPoints extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CRLDistributionPoints_1.prototype);\n    }\n};\nCRLDistributionPoints = CRLDistributionPoints_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], CRLDistributionPoints);\nexport { CRLDistributionPoints };\n","var FreshestCRL_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nimport { CRLDistributionPoints, DistributionPoint } from \"./crl_distribution_points\";\nexport const id_ce_freshestCRL = `${id_ce}.46`;\nlet FreshestCRL = FreshestCRL_1 = class FreshestCRL extends CRLDistributionPoints {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, FreshestCRL_1.prototype);\n    }\n};\nFreshestCRL = FreshestCRL_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: DistributionPoint })\n], FreshestCRL);\nexport { FreshestCRL };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { DistributionPointName, Reason } from \"./crl_distribution_points\";\nimport { id_ce } from \"../object_identifiers\";\nimport { AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport const id_ce_issuingDistributionPoint = `${id_ce}.28`;\nexport class IssuingDistributionPoint {\n    constructor(params = {}) {\n        this.onlyContainsUserCerts = IssuingDistributionPoint.ONLY;\n        this.onlyContainsCACerts = IssuingDistributionPoint.ONLY;\n        this.indirectCRL = IssuingDistributionPoint.ONLY;\n        this.onlyContainsAttributeCerts = IssuingDistributionPoint.ONLY;\n        Object.assign(this, params);\n    }\n    ;\n    ;\n    ;\n    ;\n}\nIssuingDistributionPoint.ONLY = false;\n__decorate([\n    AsnProp({ type: DistributionPointName, context: 0, optional: true })\n], IssuingDistributionPoint.prototype, \"distributionPoint\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, context: 1, defaultValue: IssuingDistributionPoint.ONLY })\n], IssuingDistributionPoint.prototype, \"onlyContainsUserCerts\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, context: 2, defaultValue: IssuingDistributionPoint.ONLY })\n], IssuingDistributionPoint.prototype, \"onlyContainsCACerts\", void 0);\n__decorate([\n    AsnProp({ type: Reason, context: 3, optional: true })\n], IssuingDistributionPoint.prototype, \"onlySomeReasons\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, context: 4, defaultValue: IssuingDistributionPoint.ONLY })\n], IssuingDistributionPoint.prototype, \"indirectCRL\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, context: 5, defaultValue: IssuingDistributionPoint.ONLY })\n], IssuingDistributionPoint.prototype, \"onlyContainsAttributeCerts\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_cRLReasons = `${id_ce}.21`;\nexport var CRLReasons;\n(function (CRLReasons) {\n    CRLReasons[CRLReasons[\"unspecified\"] = 0] = \"unspecified\";\n    CRLReasons[CRLReasons[\"keyCompromise\"] = 1] = \"keyCompromise\";\n    CRLReasons[CRLReasons[\"cACompromise\"] = 2] = \"cACompromise\";\n    CRLReasons[CRLReasons[\"affiliationChanged\"] = 3] = \"affiliationChanged\";\n    CRLReasons[CRLReasons[\"superseded\"] = 4] = \"superseded\";\n    CRLReasons[CRLReasons[\"cessationOfOperation\"] = 5] = \"cessationOfOperation\";\n    CRLReasons[CRLReasons[\"certificateHold\"] = 6] = \"certificateHold\";\n    CRLReasons[CRLReasons[\"removeFromCRL\"] = 8] = \"removeFromCRL\";\n    CRLReasons[CRLReasons[\"privilegeWithdrawn\"] = 9] = \"privilegeWithdrawn\";\n    CRLReasons[CRLReasons[\"aACompromise\"] = 10] = \"aACompromise\";\n})(CRLReasons || (CRLReasons = {}));\nlet CRLReason = class CRLReason {\n    constructor(reason = CRLReasons.unspecified) {\n        this.reason = CRLReasons.unspecified;\n        this.reason = reason;\n    }\n    toJSON() {\n        return CRLReasons[this.reason];\n    }\n    toString() {\n        return this.toJSON();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], CRLReason.prototype, \"reason\", void 0);\nCRLReason = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CRLReason);\nexport { CRLReason };\n","var ExtendedKeyUsage_1;\nimport { __decorate } from \"tslib\";\nimport { AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce, id_kp } from \"../object_identifiers\";\nexport const id_ce_extKeyUsage = `${id_ce}.37`;\nlet ExtendedKeyUsage = ExtendedKeyUsage_1 = class ExtendedKeyUsage extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedKeyUsage_1.prototype);\n    }\n};\nExtendedKeyUsage = ExtendedKeyUsage_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], ExtendedKeyUsage);\nexport { ExtendedKeyUsage };\nexport const anyExtendedKeyUsage = `${id_ce_extKeyUsage}.0`;\nexport const id_kp_serverAuth = `${id_kp}.1`;\nexport const id_kp_clientAuth = `${id_kp}.2`;\nexport const id_kp_codeSigning = `${id_kp}.3`;\nexport const id_kp_emailProtection = `${id_kp}.4`;\nexport const id_kp_timeStamping = `${id_kp}.8`;\nexport const id_kp_OCSPSigning = `${id_kp}.9`;\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_inhibitAnyPolicy = `${id_ce}.54`;\nlet InhibitAnyPolicy = class InhibitAnyPolicy {\n    constructor(value = new ArrayBuffer(0)) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], InhibitAnyPolicy.prototype, \"value\", void 0);\nInhibitAnyPolicy = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InhibitAnyPolicy);\nexport { InhibitAnyPolicy };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_invalidityDate = `${id_ce}.24`;\nlet InvalidityDate = class InvalidityDate {\n    constructor(value) {\n        this.value = new Date();\n        if (value) {\n            this.value = value;\n        }\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], InvalidityDate.prototype, \"value\", void 0);\nInvalidityDate = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], InvalidityDate);\nexport { InvalidityDate };\n","var IssueAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_issuerAltName = `${id_ce}.18`;\nlet IssueAlternativeName = IssueAlternativeName_1 = class IssueAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, IssueAlternativeName_1.prototype);\n    }\n};\nIssueAlternativeName = IssueAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], IssueAlternativeName);\nexport { IssueAlternativeName };\n","import { BitString } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_keyUsage = `${id_ce}.15`;\nexport var KeyUsageFlags;\n(function (KeyUsageFlags) {\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\n})(KeyUsageFlags || (KeyUsageFlags = {}));\nexport class KeyUsage extends BitString {\n    toJSON() {\n        const flag = this.toNumber();\n        const res = [];\n        if (flag & KeyUsageFlags.cRLSign) {\n            res.push(\"crlSign\");\n        }\n        if (flag & KeyUsageFlags.dataEncipherment) {\n            res.push(\"dataEncipherment\");\n        }\n        if (flag & KeyUsageFlags.decipherOnly) {\n            res.push(\"decipherOnly\");\n        }\n        if (flag & KeyUsageFlags.digitalSignature) {\n            res.push(\"digitalSignature\");\n        }\n        if (flag & KeyUsageFlags.encipherOnly) {\n            res.push(\"encipherOnly\");\n        }\n        if (flag & KeyUsageFlags.keyAgreement) {\n            res.push(\"keyAgreement\");\n        }\n        if (flag & KeyUsageFlags.keyCertSign) {\n            res.push(\"keyCertSign\");\n        }\n        if (flag & KeyUsageFlags.keyEncipherment) {\n            res.push(\"keyEncipherment\");\n        }\n        if (flag & KeyUsageFlags.nonRepudiation) {\n            res.push(\"nonRepudiation\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\n","var GeneralSubtrees_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"../general_name\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_nameConstraints = `${id_ce}.30`;\nexport class GeneralSubtree {\n    constructor(params = {}) {\n        this.base = new GeneralName();\n        this.minimum = 0;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], GeneralSubtree.prototype, \"base\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 0, defaultValue: 0, implicit: true })\n], GeneralSubtree.prototype, \"minimum\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 1, optional: true, implicit: true })\n], GeneralSubtree.prototype, \"maximum\", void 0);\nlet GeneralSubtrees = GeneralSubtrees_1 = class GeneralSubtrees extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, GeneralSubtrees_1.prototype);\n    }\n};\nGeneralSubtrees = GeneralSubtrees_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: GeneralSubtree })\n], GeneralSubtrees);\nexport { GeneralSubtrees };\nexport class NameConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 0, optional: true, implicit: true })\n], NameConstraints.prototype, \"permittedSubtrees\", void 0);\n__decorate([\n    AsnProp({ type: GeneralSubtrees, context: 1, optional: true, implicit: true })\n], NameConstraints.prototype, \"excludedSubtrees\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyConstraints = `${id_ce}.36`;\nexport class PolicyConstraints {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer, context: 0, implicit: true, optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"requireExplicitPolicy\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer, context: 1, implicit: true, optional: true,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], PolicyConstraints.prototype, \"inhibitPolicyMapping\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_policyMappings = `${id_ce}.33`;\nexport class PolicyMappings {\n    constructor(params = {}) {\n        this.issuerDomainPolicy = \"\";\n        this.subjectDomainPolicy = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMappings.prototype, \"issuerDomainPolicy\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PolicyMappings.prototype, \"subjectDomainPolicy\", void 0);\n","var SubjectAlternativeName_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"../general_names\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectAltName = `${id_ce}.17`;\nlet SubjectAlternativeName = SubjectAlternativeName_1 = class SubjectAlternativeName extends GeneralNames {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectAlternativeName_1.prototype);\n    }\n};\nSubjectAlternativeName = SubjectAlternativeName_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SubjectAlternativeName);\nexport { SubjectAlternativeName };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"values\", void 0);\n","var SubjectDirectoryAttributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"../attribute\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_subjectDirectoryAttributes = `${id_ce}.9`;\nlet SubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = class SubjectDirectoryAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SubjectDirectoryAttributes_1.prototype);\n    }\n};\nSubjectDirectoryAttributes = SubjectDirectoryAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], SubjectDirectoryAttributes);\nexport { SubjectDirectoryAttributes };\n","import { id_ce } from \"../object_identifiers\";\nimport { KeyIdentifier } from \"./authority_key_identifier\";\nexport const id_ce_subjectKeyIdentifier = `${id_ce}.14`;\nexport class SubjectKeyIdentifier extends KeyIdentifier {\n}\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_ce } from \"../object_identifiers\";\nexport const id_ce_privateKeyUsagePeriod = `${id_ce}.16`;\nexport class PrivateKeyUsagePeriod {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 0, implicit: true, optional: true })\n], PrivateKeyUsagePeriod.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime, context: 1, implicit: true, optional: true, })\n], PrivateKeyUsagePeriod.prototype, \"notAfter\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, BitString } from \"@peculiar/asn1-schema\";\nexport const id_entrust_entrustVersInfo = \"1.2.840.113533.7.65.0\";\nexport var EntrustInfoFlags;\n(function (EntrustInfoFlags) {\n    EntrustInfoFlags[EntrustInfoFlags[\"keyUpdateAllowed\"] = 1] = \"keyUpdateAllowed\";\n    EntrustInfoFlags[EntrustInfoFlags[\"newExtensions\"] = 2] = \"newExtensions\";\n    EntrustInfoFlags[EntrustInfoFlags[\"pKIXCertificate\"] = 4] = \"pKIXCertificate\";\n})(EntrustInfoFlags || (EntrustInfoFlags = {}));\nexport class EntrustInfo extends BitString {\n    toJSON() {\n        const res = [];\n        const flags = this.toNumber();\n        if (flags & EntrustInfoFlags.pKIXCertificate) {\n            res.push(\"pKIXCertificate\");\n        }\n        if (flags & EntrustInfoFlags.newExtensions) {\n            res.push(\"newExtensions\");\n        }\n        if (flags & EntrustInfoFlags.keyUpdateAllowed) {\n            res.push(\"keyUpdateAllowed\");\n        }\n        return res;\n    }\n    toString() {\n        return `[${this.toJSON().join(\", \")}]`;\n    }\n}\nexport class EntrustVersionInfo {\n    constructor(params = {}) {\n        this.entrustVers = '';\n        this.entrustInfoFlags = new EntrustInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralString })\n], EntrustVersionInfo.prototype, \"entrustVers\", void 0);\n__decorate([\n    AsnProp({ type: EntrustInfo })\n], EntrustVersionInfo.prototype, \"entrustInfoFlags\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class AlgorithmIdentifier {\n    constructor(params = {}) {\n        this.algorithm = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.ObjectIdentifier,\n    })\n], AlgorithmIdentifier.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Any,\n        optional: true,\n    })\n], AlgorithmIdentifier.prototype, \"parameters\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nexport class SubjectPublicKeyInfo {\n    constructor(params = {}) {\n        this.algorithm = new AlgorithmIdentifier();\n        this.subjectPublicKey = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], SubjectPublicKeyInfo.prototype, \"algorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], SubjectPublicKeyInfo.prototype, \"subjectPublicKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet Time = class Time {\n    constructor(time) {\n        if (time) {\n            if (typeof time === \"string\" || typeof time === \"number\") {\n                this.utcTime = new Date(time);\n            }\n            else if (time instanceof Date) {\n                this.utcTime = time;\n            }\n            else {\n                Object.assign(this, time);\n            }\n        }\n    }\n    getTime() {\n        const time = this.utcTime || this.generalTime;\n        if (!time) {\n            throw new Error(\"Cannot get time from CHOICE object\");\n        }\n        return time;\n    }\n};\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.UTCTime,\n    })\n], Time.prototype, \"utcTime\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.GeneralizedTime,\n    })\n], Time.prototype, \"generalTime\", void 0);\nTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Time);\nexport { Time };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { Time } from \"./time\";\nexport class Validity {\n    constructor(params) {\n        this.notBefore = new Time(new Date());\n        this.notAfter = new Time(new Date());\n        if (params) {\n            this.notBefore = new Time(params.notBefore);\n            this.notAfter = new Time(params.notAfter);\n        }\n    }\n}\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notBefore\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], Validity.prototype, \"notAfter\", void 0);\n","var Extensions_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nexport class Extension {\n    constructor(params = {}) {\n        this.extnID = \"\";\n        this.critical = Extension.CRITICAL;\n        this.extnValue = new OctetString();\n        Object.assign(this, params);\n    }\n}\nExtension.CRITICAL = false;\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Extension.prototype, \"extnID\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Boolean,\n        defaultValue: Extension.CRITICAL,\n    })\n], Extension.prototype, \"critical\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], Extension.prototype, \"extnValue\", void 0);\nlet Extensions = Extensions_1 = class Extensions extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Extensions_1.prototype);\n    }\n};\nExtensions = Extensions_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Extension })\n], Extensions);\nexport { Extensions };\n","export var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n    Version[Version[\"v2\"] = 1] = \"v2\";\n    Version[Version[\"v3\"] = 2] = \"v3\";\n})(Version || (Version = {}));\n;\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { SubjectPublicKeyInfo } from \"./subject_public_key_info\";\nimport { Validity } from \"./validity\";\nimport { Extensions } from \"./extension\";\nimport { Version } from \"./types\";\nexport class TBSCertificate {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.serialNumber = new ArrayBuffer(0);\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.validity = new Validity();\n        this.subject = new Name();\n        this.subjectPublicKeyInfo = new SubjectPublicKeyInfo();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        context: 0,\n        defaultValue: Version.v1,\n    })\n], TBSCertificate.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.Integer,\n        converter: AsnIntegerArrayBufferConverter,\n    })\n], TBSCertificate.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertificate.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Validity })\n], TBSCertificate.prototype, \"validity\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertificate.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], TBSCertificate.prototype, \"subjectPublicKeyInfo\", void 0);\n__decorate([\n    AsnProp({\n        type: AsnPropTypes.BitString,\n        context: 1,\n        implicit: true,\n        optional: true,\n    })\n], TBSCertificate.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 2, implicit: true, optional: true })\n], TBSCertificate.prototype, \"subjectUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, context: 3, optional: true })\n], TBSCertificate.prototype, \"extensions\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertificate } from \"./tbs_certificate\";\nexport class Certificate {\n    constructor(params = {}) {\n        this.tbsCertificate = new TBSCertificate();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertificate })\n], Certificate.prototype, \"tbsCertificate\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], Certificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], Certificate.prototype, \"signatureValue\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { Name } from \"./name\";\nimport { Time } from \"./time\";\nimport { Extension } from \"./extension\";\nexport class RevokedCertificate {\n    constructor(params = {}) {\n        this.userCertificate = new ArrayBuffer(0);\n        this.revocationDate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RevokedCertificate.prototype, \"userCertificate\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], RevokedCertificate.prototype, \"revocationDate\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, repeated: \"sequence\" })\n], RevokedCertificate.prototype, \"crlEntryExtensions\", void 0);\nexport class TBSCertList {\n    constructor(params = {}) {\n        this.signature = new AlgorithmIdentifier();\n        this.issuer = new Name();\n        this.thisUpdate = new Time();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], TBSCertList.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], TBSCertList.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], TBSCertList.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: Time })\n], TBSCertList.prototype, \"thisUpdate\", void 0);\n__decorate([\n    AsnProp({ type: Time, optional: true })\n], TBSCertList.prototype, \"nextUpdate\", void 0);\n__decorate([\n    AsnProp({ type: RevokedCertificate, repeated: \"sequence\", optional: true })\n], TBSCertList.prototype, \"revokedCertificates\", void 0);\n__decorate([\n    AsnProp({ type: Extension, optional: true, context: 0, repeated: \"sequence\" })\n], TBSCertList.prototype, \"crlExtensions\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"./algorithm_identifier\";\nimport { TBSCertList } from \"./tbs_cert_list\";\nexport class CertificateList {\n    constructor(params = {}) {\n        this.tbsCertList = new TBSCertList();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: TBSCertList })\n], CertificateList.prototype, \"tbsCertList\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificateList.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificateList.prototype, \"signature\", void 0);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const id_pkcs_1 = \"1.2.840.113549.1.1\";\nexport const id_rsaEncryption = `${id_pkcs_1}.1`;\nexport const id_RSAES_OAEP = `${id_pkcs_1}.7`;\nexport const id_pSpecified = `${id_pkcs_1}.9`;\nexport const id_RSASSA_PSS = `${id_pkcs_1}.10`;\nexport const id_md2WithRSAEncryption = `${id_pkcs_1}.2`;\nexport const id_md5WithRSAEncryption = `${id_pkcs_1}.4`;\nexport const id_sha1WithRSAEncryption = `${id_pkcs_1}.5`;\nexport const id_sha224WithRSAEncryption = `${id_pkcs_1}.14`;\nexport const id_ssha224WithRSAEncryption = id_sha224WithRSAEncryption;\nexport const id_sha256WithRSAEncryption = `${id_pkcs_1}.11`;\nexport const id_sha384WithRSAEncryption = `${id_pkcs_1}.12`;\nexport const id_sha512WithRSAEncryption = `${id_pkcs_1}.13`;\nexport const id_sha512_224WithRSAEncryption = `${id_pkcs_1}.15`;\nexport const id_sha512_256WithRSAEncryption = `${id_pkcs_1}.16`;\nexport const id_sha1 = \"1.3.14.3.2.26\";\nexport const id_sha224 = \"2.16.840.1.101.3.4.2.4\";\nexport const id_sha256 = \"2.16.840.1.101.3.4.2.1\";\nexport const id_sha384 = \"2.16.840.1.101.3.4.2.2\";\nexport const id_sha512 = \"2.16.840.1.101.3.4.2.3\";\nexport const id_sha512_224 = \"2.16.840.1.101.3.4.2.5\";\nexport const id_sha512_256 = \"2.16.840.1.101.3.4.2.6\";\nexport const id_md2 = \"1.2.840.113549.2.2\";\nexport const id_md5 = \"1.2.840.113549.2.5\";\nexport const id_mgf1 = `${id_pkcs_1}.8`;\n","import { AsnConvert, AsnOctetStringConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm, parameters: null });\n}\nexport const md2 = create(oid.id_md2);\nexport const md4 = create(oid.id_md5);\nexport const sha1 = create(oid.id_sha1);\nexport const sha224 = create(oid.id_sha224);\nexport const sha256 = create(oid.id_sha256);\nexport const sha384 = create(oid.id_sha384);\nexport const sha512 = create(oid.id_sha512);\nexport const sha512_224 = create(oid.id_sha512_224);\nexport const sha512_256 = create(oid.id_sha512_256);\nexport const mgf1SHA1 = new AlgorithmIdentifier({\n    algorithm: oid.id_mgf1,\n    parameters: AsnConvert.serialize(sha1),\n});\nexport const pSpecifiedEmpty = new AlgorithmIdentifier({\n    algorithm: oid.id_pSpecified,\n    parameters: AsnConvert.serialize(AsnOctetStringConverter.toASN(new Uint8Array([0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09]).buffer)),\n});\nexport const rsaEncryption = create(oid.id_rsaEncryption);\nexport const md2WithRSAEncryption = create(oid.id_md2WithRSAEncryption);\nexport const md5WithRSAEncryption = create(oid.id_md5WithRSAEncryption);\nexport const sha1WithRSAEncryption = create(oid.id_sha1WithRSAEncryption);\nexport const sha224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\nexport const sha384WithRSAEncryption = create(oid.id_sha384WithRSAEncryption);\nexport const sha512WithRSAEncryption = create(oid.id_sha512WithRSAEncryption);\nexport const sha512_224WithRSAEncryption = create(oid.id_sha512_224WithRSAEncryption);\nexport const sha512_256WithRSAEncryption = create(oid.id_sha512_256WithRSAEncryption);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSAES_OAEP } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1, pSpecifiedEmpty } from \"../algorithms\";\nexport class RsaEsOaepParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.pSourceAlgorithm = new AlgorithmIdentifier(pSpecifiedEmpty);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaEsOaepParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaEsOaepParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 2, defaultValue: pSpecifiedEmpty })\n], RsaEsOaepParams.prototype, \"pSourceAlgorithm\", void 0);\nexport const RSAES_OAEP = new AlgorithmIdentifier({\n    algorithm: id_RSAES_OAEP,\n    parameters: AsnConvert.serialize(new RsaEsOaepParams()),\n});\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnConvert, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { id_mgf1, id_RSASSA_PSS } from \"../object_identifiers\";\nimport { sha1, mgf1SHA1 } from \"../algorithms\";\nexport class RsaSaPssParams {\n    constructor(params = {}) {\n        this.hashAlgorithm = new AlgorithmIdentifier(sha1);\n        this.maskGenAlgorithm = new AlgorithmIdentifier({\n            algorithm: id_mgf1,\n            parameters: AsnConvert.serialize(sha1),\n        });\n        this.saltLength = 20;\n        this.trailerField = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 0, defaultValue: sha1 })\n], RsaSaPssParams.prototype, \"hashAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier, context: 1, defaultValue: mgf1SHA1 })\n], RsaSaPssParams.prototype, \"maskGenAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 2, defaultValue: 20 })\n], RsaSaPssParams.prototype, \"saltLength\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, context: 3, defaultValue: 1 })\n], RsaSaPssParams.prototype, \"trailerField\", void 0);\nexport const RSASSA_PSS = new AlgorithmIdentifier({\n    algorithm: id_RSASSA_PSS,\n    parameters: AsnConvert.serialize(new RsaSaPssParams()),\n});\n","import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nexport class DigestInfo {\n    constructor(params = {}) {\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.digest = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], DigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], DigestInfo.prototype, \"digest\", void 0);\n","var OtherPrimeInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nexport class OtherPrimeInfo {\n    constructor(params = {}) {\n        this.prime = new ArrayBuffer(0);\n        this.exponent = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"prime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"exponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], OtherPrimeInfo.prototype, \"coefficient\", void 0);\nlet OtherPrimeInfos = OtherPrimeInfos_1 = class OtherPrimeInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, OtherPrimeInfos_1.prototype);\n    }\n};\nOtherPrimeInfos = OtherPrimeInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: OtherPrimeInfo })\n], OtherPrimeInfos);\nexport { OtherPrimeInfos };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { OtherPrimeInfos } from \"./other_prime_info\";\nexport class RSAPrivateKey {\n    constructor(params = {}) {\n        this.version = 0;\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        this.privateExponent = new ArrayBuffer(0);\n        this.prime1 = new ArrayBuffer(0);\n        this.prime2 = new ArrayBuffer(0);\n        this.exponent1 = new ArrayBuffer(0);\n        this.exponent2 = new ArrayBuffer(0);\n        this.coefficient = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], RSAPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"publicExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"privateExponent\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"prime2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent1\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"exponent2\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPrivateKey.prototype, \"coefficient\", void 0);\n__decorate([\n    AsnProp({ type: OtherPrimeInfos, optional: true })\n], RSAPrivateKey.prototype, \"otherPrimeInfos\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class RSAPublicKey {\n    constructor(params = {}) {\n        this.modulus = new ArrayBuffer(0);\n        this.publicExponent = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"modulus\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], RSAPublicKey.prototype, \"publicExponent\", void 0);\n","var Lifecycle;\n(function (Lifecycle) {\n    Lifecycle[Lifecycle[\"Transient\"] = 0] = \"Transient\";\n    Lifecycle[Lifecycle[\"Singleton\"] = 1] = \"Singleton\";\n    Lifecycle[Lifecycle[\"ResolutionScoped\"] = 2] = \"ResolutionScoped\";\n    Lifecycle[Lifecycle[\"ContainerScoped\"] = 3] = \"ContainerScoped\";\n})(Lifecycle || (Lifecycle = {}));\nexport default Lifecycle;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export var INJECTION_TOKEN_METADATA_KEY = \"injectionTokens\";\nexport function getParamInfo(target) {\n    var params = Reflect.getMetadata(\"design:paramtypes\", target) || [];\n    var injectionTokens = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n    Object.keys(injectionTokens).forEach(function (key) {\n        params[+key] = injectionTokens[key];\n    });\n    return params;\n}\nexport function defineInjectionTokenMetadata(data, transform) {\n    return function (target, _propertyKey, parameterIndex) {\n        var descriptors = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n        descriptors[parameterIndex] = transform\n            ? {\n                token: data,\n                transform: transform.transformToken,\n                transformArgs: transform.args || []\n            }\n            : data;\n        Reflect.defineMetadata(INJECTION_TOKEN_METADATA_KEY, descriptors, target);\n    };\n}\n","export function isClassProvider(provider) {\n    return !!provider.useClass;\n}\n","export function isFactoryProvider(provider) {\n    return !!provider.useFactory;\n}\n","import { __read, __spread } from \"tslib\";\nvar DelayedConstructor = (function () {\n    function DelayedConstructor(wrap) {\n        this.wrap = wrap;\n        this.reflectMethods = [\n            \"get\",\n            \"getPrototypeOf\",\n            \"setPrototypeOf\",\n            \"getOwnPropertyDescriptor\",\n            \"defineProperty\",\n            \"has\",\n            \"set\",\n            \"deleteProperty\",\n            \"apply\",\n            \"construct\",\n            \"ownKeys\"\n        ];\n    }\n    DelayedConstructor.prototype.createProxy = function (createObject) {\n        var _this = this;\n        var target = {};\n        var init = false;\n        var value;\n        var delayedObject = function () {\n            if (!init) {\n                value = createObject(_this.wrap());\n                init = true;\n            }\n            return value;\n        };\n        return new Proxy(target, this.createHandler(delayedObject));\n    };\n    DelayedConstructor.prototype.createHandler = function (delayedObject) {\n        var handler = {};\n        var install = function (name) {\n            handler[name] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                args[0] = delayedObject();\n                var method = Reflect[name];\n                return method.apply(void 0, __spread(args));\n            };\n        };\n        this.reflectMethods.forEach(install);\n        return handler;\n    };\n    return DelayedConstructor;\n}());\nexport { DelayedConstructor };\nexport function delay(wrappedConstructor) {\n    if (typeof wrappedConstructor === \"undefined\") {\n        throw new Error(\"Attempt to `delay` undefined. Constructor must be wrapped in a callback\");\n    }\n    return new DelayedConstructor(wrappedConstructor);\n}\n","import { DelayedConstructor } from \"../lazy-helpers\";\nexport function isNormalToken(token) {\n    return typeof token === \"string\" || typeof token === \"symbol\";\n}\nexport function isTokenDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"multiple\" in descriptor);\n}\nexport function isTransformDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"transform\" in descriptor);\n}\nexport function isConstructorToken(token) {\n    return typeof token === \"function\" || token instanceof DelayedConstructor;\n}\n","export function isTokenProvider(provider) {\n    return !!provider.useToken;\n}\n","export function isValueProvider(provider) {\n    return provider.useValue != undefined;\n}\n","import { isClassProvider } from \"./class-provider\";\nimport { isValueProvider } from \"./value-provider\";\nimport { isTokenProvider } from \"./token-provider\";\nimport { isFactoryProvider } from \"./factory-provider\";\nexport function isProvider(provider) {\n    return (isClassProvider(provider) ||\n        isValueProvider(provider) ||\n        isTokenProvider(provider) ||\n        isFactoryProvider(provider));\n}\n","var RegistryBase = (function () {\n    function RegistryBase() {\n        this._registryMap = new Map();\n    }\n    RegistryBase.prototype.entries = function () {\n        return this._registryMap.entries();\n    };\n    RegistryBase.prototype.getAll = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key);\n    };\n    RegistryBase.prototype.get = function (key) {\n        this.ensure(key);\n        var value = this._registryMap.get(key);\n        return value[value.length - 1] || null;\n    };\n    RegistryBase.prototype.set = function (key, value) {\n        this.ensure(key);\n        this._registryMap.get(key).push(value);\n    };\n    RegistryBase.prototype.setAll = function (key, value) {\n        this._registryMap.set(key, value);\n    };\n    RegistryBase.prototype.has = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key).length > 0;\n    };\n    RegistryBase.prototype.clear = function () {\n        this._registryMap.clear();\n    };\n    RegistryBase.prototype.ensure = function (key) {\n        if (!this._registryMap.has(key)) {\n            this._registryMap.set(key, []);\n        }\n    };\n    return RegistryBase;\n}());\nexport default RegistryBase;\n","import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar Registry = (function (_super) {\n    __extends(Registry, _super);\n    function Registry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Registry;\n}(RegistryBase));\nexport default Registry;\n","var ResolutionContext = (function () {\n    function ResolutionContext() {\n        this.scopedResolutions = new Map();\n    }\n    return ResolutionContext;\n}());\nexport default ResolutionContext;\n","import { __read, __spread } from \"tslib\";\nfunction formatDependency(params, idx) {\n    if (params === null) {\n        return \"at position #\" + idx;\n    }\n    var argName = params.split(\",\")[idx].trim();\n    return \"\\\"\" + argName + \"\\\" at position #\" + idx;\n}\nfunction composeErrorMessage(msg, e, indent) {\n    if (indent === void 0) { indent = \"    \"; }\n    return __spread([msg], e.message.split(\"\\n\").map(function (l) { return indent + l; })).join(\"\\n\");\n}\nexport function formatErrorCtor(ctor, paramIdx, error) {\n    var _a = __read(ctor.toString().match(/constructor\\(([\\w, ]+)\\)/) || [], 2), _b = _a[1], params = _b === void 0 ? null : _b;\n    var dep = formatDependency(params, paramIdx);\n    return composeErrorMessage(\"Cannot inject the dependency \" + dep + \" of \\\"\" + ctor.name + \"\\\" constructor. Reason:\", error);\n}\n","import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar PreResolutionInterceptors = (function (_super) {\n    __extends(PreResolutionInterceptors, _super);\n    function PreResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PreResolutionInterceptors;\n}(RegistryBase));\nexport { PreResolutionInterceptors };\nvar PostResolutionInterceptors = (function (_super) {\n    __extends(PostResolutionInterceptors, _super);\n    function PostResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PostResolutionInterceptors;\n}(RegistryBase));\nexport { PostResolutionInterceptors };\nvar Interceptors = (function () {\n    function Interceptors() {\n        this.preResolution = new PreResolutionInterceptors();\n        this.postResolution = new PostResolutionInterceptors();\n    }\n    return Interceptors;\n}());\nexport default Interceptors;\n","import { __read, __spread, __values } from \"tslib\";\nimport { isClassProvider, isFactoryProvider, isNormalToken, isTokenProvider, isValueProvider } from \"./providers\";\nimport { isProvider } from \"./providers/provider\";\nimport { isConstructorToken, isTokenDescriptor, isTransformDescriptor } from \"./providers/injection-token\";\nimport Registry from \"./registry\";\nimport Lifecycle from \"./types/lifecycle\";\nimport ResolutionContext from \"./resolution-context\";\nimport { formatErrorCtor } from \"./error-helpers\";\nimport { DelayedConstructor } from \"./lazy-helpers\";\nimport Interceptors from \"./interceptors\";\nexport var typeInfo = new Map();\nvar InternalDependencyContainer = (function () {\n    function InternalDependencyContainer(parent) {\n        this.parent = parent;\n        this._registry = new Registry();\n        this.interceptors = new Interceptors();\n    }\n    InternalDependencyContainer.prototype.register = function (token, providerOrConstructor, options) {\n        if (options === void 0) { options = { lifecycle: Lifecycle.Transient }; }\n        var provider;\n        if (!isProvider(providerOrConstructor)) {\n            provider = { useClass: providerOrConstructor };\n        }\n        else {\n            provider = providerOrConstructor;\n        }\n        if (isTokenProvider(provider)) {\n            var path = [token];\n            var tokenProvider = provider;\n            while (tokenProvider != null) {\n                var currentToken = tokenProvider.useToken;\n                if (path.includes(currentToken)) {\n                    throw new Error(\"Token registration cycle detected! \" + __spread(path, [currentToken]).join(\" -> \"));\n                }\n                path.push(currentToken);\n                var registration = this._registry.get(currentToken);\n                if (registration && isTokenProvider(registration.provider)) {\n                    tokenProvider = registration.provider;\n                }\n                else {\n                    tokenProvider = null;\n                }\n            }\n        }\n        if (options.lifecycle === Lifecycle.Singleton ||\n            options.lifecycle == Lifecycle.ContainerScoped ||\n            options.lifecycle == Lifecycle.ResolutionScoped) {\n            if (isValueProvider(provider) || isFactoryProvider(provider)) {\n                throw new Error(\"Cannot use lifecycle \\\"\" + Lifecycle[options.lifecycle] + \"\\\" with ValueProviders or FactoryProviders\");\n            }\n        }\n        this._registry.set(token, { provider: provider, options: options });\n        return this;\n    };\n    InternalDependencyContainer.prototype.registerType = function (from, to) {\n        if (isNormalToken(to)) {\n            return this.register(from, {\n                useToken: to\n            });\n        }\n        return this.register(from, {\n            useClass: to\n        });\n    };\n    InternalDependencyContainer.prototype.registerInstance = function (token, instance) {\n        return this.register(token, {\n            useValue: instance\n        });\n    };\n    InternalDependencyContainer.prototype.registerSingleton = function (from, to) {\n        if (isNormalToken(from)) {\n            if (isNormalToken(to)) {\n                return this.register(from, {\n                    useToken: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            else if (to) {\n                return this.register(from, {\n                    useClass: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            throw new Error('Cannot register a type name as a singleton without a \"to\" token');\n        }\n        var useClass = from;\n        if (to && !isNormalToken(to)) {\n            useClass = to;\n        }\n        return this.register(from, {\n            useClass: useClass\n        }, { lifecycle: Lifecycle.Singleton });\n    };\n    InternalDependencyContainer.prototype.resolve = function (token, context) {\n        if (context === void 0) { context = new ResolutionContext(); }\n        var registration = this.getRegistration(token);\n        if (!registration && isNormalToken(token)) {\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"Single\");\n        if (registration) {\n            var result = this.resolveRegistration(registration, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        if (isConstructorToken(token)) {\n            var result = this.construct(token, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        throw new Error(\"Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.\");\n    };\n    InternalDependencyContainer.prototype.executePreResolutionInterceptor = function (token, resolutionType) {\n        var e_1, _a;\n        if (this.interceptors.preResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.preResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, resolutionType);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.interceptors.preResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.executePostResolutionInterceptor = function (token, result, resolutionType) {\n        var e_2, _a;\n        if (this.interceptors.postResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.postResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, result, resolutionType);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this.interceptors.postResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.resolveRegistration = function (registration, context) {\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped &&\n            context.scopedResolutions.has(registration)) {\n            return context.scopedResolutions.get(registration);\n        }\n        var isSingleton = registration.options.lifecycle === Lifecycle.Singleton;\n        var isContainerScoped = registration.options.lifecycle === Lifecycle.ContainerScoped;\n        var returnInstance = isSingleton || isContainerScoped;\n        var resolved;\n        if (isValueProvider(registration.provider)) {\n            resolved = registration.provider.useValue;\n        }\n        else if (isTokenProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.resolve(registration.provider.useToken, context))\n                : this.resolve(registration.provider.useToken, context);\n        }\n        else if (isClassProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.construct(registration.provider.useClass, context))\n                : this.construct(registration.provider.useClass, context);\n        }\n        else if (isFactoryProvider(registration.provider)) {\n            resolved = registration.provider.useFactory(this);\n        }\n        else {\n            resolved = this.construct(registration.provider, context);\n        }\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped) {\n            context.scopedResolutions.set(registration, resolved);\n        }\n        return resolved;\n    };\n    InternalDependencyContainer.prototype.resolveAll = function (token, context) {\n        var _this = this;\n        if (context === void 0) { context = new ResolutionContext(); }\n        var registrations = this.getAllRegistrations(token);\n        if (!registrations && isNormalToken(token)) {\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"All\");\n        if (registrations) {\n            var result_1 = registrations.map(function (item) {\n                return _this.resolveRegistration(item, context);\n            });\n            this.executePostResolutionInterceptor(token, result_1, \"All\");\n            return result_1;\n        }\n        var result = [this.construct(token, context)];\n        this.executePostResolutionInterceptor(token, result, \"All\");\n        return result;\n    };\n    InternalDependencyContainer.prototype.isRegistered = function (token, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return (this._registry.has(token) ||\n            (recursive &&\n                (this.parent || false) &&\n                this.parent.isRegistered(token, true)));\n    };\n    InternalDependencyContainer.prototype.reset = function () {\n        this._registry.clear();\n        this.interceptors.preResolution.clear();\n        this.interceptors.postResolution.clear();\n    };\n    InternalDependencyContainer.prototype.clearInstances = function () {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                this._registry.setAll(token, registrations\n                    .filter(function (registration) { return !isValueProvider(registration.provider); })\n                    .map(function (registration) {\n                    registration.instance = undefined;\n                    return registration;\n                }));\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    InternalDependencyContainer.prototype.createChildContainer = function () {\n        var e_4, _a;\n        var childContainer = new InternalDependencyContainer(this);\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                if (registrations.some(function (_a) {\n                    var options = _a.options;\n                    return options.lifecycle === Lifecycle.ContainerScoped;\n                })) {\n                    childContainer._registry.setAll(token, registrations.map(function (registration) {\n                        if (registration.options.lifecycle === Lifecycle.ContainerScoped) {\n                            return {\n                                provider: registration.provider,\n                                options: registration.options\n                            };\n                        }\n                        return registration;\n                    }));\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return childContainer;\n    };\n    InternalDependencyContainer.prototype.beforeResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.preResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.afterResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.postResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.getRegistration = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.get(token);\n        }\n        if (this.parent) {\n            return this.parent.getRegistration(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.getAllRegistrations = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.getAll(token);\n        }\n        if (this.parent) {\n            return this.parent.getAllRegistrations(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.construct = function (ctor, context) {\n        var _this = this;\n        if (ctor instanceof DelayedConstructor) {\n            return ctor.createProxy(function (target) {\n                return _this.resolve(target, context);\n            });\n        }\n        var paramInfo = typeInfo.get(ctor);\n        if (!paramInfo || paramInfo.length === 0) {\n            if (ctor.length === 0) {\n                return new ctor();\n            }\n            else {\n                throw new Error(\"TypeInfo not known for \\\"\" + ctor.name + \"\\\"\");\n            }\n        }\n        var params = paramInfo.map(this.resolveParams(context, ctor));\n        return new (ctor.bind.apply(ctor, __spread([void 0], params)))();\n    };\n    InternalDependencyContainer.prototype.resolveParams = function (context, ctor) {\n        var _this = this;\n        return function (param, idx) {\n            var _a, _b, _c;\n            try {\n                if (isTokenDescriptor(param)) {\n                    if (isTransformDescriptor(param)) {\n                        return param.multiple\n                            ? (_a = _this.resolve(param.transform)).transform.apply(_a, __spread([_this.resolveAll(param.token)], param.transformArgs)) : (_b = _this.resolve(param.transform)).transform.apply(_b, __spread([_this.resolve(param.token, context)], param.transformArgs));\n                    }\n                    else {\n                        return param.multiple\n                            ? _this.resolveAll(param.token)\n                            : _this.resolve(param.token, context);\n                    }\n                }\n                else if (isTransformDescriptor(param)) {\n                    return (_c = _this.resolve(param.transform, context)).transform.apply(_c, __spread([_this.resolve(param.token, context)], param.transformArgs));\n                }\n                return _this.resolve(param, context);\n            }\n            catch (e) {\n                throw new Error(formatErrorCtor(ctor, idx, e));\n            }\n        };\n    };\n    return InternalDependencyContainer;\n}());\nexport var instance = new InternalDependencyContainer();\nexport default instance;\n","import { getParamInfo } from \"../reflection-helpers\";\nimport { typeInfo } from \"../dependency-container\";\nfunction injectable() {\n    return function (target) {\n        typeInfo.set(target, getParamInfo(target));\n    };\n}\nexport default injectable;\n","if (typeof Reflect === \"undefined\" || !Reflect.getMetadata) {\n    throw new Error(\"tsyringe requires a reflect polyfill. Please add 'import \\\"reflect-metadata\\\"' to the top of your entry point.\");\n}\nexport { Lifecycle } from \"./types\";\nexport * from \"./decorators\";\nexport * from \"./factories\";\nexport * from \"./providers\";\nexport { delay } from \"./lazy-helpers\";\nexport { instance as container } from \"./dependency-container\";\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class Attribute {\n    constructor(params = {}) {\n        this.attrType = \"\";\n        this.attrValues = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Attribute.prototype, \"attrType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], Attribute.prototype, \"attrValues\", void 0);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralName, Attribute } from \"@peculiar/asn1-x509\";\nexport class ACClearAttrs {\n    constructor(params = {}) {\n        this.acIssuer = new GeneralName();\n        this.acSerial = 0;\n        this.attrs = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], ACClearAttrs.prototype, \"acIssuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ACClearAttrs.prototype, \"acSerial\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"sequence\" })\n], ACClearAttrs.prototype, \"attrs\", void 0);\n","var AttrSpec_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnPropTypes, AsnArray } from \"@peculiar/asn1-schema\";\nlet AttrSpec = AttrSpec_1 = class AttrSpec extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AttrSpec_1.prototype);\n    }\n};\nAttrSpec = AttrSpec_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: AsnPropTypes.ObjectIdentifier })\n], AttrSpec);\nexport { AttrSpec };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AttrSpec } from \"./attr_spec\";\nexport class AAControls {\n    constructor(params = {}) {\n        this.permitUnSpecified = true;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, optional: true })\n], AAControls.prototype, \"pathLenConstraint\", void 0);\n__decorate([\n    AsnProp({ type: AttrSpec, implicit: true, context: 0, optional: true })\n], AAControls.prototype, \"permittedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: AttrSpec, implicit: true, context: 1, optional: true })\n], AAControls.prototype, \"excludedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Boolean, defaultValue: true })\n], AAControls.prototype, \"permitUnSpecified\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nexport class IssuerSerial {\n    constructor(params = {}) {\n        this.issuer = new GeneralNames();\n        this.serial = new ArrayBuffer(0);\n        this.issuerUID = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames })\n], IssuerSerial.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], IssuerSerial.prototype, \"serial\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], IssuerSerial.prototype, \"issuerUID\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport var DigestedObjectType;\n(function (DigestedObjectType) {\n    DigestedObjectType[DigestedObjectType[\"publicKey\"] = 0] = \"publicKey\";\n    DigestedObjectType[DigestedObjectType[\"publicKeyCert\"] = 1] = \"publicKeyCert\";\n    DigestedObjectType[DigestedObjectType[\"otherObjectTypes\"] = 2] = \"otherObjectTypes\";\n})(DigestedObjectType || (DigestedObjectType = {}));\nexport class ObjectDigestInfo {\n    constructor(params = {}) {\n        this.digestedObjectType = DigestedObjectType.publicKey;\n        this.digestAlgorithm = new AlgorithmIdentifier();\n        this.objectDigest = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Enumerated })\n], ObjectDigestInfo.prototype, \"digestedObjectType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, optional: true })\n], ObjectDigestInfo.prototype, \"otherObjectTypeID\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], ObjectDigestInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], ObjectDigestInfo.prototype, \"objectDigest\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class V2Form {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, optional: true })\n], V2Form.prototype, \"issuerName\", void 0);\n__decorate([\n    AsnProp({ type: IssuerSerial, context: 0, implicit: true, optional: true })\n], V2Form.prototype, \"baseCertificateID\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, context: 1, implicit: true, optional: true })\n], V2Form.prototype, \"objectDigestInfo\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nimport { V2Form } from \"./v2_form\";\nlet AttCertIssuer = class AttCertIssuer {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, repeated: \"sequence\" })\n], AttCertIssuer.prototype, \"v1Form\", void 0);\n__decorate([\n    AsnProp({ type: V2Form, context: 0, implicit: true })\n], AttCertIssuer.prototype, \"v2Form\", void 0);\nAttCertIssuer = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], AttCertIssuer);\nexport { AttCertIssuer };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class AttCertValidityPeriod {\n    constructor(params = {}) {\n        this.notBeforeTime = new Date();\n        this.notAfterTime = new Date();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], AttCertValidityPeriod.prototype, \"notBeforeTime\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], AttCertValidityPeriod.prototype, \"notAfterTime\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class Holder {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: IssuerSerial, implicit: true, context: 0, optional: true })\n], Holder.prototype, \"baseCertificateID\", void 0);\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 1, optional: true })\n], Holder.prototype, \"entityName\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, implicit: true, context: 2, optional: true })\n], Holder.prototype, \"objectDigestInfo\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier, Attribute, Extensions } from \"@peculiar/asn1-x509\";\nimport { Holder } from \"./holder\";\nimport { AttCertIssuer } from \"./attr_cert_issuer\";\nimport { AttCertValidityPeriod } from \"./attr_cert_validity_period\";\nexport var AttCertVersion;\n(function (AttCertVersion) {\n    AttCertVersion[AttCertVersion[\"v2\"] = 1] = \"v2\";\n})(AttCertVersion || (AttCertVersion = {}));\nexport class AttributeCertificateInfo {\n    constructor(params = {}) {\n        this.version = AttCertVersion.v2;\n        this.holder = new Holder();\n        this.issuer = new AttCertIssuer();\n        this.signature = new AlgorithmIdentifier();\n        this.serialNumber = new ArrayBuffer(0);\n        this.attrCertValidityPeriod = new AttCertValidityPeriod();\n        this.attributes = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], AttributeCertificateInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: Holder })\n], AttributeCertificateInfo.prototype, \"holder\", void 0);\n__decorate([\n    AsnProp({ type: AttCertIssuer })\n], AttributeCertificateInfo.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], AttributeCertificateInfo.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], AttributeCertificateInfo.prototype, \"serialNumber\", void 0);\n__decorate([\n    AsnProp({ type: AttCertValidityPeriod })\n], AttributeCertificateInfo.prototype, \"attrCertValidityPeriod\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"sequence\" })\n], AttributeCertificateInfo.prototype, \"attributes\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, optional: true })\n], AttributeCertificateInfo.prototype, \"issuerUniqueID\", void 0);\n__decorate([\n    AsnProp({ type: Extensions, optional: true })\n], AttributeCertificateInfo.prototype, \"extensions\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AttributeCertificateInfo } from \"./attribute_certificate_info\";\nexport class AttributeCertificate {\n    constructor(params = {}) {\n        this.acinfo = new AttributeCertificateInfo();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signatureValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AttributeCertificateInfo })\n], AttributeCertificate.prototype, \"acinfo\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], AttributeCertificate.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], AttributeCertificate.prototype, \"signatureValue\", void 0);\n","import { BitString } from \"@peculiar/asn1-schema\";\nexport var ClassListFlags;\n(function (ClassListFlags) {\n    ClassListFlags[ClassListFlags[\"unmarked\"] = 1] = \"unmarked\";\n    ClassListFlags[ClassListFlags[\"unclassified\"] = 2] = \"unclassified\";\n    ClassListFlags[ClassListFlags[\"restricted\"] = 4] = \"restricted\";\n    ClassListFlags[ClassListFlags[\"confidential\"] = 8] = \"confidential\";\n    ClassListFlags[ClassListFlags[\"secret\"] = 16] = \"secret\";\n    ClassListFlags[ClassListFlags[\"topSecret\"] = 32] = \"topSecret\";\n})(ClassListFlags || (ClassListFlags = {}));\nexport class ClassList extends BitString {\n}\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class SecurityCategory {\n    constructor(params = {}) {\n        this.type = \"\";\n        this.value = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier, implicit: true, context: 0 })\n], SecurityCategory.prototype, \"type\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, implicit: true, context: 1 })\n], SecurityCategory.prototype, \"value\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { ClassList, ClassListFlags } from \"./class_list\";\nimport { SecurityCategory } from \"./security_category\";\nexport class Clearance {\n    constructor(params = {}) {\n        this.policyId = \"\";\n        this.classList = new ClassList(ClassListFlags.unclassified);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], Clearance.prototype, \"policyId\", void 0);\n__decorate([\n    AsnProp({ type: ClassList, defaultValue: new ClassList(ClassListFlags.unclassified) })\n], Clearance.prototype, \"classList\", void 0);\n__decorate([\n    AsnProp({ type: SecurityCategory, repeated: \"set\" })\n], Clearance.prototype, \"securityCategories\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { GeneralNames } from \"@peculiar/asn1-x509\";\nexport class IetfAttrSyntaxValueChoices {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: OctetString })\n], IetfAttrSyntaxValueChoices.prototype, \"cotets\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], IetfAttrSyntaxValueChoices.prototype, \"oid\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Utf8String })\n], IetfAttrSyntaxValueChoices.prototype, \"string\", void 0);\nexport class IetfAttrSyntax {\n    constructor(params = {}) {\n        this.values = [];\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 0, optional: true })\n], IetfAttrSyntax.prototype, \"policyAuthority\", void 0);\n__decorate([\n    AsnProp({ type: IetfAttrSyntaxValueChoices, repeated: \"sequence\" })\n], IetfAttrSyntax.prototype, \"values\", void 0);\n","var Targets_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nimport { IssuerSerial } from \"./issuer_serial\";\nimport { ObjectDigestInfo } from \"./object_digest_info\";\nexport class TargetCert {\n    constructor(params = {}) {\n        this.targetCertificate = new IssuerSerial();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: IssuerSerial })\n], TargetCert.prototype, \"targetCertificate\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, optional: true })\n], TargetCert.prototype, \"targetName\", void 0);\n__decorate([\n    AsnProp({ type: ObjectDigestInfo, optional: true })\n], TargetCert.prototype, \"certDigestInfo\", void 0);\nlet Target = class Target {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: GeneralName, context: 0, implicit: true })\n], Target.prototype, \"targetName\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, context: 1, implicit: true })\n], Target.prototype, \"targetGroup\", void 0);\n__decorate([\n    AsnProp({ type: TargetCert, context: 2, implicit: true })\n], Target.prototype, \"targetCert\", void 0);\nTarget = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Target);\nexport { Target };\nlet Targets = Targets_1 = class Targets extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Targets_1.prototype);\n    }\n};\nTargets = Targets_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Target })\n], Targets);\nexport { Targets };\n","var ProxyInfo_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Targets } from \"./target\";\nlet ProxyInfo = ProxyInfo_1 = class ProxyInfo extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ProxyInfo_1.prototype);\n    }\n};\nProxyInfo = ProxyInfo_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Targets })\n], ProxyInfo);\nexport { ProxyInfo };\n","import { __decorate } from \"tslib\";\nimport { AsnProp } from \"@peculiar/asn1-schema\";\nimport { GeneralNames, GeneralName } from \"@peculiar/asn1-x509\";\nexport class RoleSyntax {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralNames, implicit: true, context: 0, optional: true })\n], RoleSyntax.prototype, \"roleAuthority\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName, implicit: true, context: 1 })\n], RoleSyntax.prototype, \"roleName\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nimport { GeneralName } from \"@peculiar/asn1-x509\";\nexport class SvceAuthInfo {\n    constructor(params = {}) {\n        this.service = new GeneralName();\n        this.ident = new GeneralName();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: GeneralName })\n], SvceAuthInfo.prototype, \"service\", void 0);\n__decorate([\n    AsnProp({ type: GeneralName })\n], SvceAuthInfo.prototype, \"ident\", void 0);\n__decorate([\n    AsnProp({ type: OctetString, optional: true })\n], SvceAuthInfo.prototype, \"authInfo\", void 0);\n","var CertificateSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { Certificate } from \"@peculiar/asn1-x509\";\nimport { AttributeCertificate } from '@peculiar/asn1-x509-attr';\nexport class OtherCertificateFormat {\n    constructor(params = {}) {\n        this.otherCertFormat = \"\";\n        this.otherCert = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherCertificateFormat.prototype, \"otherCertFormat\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherCertificateFormat.prototype, \"otherCert\", void 0);\nlet CertificateChoices = class CertificateChoices {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: Certificate })\n], CertificateChoices.prototype, \"certificate\", void 0);\n__decorate([\n    AsnProp({ type: AttributeCertificate, context: 2, implicit: true })\n], CertificateChoices.prototype, \"v2AttrCert\", void 0);\n__decorate([\n    AsnProp({ type: OtherCertificateFormat, context: 3, implicit: true })\n], CertificateChoices.prototype, \"other\", void 0);\nCertificateChoices = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CertificateChoices);\nexport { CertificateChoices };\nlet CertificateSet = CertificateSet_1 = class CertificateSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, CertificateSet_1.prototype);\n    }\n};\nCertificateSet = CertificateSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: CertificateChoices })\n], CertificateSet);\nexport { CertificateSet };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class ContentInfo {\n    constructor(params = {}) {\n        this.contentType = \"\";\n        this.content = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ContentInfo.prototype, \"contentType\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], ContentInfo.prototype, \"content\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nlet EncapsulatedContent = class EncapsulatedContent {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OctetString })\n], EncapsulatedContent.prototype, \"single\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], EncapsulatedContent.prototype, \"any\", void 0);\nEncapsulatedContent = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EncapsulatedContent);\nexport { EncapsulatedContent };\nexport class EncapsulatedContentInfo {\n    constructor(params = {}) {\n        this.eContentType = \"\";\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], EncapsulatedContentInfo.prototype, \"eContentType\", void 0);\n__decorate([\n    AsnProp({ type: EncapsulatedContent, context: 0, optional: true })\n], EncapsulatedContentInfo.prototype, \"eContent\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nimport { Name } from \"@peculiar/asn1-x509\";\nexport class IssuerAndSerialNumber {\n    constructor(params = {}) {\n        this.issuer = new Name;\n        this.serialNumber = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: Name })\n], IssuerAndSerialNumber.prototype, \"issuer\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], IssuerAndSerialNumber.prototype, \"serialNumber\", void 0);\n","var RevocationInfoChoices_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnType, AsnTypeTypes, AsnArray } from \"@peculiar/asn1-schema\";\nimport { id_pkix } from \"@peculiar/asn1-x509\";\nexport const id_ri = `${id_pkix}.16`;\nexport const id_ri_ocsp_response = `${id_ri}.2`;\nexport const id_ri_scvp = `${id_ri}.4`;\nexport class OtherRevocationInfoFormat {\n    constructor(params = {}) {\n        this.otherRevInfoFormat = \"\";\n        this.otherRevInfo = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], OtherRevocationInfoFormat.prototype, \"otherRevInfoFormat\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any })\n], OtherRevocationInfoFormat.prototype, \"otherRevInfo\", void 0);\nlet RevocationInfoChoice = class RevocationInfoChoice {\n    constructor(params = {}) {\n        this.other = new OtherRevocationInfoFormat();\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: OtherRevocationInfoFormat, context: 1, implicit: true })\n], RevocationInfoChoice.prototype, \"other\", void 0);\nRevocationInfoChoice = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], RevocationInfoChoice);\nexport { RevocationInfoChoice };\nlet RevocationInfoChoices = RevocationInfoChoices_1 = class RevocationInfoChoices extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, RevocationInfoChoices_1.prototype);\n    }\n};\nRevocationInfoChoices = RevocationInfoChoices_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: RevocationInfoChoice })\n], RevocationInfoChoices);\nexport { RevocationInfoChoices };\n","import { __decorate } from \"tslib\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport { AsnTypeTypes, AsnType } from \"@peculiar/asn1-schema\";\nexport var CMSVersion;\n(function (CMSVersion) {\n    CMSVersion[CMSVersion[\"v0\"] = 0] = \"v0\";\n    CMSVersion[CMSVersion[\"v1\"] = 1] = \"v1\";\n    CMSVersion[CMSVersion[\"v2\"] = 2] = \"v2\";\n    CMSVersion[CMSVersion[\"v3\"] = 3] = \"v3\";\n    CMSVersion[CMSVersion[\"v4\"] = 4] = \"v4\";\n    CMSVersion[CMSVersion[\"v5\"] = 5] = \"v5\";\n})(CMSVersion || (CMSVersion = {}));\n;\nlet DigestAlgorithmIdentifier = class DigestAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nDigestAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], DigestAlgorithmIdentifier);\nexport { DigestAlgorithmIdentifier };\nlet SignatureAlgorithmIdentifier = class SignatureAlgorithmIdentifier extends AlgorithmIdentifier {\n};\nSignatureAlgorithmIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SignatureAlgorithmIdentifier);\nexport { SignatureAlgorithmIdentifier };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { IssuerAndSerialNumber } from \"./issuer_and_serial_number\";\nimport { SubjectKeyIdentifier } from \"@peculiar/asn1-x509\";\nlet SignerIdentifier = class SignerIdentifier {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: SubjectKeyIdentifier, context: 0, implicit: true })\n], SignerIdentifier.prototype, \"subjectKeyIdentifier\", void 0);\n__decorate([\n    AsnProp({ type: IssuerAndSerialNumber })\n], SignerIdentifier.prototype, \"issuerAndSerialNumber\", void 0);\nSignerIdentifier = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SignerIdentifier);\nexport { SignerIdentifier };\n","var SignerInfos_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { SignerIdentifier } from \"./signer_identifier\";\nimport { CMSVersion, SignatureAlgorithmIdentifier, DigestAlgorithmIdentifier } from \"./types\";\nimport { Attribute } from \"./attribute\";\nexport class SignerInfo {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.sid = new SignerIdentifier();\n        this.digestAlgorithm = new DigestAlgorithmIdentifier();\n        this.signatureAlgorithm = new SignatureAlgorithmIdentifier();\n        this.signature = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SignerInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: SignerIdentifier })\n], SignerInfo.prototype, \"sid\", void 0);\n__decorate([\n    AsnProp({ type: DigestAlgorithmIdentifier })\n], SignerInfo.prototype, \"digestAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"set\", context: 0, implicit: true, optional: true })\n], SignerInfo.prototype, \"signedAttrs\", void 0);\n__decorate([\n    AsnProp({ type: SignatureAlgorithmIdentifier })\n], SignerInfo.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], SignerInfo.prototype, \"signature\", void 0);\n__decorate([\n    AsnProp({ type: Attribute, repeated: \"set\", context: 1, implicit: true, optional: true })\n], SignerInfo.prototype, \"unsignedAttrs\", void 0);\nlet SignerInfos = SignerInfos_1 = class SignerInfos extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SignerInfos_1.prototype);\n    }\n};\nSignerInfos = SignerInfos_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: SignerInfo })\n], SignerInfos);\nexport { SignerInfos };\n","var DigestAlgorithmIdentifiers_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { CertificateSet } from \"./certificate_choices\";\nimport { CMSVersion, DigestAlgorithmIdentifier } from \"./types\";\nimport { EncapsulatedContentInfo } from \"./encapsulated_content_info\";\nimport { RevocationInfoChoice } from \"./revocation_info_choice\";\nimport { SignerInfos } from \"./signer_info\";\nlet DigestAlgorithmIdentifiers = DigestAlgorithmIdentifiers_1 = class DigestAlgorithmIdentifiers extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, DigestAlgorithmIdentifiers_1.prototype);\n    }\n};\nDigestAlgorithmIdentifiers = DigestAlgorithmIdentifiers_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: DigestAlgorithmIdentifier })\n], DigestAlgorithmIdentifiers);\nexport { DigestAlgorithmIdentifiers };\nexport class SignedData {\n    constructor(params = {}) {\n        this.version = CMSVersion.v0;\n        this.digestAlgorithms = new DigestAlgorithmIdentifiers();\n        this.encapContentInfo = new EncapsulatedContentInfo();\n        this.signerInfos = new SignerInfos();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SignedData.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: DigestAlgorithmIdentifiers })\n], SignedData.prototype, \"digestAlgorithms\", void 0);\n__decorate([\n    AsnProp({ type: EncapsulatedContentInfo })\n], SignedData.prototype, \"encapContentInfo\", void 0);\n__decorate([\n    AsnProp({ type: CertificateSet, context: 0, implicit: true, optional: true })\n], SignedData.prototype, \"certificates\", void 0);\n__decorate([\n    AsnProp({ type: RevocationInfoChoice, context: 1, implicit: true, optional: true })\n], SignedData.prototype, \"crls\", void 0);\n__decorate([\n    AsnProp({ type: SignerInfos })\n], SignedData.prototype, \"signerInfos\", void 0);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","var PKCS12AttrSet_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nexport class PKCS12Attribute {\n    constructor(params = {}) {\n        this.attrId = \"\";\n        this.attrValues = [];\n        Object.assign(params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], PKCS12Attribute.prototype, \"attrId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, repeated: \"set\" })\n], PKCS12Attribute.prototype, \"attrValues\", void 0);\nlet PKCS12AttrSet = PKCS12AttrSet_1 = class PKCS12AttrSet extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, PKCS12AttrSet_1.prototype);\n    }\n};\nPKCS12AttrSet = PKCS12AttrSet_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: PKCS12Attribute })\n], PKCS12AttrSet);\nexport { PKCS12AttrSet };\n","var AuthenticatedSafe_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { ContentInfo } from \"@peculiar/asn1-cms\";\nlet AuthenticatedSafe = AuthenticatedSafe_1 = class AuthenticatedSafe extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, AuthenticatedSafe_1.prototype);\n    }\n};\nAuthenticatedSafe = AuthenticatedSafe_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: ContentInfo })\n], AuthenticatedSafe);\nexport { AuthenticatedSafe };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_pkcs_9 } from \"./types\";\nexport class CertBag {\n    constructor(params = {}) {\n        this.certId = \"\";\n        this.certValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], CertBag.prototype, \"certId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], CertBag.prototype, \"certValue\", void 0);\nexport const id_certTypes = `${id_pkcs_9}.22`;\nexport const id_x509Certificate = `${id_certTypes}.1`;\nexport const id_sdsiCertificate = `${id_certTypes}.2`;\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { id_pkcs_9 } from \"./types\";\nexport class CRLBag {\n    constructor(params = {}) {\n        this.crlId = \"\";\n        this.crltValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], CRLBag.prototype, \"crlId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], CRLBag.prototype, \"crltValue\", void 0);\nexport const id_crlTypes = `${id_pkcs_9}.23`;\nexport const id_x509CRL = `${id_crlTypes}.1`;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __decorate } from \"tslib\";\nimport { AsnProp, OctetString } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport class EncryptedData extends OctetString {\n}\nexport class EncryptedPrivateKeyInfo {\n    constructor(params = {}) {\n        this.encryptionAlgorithm = new AlgorithmIdentifier();\n        this.encryptedData = new EncryptedData();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], EncryptedPrivateKeyInfo.prototype, \"encryptionAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: EncryptedData })\n], EncryptedPrivateKeyInfo.prototype, \"encryptedData\", void 0);\n","var Attributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnArray, AsnType, AsnTypeTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { AlgorithmIdentifier, Attribute } from \"@peculiar/asn1-x509\";\nexport var Version;\n(function (Version) {\n    Version[Version[\"v1\"] = 0] = \"v1\";\n})(Version || (Version = {}));\nexport class PrivateKey extends OctetString {\n}\nlet Attributes = Attributes_1 = class Attributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Attributes_1.prototype);\n    }\n};\nAttributes = Attributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], Attributes);\nexport { Attributes };\nexport class PrivateKeyInfo {\n    constructor(params = {}) {\n        this.version = Version.v1;\n        this.privateKeyAlgorithm = new AlgorithmIdentifier();\n        this.privateKey = new PrivateKey();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PrivateKeyInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], PrivateKeyInfo.prototype, \"privateKeyAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: PrivateKey })\n], PrivateKeyInfo.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: Attributes, implicit: true, context: 0, optional: true })\n], PrivateKeyInfo.prototype, \"attributes\", void 0);\n","import { __decorate } from \"tslib\";\nimport { PrivateKeyInfo } from \"@peculiar/asn1-pkcs8\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet KeyBag = class KeyBag extends PrivateKeyInfo {\n};\nKeyBag = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], KeyBag);\nexport { KeyBag };\n","import { __decorate } from \"tslib\";\nimport { EncryptedPrivateKeyInfo } from \"@peculiar/asn1-pkcs8\";\nimport { AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nlet PKCS8ShroudedKeyBag = class PKCS8ShroudedKeyBag extends EncryptedPrivateKeyInfo {\n};\nPKCS8ShroudedKeyBag = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], PKCS8ShroudedKeyBag);\nexport { PKCS8ShroudedKeyBag };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nexport class SecretBag {\n    constructor(params = {}) {\n        this.secretTypeId = \"\";\n        this.secretValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], SecretBag.prototype, \"secretTypeId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], SecretBag.prototype, \"secretValue\", void 0);\n","import { __decorate } from \"tslib\";\nimport { DigestInfo } from \"@peculiar/asn1-rsa\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nexport class MacData {\n    constructor(params = {}) {\n        this.mac = new DigestInfo();\n        this.macSalt = new OctetString();\n        this.iterations = 1;\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: DigestInfo })\n], MacData.prototype, \"mac\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], MacData.prototype, \"macSalt\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, defaultValue: 1 })\n], MacData.prototype, \"iterations\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { ContentInfo } from \"@peculiar/asn1-cms\";\nimport { MacData } from \"./mac_data\";\nexport class PFX {\n    constructor(params = {}) {\n        this.version = 3;\n        this.authSafe = new ContentInfo();\n        this.macData = new MacData();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], PFX.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: ContentInfo })\n], PFX.prototype, \"authSafe\", void 0);\n__decorate([\n    AsnProp({ type: MacData, optional: true })\n], PFX.prototype, \"macData\", void 0);\n","var SafeContents_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { PKCS12Attribute } from \"./attribute\";\nexport class SafeBag {\n    constructor(params = {}) {\n        this.bagId = \"\";\n        this.bagValue = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], SafeBag.prototype, \"bagId\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Any, context: 0 })\n], SafeBag.prototype, \"bagValue\", void 0);\n__decorate([\n    AsnProp({ type: PKCS12Attribute, repeated: \"set\", optional: true })\n], SafeBag.prototype, \"bagAttributes\", void 0);\nlet SafeContents = SafeContents_1 = class SafeContents extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SafeContents_1.prototype);\n    }\n};\nSafeContents = SafeContents_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: SafeBag })\n], SafeContents);\nexport { SafeContents };\n","var ExtensionRequest_1, ExtendedCertificateAttributes_1, SMIMECapabilities_1;\nimport { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnPropTypes, AsnProp, OctetString, AsnArray } from \"@peculiar/asn1-schema\";\nimport * as cms from \"@peculiar/asn1-cms\";\nimport * as pfx from \"@peculiar/asn1-pfx\";\nimport * as pkcs8 from \"@peculiar/asn1-pkcs8\";\nimport * as x509 from \"@peculiar/asn1-x509\";\nimport * as attr from \"@peculiar/asn1-x509-attr\";\nexport const id_pkcs9 = \"1.2.840.113549.1.9\";\nexport const id_pkcs9_mo = `${id_pkcs9}.0`;\nexport const id_pkcs9_oc = `${id_pkcs9}.24`;\nexport const id_pkcs9_at = `${id_pkcs9}.25`;\nexport const id_pkcs9_sx = `${id_pkcs9}.26`;\nexport const id_pkcs9_mr = `${id_pkcs9}.27`;\nexport const id_pkcs9_oc_pkcsEntity = `${id_pkcs9_oc}.1`;\nexport const id_pkcs9_oc_naturalPerson = `${id_pkcs9_oc}.2`;\nexport const id_pkcs9_at_emailAddress = `${id_pkcs9}.1`;\nexport const id_pkcs9_at_unstructuredName = `${id_pkcs9}.2`;\nexport const id_pkcs9_at_contentType = `${id_pkcs9}.3`;\nexport const id_pkcs9_at_messageDigest = `${id_pkcs9}.4`;\nexport const id_pkcs9_at_signingTime = `${id_pkcs9}.5`;\nexport const id_pkcs9_at_counterSignature = `${id_pkcs9}.6`;\nexport const id_pkcs9_at_challengePassword = `${id_pkcs9}.7`;\nexport const id_pkcs9_at_unstructuredAddress = `${id_pkcs9}.8`;\nexport const id_pkcs9_at_extendedCertificateAttributes = `${id_pkcs9}.9`;\nexport const id_pkcs9_at_signingDescription = `${id_pkcs9}.13`;\nexport const id_pkcs9_at_extensionRequest = `${id_pkcs9}.14`;\nexport const id_pkcs9_at_smimeCapabilities = `${id_pkcs9}.15`;\nexport const id_pkcs9_at_friendlyName = `${id_pkcs9}.20`;\nexport const id_pkcs9_at_localKeyId = `${id_pkcs9}.21`;\nexport const id_pkcs9_at_userPKCS12 = `2.16.840.1.113730.3.1.216`;\nexport const id_pkcs9_at_pkcs15Token = `${id_pkcs9_at}.1`;\nexport const id_pkcs9_at_encryptedPrivateKeyInfo = `${id_pkcs9_at}.2`;\nexport const id_pkcs9_at_randomNonce = `${id_pkcs9_at}.3`;\nexport const id_pkcs9_at_sequenceNumber = `${id_pkcs9_at}.4`;\nexport const id_pkcs9_at_pkcs7PDU = `${id_pkcs9_at}.5`;\nexport const id_ietf_at = `1.3.6.1.5.5.7.9`;\nexport const id_pkcs9_at_dateOfBirth = `${id_ietf_at}.1`;\nexport const id_pkcs9_at_placeOfBirth = `${id_ietf_at}.2`;\nexport const id_pkcs9_at_gender = `${id_ietf_at}.3`;\nexport const id_pkcs9_at_countryOfCitizenship = `${id_ietf_at}.4`;\nexport const id_pkcs9_at_countryOfResidence = `${id_ietf_at}.5`;\nexport const id_pkcs9_sx_pkcs9String = `${id_pkcs9_sx}.1`;\nexport const id_pkcs9_sx_signingTime = `${id_pkcs9_sx}.2`;\nexport const id_pkcs9_mr_caseIgnoreMatch = `${id_pkcs9_mr}.1`;\nexport const id_pkcs9_mr_signingTimeMatch = `${id_pkcs9_mr}.2`;\nexport const id_smime = `${id_pkcs9}.16`;\nexport const id_certTypes = `${id_pkcs9}.22`;\nexport const crlTypes = `${id_pkcs9}.23`;\nexport const id_at_pseudonym = `${attr.id_at}.65`;\nlet PKCS9String = class PKCS9String extends x509.DirectoryString {\n    constructor(params = {}) {\n        super(params);\n    }\n    toString() {\n        const o = {};\n        o.toString();\n        return this.ia5String || super.toString();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], PKCS9String.prototype, \"ia5String\", void 0);\nPKCS9String = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], PKCS9String);\nexport { PKCS9String };\nlet Pkcs7PDU = class Pkcs7PDU extends cms.ContentInfo {\n};\nPkcs7PDU = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], Pkcs7PDU);\nexport { Pkcs7PDU };\nlet UserPKCS12 = class UserPKCS12 extends pfx.PFX {\n};\nUserPKCS12 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], UserPKCS12);\nexport { UserPKCS12 };\nlet EncryptedPrivateKeyInfo = class EncryptedPrivateKeyInfo extends pkcs8.EncryptedPrivateKeyInfo {\n};\nEncryptedPrivateKeyInfo = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], EncryptedPrivateKeyInfo);\nexport { EncryptedPrivateKeyInfo };\nlet EmailAddress = class EmailAddress {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.IA5String })\n], EmailAddress.prototype, \"value\", void 0);\nEmailAddress = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], EmailAddress);\nexport { EmailAddress };\nlet UnstructuredName = class UnstructuredName extends PKCS9String {\n};\nUnstructuredName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], UnstructuredName);\nexport { UnstructuredName };\nlet UnstructuredAddress = class UnstructuredAddress extends x509.DirectoryString {\n};\nUnstructuredAddress = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], UnstructuredAddress);\nexport { UnstructuredAddress };\nlet DateOfBirth = class DateOfBirth {\n    constructor(value = new Date()) {\n        this.value = value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.GeneralizedTime })\n], DateOfBirth.prototype, \"value\", void 0);\nDateOfBirth = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], DateOfBirth);\nexport { DateOfBirth };\nlet PlaceOfBirth = class PlaceOfBirth extends x509.DirectoryString {\n};\nPlaceOfBirth = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], PlaceOfBirth);\nexport { PlaceOfBirth };\nlet Gender = class Gender {\n    constructor(value = \"M\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], Gender.prototype, \"value\", void 0);\nGender = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Gender);\nexport { Gender };\nlet CountryOfCitizenship = class CountryOfCitizenship {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.PrintableString })\n], CountryOfCitizenship.prototype, \"value\", void 0);\nCountryOfCitizenship = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CountryOfCitizenship);\nexport { CountryOfCitizenship };\nlet CountryOfResidence = class CountryOfResidence extends CountryOfCitizenship {\n};\nCountryOfResidence = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], CountryOfResidence);\nexport { CountryOfResidence };\nlet Pseudonym = class Pseudonym extends x509.DirectoryString {\n};\nPseudonym = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], Pseudonym);\nexport { Pseudonym };\nlet ContentType = class ContentType {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ContentType.prototype, \"value\", void 0);\nContentType = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ContentType);\nexport { ContentType };\nexport class MessageDigest extends OctetString {\n}\nlet SigningTime = class SigningTime extends x509.Time {\n};\nSigningTime = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SigningTime);\nexport { SigningTime };\nexport class RandomNonce extends OctetString {\n}\nlet SequenceNumber = class SequenceNumber {\n    constructor(value = 0) {\n        this.value = value;\n    }\n    toString() {\n        return this.value.toString();\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], SequenceNumber.prototype, \"value\", void 0);\nSequenceNumber = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], SequenceNumber);\nexport { SequenceNumber };\nlet CounterSignature = class CounterSignature extends cms.SignerInfo {\n};\nCounterSignature = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], CounterSignature);\nexport { CounterSignature };\nlet ChallengePassword = class ChallengePassword extends x509.DirectoryString {\n};\nChallengePassword = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ChallengePassword);\nexport { ChallengePassword };\nlet ExtensionRequest = ExtensionRequest_1 = class ExtensionRequest extends x509.Extensions {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtensionRequest_1.prototype);\n    }\n};\nExtensionRequest = ExtensionRequest_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], ExtensionRequest);\nexport { ExtensionRequest };\nlet ExtendedCertificateAttributes = ExtendedCertificateAttributes_1 = class ExtendedCertificateAttributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, ExtendedCertificateAttributes_1.prototype);\n    }\n};\nExtendedCertificateAttributes = ExtendedCertificateAttributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Set, itemType: cms.Attribute })\n], ExtendedCertificateAttributes);\nexport { ExtendedCertificateAttributes };\nlet FriendlyName = class FriendlyName {\n    constructor(value = \"\") {\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.BmpString })\n], FriendlyName.prototype, \"value\", void 0);\nFriendlyName = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], FriendlyName);\nexport { FriendlyName };\nexport class LocalKeyId extends OctetString {\n}\nexport class SigningDescription extends x509.DirectoryString {\n}\nlet SMIMECapability = class SMIMECapability extends x509.AlgorithmIdentifier {\n};\nSMIMECapability = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence })\n], SMIMECapability);\nexport { SMIMECapability };\nlet SMIMECapabilities = SMIMECapabilities_1 = class SMIMECapabilities extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, SMIMECapabilities_1.prototype);\n    }\n};\nSMIMECapabilities = SMIMECapabilities_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: SMIMECapability })\n], SMIMECapabilities);\nexport { SMIMECapabilities };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const id_ecPublicKey = \"1.2.840.10045.2.1\";\nexport const id_ecDH = \"1.3.132.1.12\";\nexport const id_ecMQV = \"1.3.132.1.13\";\nexport const id_ecdsaWithSHA1 = \"1.2.840.10045.4.1\";\nexport const id_ecdsaWithSHA224 = \"1.2.840.10045.4.3.1\";\nexport const id_ecdsaWithSHA256 = \"1.2.840.10045.4.3.2\";\nexport const id_ecdsaWithSHA384 = \"1.2.840.10045.4.3.3\";\nexport const id_ecdsaWithSHA512 = \"1.2.840.10045.4.3.4\";\nexport const id_secp192r1 = \"1.2.840.10045.3.1.1\";\nexport const id_sect163k1 = \"1.3.132.0.1\";\nexport const id_sect163r2 = \"1.3.132.0.15\";\nexport const id_secp224r1 = \"1.3.132.0.33\";\nexport const id_sect233k1 = \"1.3.132.0.26\";\nexport const id_sect233r1 = \"1.3.132.0.27\";\nexport const id_secp256r1 = \"1.2.840.10045.3.1.7\";\nexport const id_sect283k1 = \"1.3.132.0.16\";\nexport const id_sect283r1 = \"1.3.132.0.17\";\nexport const id_secp384r1 = \"1.3.132.0.34\";\nexport const id_sect409k1 = \"1.3.132.0.36\";\nexport const id_sect409r1 = \"1.3.132.0.37\";\nexport const id_secp521r1 = \"1.3.132.0.35\";\nexport const id_sect571k1 = \"1.3.132.0.38\";\nexport const id_sect571r1 = \"1.3.132.0.39\";\n","import { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nimport * as oid from \"./object_identifiers\";\nfunction create(algorithm) {\n    return new AlgorithmIdentifier({ algorithm });\n}\nexport const ecdsaWithSHA1 = create(oid.id_ecdsaWithSHA1);\nexport const ecdsaWithSHA224 = create(oid.id_ecdsaWithSHA224);\nexport const ecdsaWithSHA256 = create(oid.id_ecdsaWithSHA256);\nexport const ecdsaWithSHA384 = create(oid.id_ecdsaWithSHA384);\nexport const ecdsaWithSHA512 = create(oid.id_ecdsaWithSHA512);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __decorate } from \"tslib\";\nimport { AsnType, AsnTypeTypes, AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nlet ECParameters = class ECParameters {\n    constructor(params = {}) {\n        Object.assign(this, params);\n    }\n};\n__decorate([\n    AsnProp({ type: AsnPropTypes.ObjectIdentifier })\n], ECParameters.prototype, \"namedCurve\", void 0);\nECParameters = __decorate([\n    AsnType({ type: AsnTypeTypes.Choice })\n], ECParameters);\nexport { ECParameters };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, OctetString } from \"@peculiar/asn1-schema\";\nimport { ECParameters } from \"./ec_parameters\";\nexport class ECPrivateKey {\n    constructor(params = {}) {\n        this.version = 1;\n        this.privateKey = new OctetString();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], ECPrivateKey.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: OctetString })\n], ECPrivateKey.prototype, \"privateKey\", void 0);\n__decorate([\n    AsnProp({ type: ECParameters, context: 0, optional: true })\n], ECPrivateKey.prototype, \"parameters\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString, context: 1, optional: true })\n], ECPrivateKey.prototype, \"publicKey\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes, AsnIntegerArrayBufferConverter } from \"@peculiar/asn1-schema\";\nexport class ECDSASigValue {\n    constructor(params = {}) {\n        this.r = new ArrayBuffer(0);\n        this.s = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"r\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer, converter: AsnIntegerArrayBufferConverter })\n], ECDSASigValue.prototype, \"s\", void 0);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","var Attributes_1;\nimport { __decorate } from \"tslib\";\nimport { AsnArray, AsnType, AsnTypeTypes } from \"@peculiar/asn1-schema\";\nimport { Attribute } from \"@peculiar/asn1-x509\";\nlet Attributes = Attributes_1 = class Attributes extends AsnArray {\n    constructor(items) {\n        super(items);\n        Object.setPrototypeOf(this, Attributes_1.prototype);\n    }\n};\nAttributes = Attributes_1 = __decorate([\n    AsnType({ type: AsnTypeTypes.Sequence, itemType: Attribute })\n], Attributes);\nexport { Attributes };\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { Name, SubjectPublicKeyInfo } from \"@peculiar/asn1-x509\";\nimport { Attributes } from \"./attributes\";\nexport class CertificationRequestInfo {\n    constructor(params = {}) {\n        this.version = 0;\n        this.subject = new Name();\n        this.subjectPKInfo = new SubjectPublicKeyInfo();\n        this.attributes = new Attributes();\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: AsnPropTypes.Integer })\n], CertificationRequestInfo.prototype, \"version\", void 0);\n__decorate([\n    AsnProp({ type: Name })\n], CertificationRequestInfo.prototype, \"subject\", void 0);\n__decorate([\n    AsnProp({ type: SubjectPublicKeyInfo })\n], CertificationRequestInfo.prototype, \"subjectPKInfo\", void 0);\n__decorate([\n    AsnProp({ type: Attributes, implicit: true, context: 0 })\n], CertificationRequestInfo.prototype, \"attributes\", void 0);\n","import { __decorate } from \"tslib\";\nimport { AsnProp, AsnPropTypes } from \"@peculiar/asn1-schema\";\nimport { CertificationRequestInfo } from \"./certification_request_info\";\nimport { AlgorithmIdentifier } from \"@peculiar/asn1-x509\";\nexport class CertificationRequest {\n    constructor(params = {}) {\n        this.certificationRequestInfo = new CertificationRequestInfo();\n        this.signatureAlgorithm = new AlgorithmIdentifier();\n        this.signature = new ArrayBuffer(0);\n        Object.assign(this, params);\n    }\n}\n__decorate([\n    AsnProp({ type: CertificationRequestInfo })\n], CertificationRequest.prototype, \"certificationRequestInfo\", void 0);\n__decorate([\n    AsnProp({ type: AlgorithmIdentifier })\n], CertificationRequest.prototype, \"signatureAlgorithm\", void 0);\n__decorate([\n    AsnProp({ type: AsnPropTypes.BitString })\n], CertificationRequest.prototype, \"signature\", void 0);\n","/*!\n * MIT License\n * \n * Copyright (c) Peculiar Ventures. All rights reserved.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\nimport 'reflect-metadata';\nimport { AsnConvert, OctetString, AsnUtf8StringConverter } from '@peculiar/asn1-schema';\nimport * as asn1X509 from '@peculiar/asn1-x509';\nimport { Extension as Extension$1, AlgorithmIdentifier, SubjectPublicKeyInfo, Name as Name$1, AttributeTypeAndValue, RelativeDistinguishedName, Certificate, BasicConstraints, id_ce_basicConstraints, ExtendedKeyUsage, id_ce_extKeyUsage, KeyUsage, id_ce_keyUsage, SubjectKeyIdentifier, id_ce_subjectKeyIdentifier, Attribute as Attribute$1, Extensions } from '@peculiar/asn1-x509';\nimport { BufferSourceConverter, isEqual, Convert, combine } from 'pvtsutils';\nimport * as asn1Rsa from '@peculiar/asn1-rsa';\nimport { id_rsaEncryption, RSAPublicKey } from '@peculiar/asn1-rsa';\nimport { container, injectable } from 'tsyringe';\nimport * as asnPkcs9 from '@peculiar/asn1-pkcs9';\nimport { id_pkcs9_at_extensionRequest } from '@peculiar/asn1-pkcs9';\nimport { __decorate } from 'tslib';\nimport * as asn1Ecc from '@peculiar/asn1-ecc';\nimport { ECDSASigValue } from '@peculiar/asn1-ecc';\nimport { CertificationRequest, CertificationRequestInfo } from '@peculiar/asn1-csr';\nimport * as asn1Cms from '@peculiar/asn1-cms';\n\nclass AsnData {\r\n    constructor(...args) {\r\n        if (args.length === 1) {\r\n            const asn = args[0];\r\n            this.rawData = AsnConvert.serialize(asn);\r\n            this.onInit(asn);\r\n        }\r\n        else {\r\n            const asn = AsnConvert.parse(args[0], args[1]);\r\n            this.rawData = BufferSourceConverter.toArrayBuffer(args[0]);\r\n            this.onInit(asn);\r\n        }\r\n    }\r\n    equal(data) {\r\n        if (data instanceof AsnData) {\r\n            return isEqual(data.rawData, this.rawData);\r\n        }\r\n        return false;\r\n    }\r\n}\n\nclass Extension extends AsnData {\r\n    constructor(...args) {\r\n        let raw;\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\r\n        }\r\n        else {\r\n            raw = AsnConvert.serialize(new Extension$1({\r\n                extnID: args[0],\r\n                critical: args[1],\r\n                extnValue: new OctetString(BufferSourceConverter.toArrayBuffer(args[2])),\r\n            }));\r\n        }\r\n        super(raw, Extension$1);\r\n    }\r\n    onInit(asn) {\r\n        this.type = asn.extnID;\r\n        this.critical = asn.critical;\r\n        this.value = asn.extnValue.buffer;\r\n    }\r\n}\n\nclass CryptoProvider extends Map {\r\n    constructor() {\r\n        super();\r\n        if (typeof self !== \"undefined\" && typeof crypto !== \"undefined\") {\r\n            this.set(CryptoProvider.DEFAULT, crypto);\r\n        }\r\n    }\r\n    static isCryptoKeyPair(data) {\r\n        return data && data.privateKey && data.publicKey;\r\n    }\r\n    static isCryptoKey(data) {\r\n        return data && data.usages && data.type && data.algorithm && data.extractable !== undefined;\r\n    }\r\n    get(key = CryptoProvider.DEFAULT) {\r\n        const crypto = super.get(key.toLowerCase());\r\n        if (!crypto) {\r\n            throw new Error(`Cannot get Crypto by name '${key}'`);\r\n        }\r\n        return crypto;\r\n    }\r\n    set(key, value) {\r\n        if (typeof key === \"string\") {\r\n            if (!value) {\r\n                throw new TypeError(\"Argument 'value' is required\");\r\n            }\r\n            super.set(key.toLowerCase(), value);\r\n        }\r\n        else {\r\n            super.set(CryptoProvider.DEFAULT, key);\r\n        }\r\n        return this;\r\n    }\r\n}\r\nCryptoProvider.DEFAULT = \"default\";\r\nconst cryptoProvider = new CryptoProvider();\n\nconst diAlgorithm = \"crypto.algorithm\";\r\nclass AlgorithmProvider {\r\n    getAlgorithms() {\r\n        return container.resolveAll(diAlgorithm);\r\n    }\r\n    toAsnAlgorithm(alg) {\r\n        ({ ...alg });\r\n        for (const algorithm of this.getAlgorithms()) {\r\n            const res = algorithm.toAsnAlgorithm(alg);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        if (/[0-9.]+/.test(alg.name)) {\r\n            const res = new AlgorithmIdentifier({\r\n                algorithm: alg.name,\r\n            });\r\n            if (\"parameters\" in alg) {\r\n                const unknown = alg;\r\n                res.parameters = unknown.parameters;\r\n            }\r\n            return res;\r\n        }\r\n        throw new Error(\"Cannot convert WebCrypto algorithm to ASN.1 algorithm\");\r\n    }\r\n    toWebAlgorithm(alg) {\r\n        for (const algorithm of this.getAlgorithms()) {\r\n            const res = algorithm.toWebAlgorithm(alg);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n        const unknown = {\r\n            name: alg.algorithm,\r\n            parameters: alg.parameters,\r\n        };\r\n        return unknown;\r\n    }\r\n}\r\nconst diAlgorithmProvider = \"crypto.algorithmProvider\";\r\ncontainer.registerSingleton(diAlgorithmProvider, AlgorithmProvider);\n\nclass PemConverter {\r\n    constructor() {\r\n        this.CertificateTag = \"CERTIFICATE\";\r\n        this.CertificateRequestTag = \"CERTIFICATE REQUEST\";\r\n        this.PublicKeyTag = \"PUBLIC KEY\";\r\n        this.PrivateKeyTag = \"PRIVATE KEY\";\r\n    }\r\n    static isPem(data) {\r\n        return typeof data === \"string\"\r\n            && /-{5}BEGIN [A-Z0-9 ]+-{5}([a-zA-Z0-9=+/\\n\\r]+)-{5}END [A-Z0-9 ]+-{5}/g.test(data);\r\n    }\r\n    static decode(pem) {\r\n        const pattern = /-{5}BEGIN [A-Z0-9 ]+-{5}([a-zA-Z0-9=+/\\n\\r]+)-{5}END [A-Z0-9 ]+-{5}/g;\r\n        const res = [];\r\n        let matches = null;\r\n        while (matches = pattern.exec(pem)) {\r\n            const base64 = matches[1]\r\n                .replace(/\\r/g, \"\")\r\n                .replace(/\\n/g, \"\");\r\n            res.push(Convert.FromBase64(base64));\r\n        }\r\n        return res;\r\n    }\r\n    static encode(rawData, tag) {\r\n        if (Array.isArray(rawData)) {\r\n            const raws = new Array();\r\n            rawData.forEach(element => {\r\n                raws.push(this.encodeBuffer(element, tag));\r\n            });\r\n            return raws.join(\"\\n\");\r\n        }\r\n        else {\r\n            return this.encodeBuffer(rawData, tag);\r\n        }\r\n    }\r\n    static encodeBuffer(rawData, tag) {\r\n        const base64 = Convert.ToBase64(rawData);\r\n        let sliced;\r\n        let offset = 0;\r\n        const rows = Array();\r\n        while (offset < base64.length) {\r\n            if (base64.length - offset < 64) {\r\n                sliced = base64.substring(offset);\r\n            }\r\n            else {\r\n                sliced = base64.substring(offset, offset + 64);\r\n                offset += 64;\r\n            }\r\n            if (sliced.length !== 0) {\r\n                rows.push(sliced);\r\n                if (sliced.length < 64) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        const upperCaseTag = tag.toLocaleUpperCase();\r\n        return `-----BEGIN ${upperCaseTag}-----\\n${rows.join(\"\\n\")}\\n-----END ${upperCaseTag}-----`;\r\n    }\r\n}\n\nclass PemData extends AsnData {\r\n    static isAsnEncoded(data) {\r\n        return BufferSourceConverter.isBufferSource(data) || typeof data === \"string\";\r\n    }\r\n    static toArrayBuffer(raw) {\r\n        if (typeof raw === \"string\") {\r\n            if (PemConverter.isPem(raw)) {\r\n                return PemConverter.decode(raw)[0];\r\n            }\r\n            else if (Convert.isHex(raw)) {\r\n                return Convert.FromHex(raw);\r\n            }\r\n            else if (Convert.isBase64(raw)) {\r\n                return Convert.FromBase64(raw);\r\n            }\r\n            else if (Convert.isBase64Url(raw)) {\r\n                return Convert.FromBase64Url(raw);\r\n            }\r\n            else {\r\n                throw new TypeError(\"Unsupported format of 'raw' argument. Must be one of DER, PEM, HEX, Base64, or Base4Url\");\r\n            }\r\n        }\r\n        else {\r\n            const stringRaw = Convert.ToBinary(raw);\r\n            if (PemConverter.isPem(stringRaw)) {\r\n                return PemConverter.decode(stringRaw)[0];\r\n            }\r\n            else if (Convert.isHex(stringRaw)) {\r\n                return Convert.FromHex(stringRaw);\r\n            }\r\n            else if (Convert.isBase64(stringRaw)) {\r\n                return Convert.FromBase64(stringRaw);\r\n            }\r\n            else if (Convert.isBase64Url(stringRaw)) {\r\n                return Convert.FromBase64Url(stringRaw);\r\n            }\r\n            return BufferSourceConverter.toArrayBuffer(raw);\r\n        }\r\n    }\r\n    constructor(...args) {\r\n        if (PemData.isAsnEncoded(args[0])) {\r\n            super(PemData.toArrayBuffer(args[0]), args[1]);\r\n        }\r\n        else {\r\n            super(args[0]);\r\n        }\r\n    }\r\n    toString(format = \"pem\") {\r\n        switch (format) {\r\n            case \"pem\":\r\n                return PemConverter.encode(this.rawData, this.tag);\r\n            case \"hex\":\r\n                return Convert.ToHex(this.rawData);\r\n            case \"base64\":\r\n                return Convert.ToBase64(this.rawData);\r\n            case \"base64url\":\r\n                return Convert.ToBase64Url(this.rawData);\r\n            default:\r\n                throw TypeError(\"Argument 'format' is unsupported value\");\r\n        }\r\n    }\r\n}\n\nclass PublicKey extends PemData {\r\n    constructor(param) {\r\n        if (PemData.isAsnEncoded(param)) {\r\n            super(param, SubjectPublicKeyInfo);\r\n        }\r\n        else {\r\n            super(param);\r\n        }\r\n        this.tag = \"PUBLIC KEY\";\r\n    }\r\n    async export(...args) {\r\n        let crypto;\r\n        let keyUsages = [\"verify\"];\r\n        let algorithm = { hash: \"SHA-256\", ...this.algorithm };\r\n        if (args.length > 1) {\r\n            algorithm = args[0] || algorithm;\r\n            keyUsages = args[1] || keyUsages;\r\n            crypto = args[2] || cryptoProvider.get();\r\n        }\r\n        else {\r\n            crypto = args[0] || cryptoProvider.get();\r\n        }\r\n        return crypto.subtle.importKey(\"spki\", this.rawData, algorithm, true, keyUsages);\r\n    }\r\n    onInit(asn) {\r\n        const algProv = container.resolve(diAlgorithmProvider);\r\n        const algorithm = this.algorithm = algProv.toWebAlgorithm(asn.algorithm);\r\n        switch (asn.algorithm.algorithm) {\r\n            case id_rsaEncryption:\r\n                {\r\n                    const rsaPublicKey = AsnConvert.parse(asn.subjectPublicKey, RSAPublicKey);\r\n                    const modulus = BufferSourceConverter.toUint8Array(rsaPublicKey.modulus);\r\n                    algorithm.publicExponent = BufferSourceConverter.toUint8Array(rsaPublicKey.publicExponent);\r\n                    algorithm.modulusLength = (!modulus[0] ? modulus.slice(1) : modulus).byteLength << 3;\r\n                    break;\r\n                }\r\n        }\r\n    }\r\n    async getThumbprint(...args) {\r\n        var _a;\r\n        let crypto;\r\n        let algorithm = \"SHA-1\";\r\n        if (args.length >= 1 && !((_a = args[0]) === null || _a === void 0 ? void 0 : _a.subtle)) {\r\n            algorithm = args[0] || algorithm;\r\n            crypto = args[1] || cryptoProvider.get();\r\n        }\r\n        else {\r\n            crypto = args[0] || cryptoProvider.get();\r\n        }\r\n        return await crypto.subtle.digest(algorithm, this.rawData);\r\n    }\r\n    async getKeyIdentifier(crypto) {\r\n        if (!crypto) {\r\n            crypto = cryptoProvider.get();\r\n        }\r\n        const asn = AsnConvert.parse(this.rawData, SubjectPublicKeyInfo);\r\n        return await crypto.subtle.digest(\"SHA-1\", asn.subjectPublicKey);\r\n    }\r\n}\n\nclass NameIdentifier {\r\n    constructor() {\r\n        this.items = {};\r\n    }\r\n    get(idOrName) {\r\n        return this.items[idOrName] || null;\r\n    }\r\n    register(id, name) {\r\n        this.items[id] = name;\r\n        this.items[name] = id;\r\n    }\r\n}\r\nconst names = new NameIdentifier();\r\nnames.register(\"CN\", \"2.5.4.3\");\r\nnames.register(\"L\", \"2.5.4.7\");\r\nnames.register(\"ST\", \"2.5.4.8\");\r\nnames.register(\"O\", \"2.5.4.10\");\r\nnames.register(\"OU\", \"2.5.4.11\");\r\nnames.register(\"C\", \"2.5.4.6\");\r\nnames.register(\"DC\", \"0.9.2342.19200300.100.1.25\");\r\nnames.register(\"E\", \"1.2.840.113549.1.9.1\");\r\nnames.register(\"G\", \"2.5.4.42\");\r\nnames.register(\"I\", \"2.5.4.43\");\r\nnames.register(\"SN\", \"2.5.4.4\");\r\nnames.register(\"T\", \"2.5.4.12\");\r\nfunction replaceUnknownCharacter(text, char) {\r\n    return `\\\\${Convert.ToHex(Convert.FromUtf8String(char)).toUpperCase()}`;\r\n}\r\nfunction escape(data) {\r\n    return data\r\n        .replace(/([,+\"\\\\<>;])/g, \"\\\\$1\")\r\n        .replace(/^([ #])/, \"\\\\$1\")\r\n        .replace(/([ ]$)/, \"\\\\$1\")\r\n        .replace(/([\\r\\n\\t])/, replaceUnknownCharacter);\r\n}\r\nclass Name {\r\n    constructor(data, extraNames = {}) {\r\n        this.extraNames = new NameIdentifier();\r\n        this.asn = new Name$1();\r\n        for (const key in extraNames) {\r\n            if (Object.prototype.hasOwnProperty.call(extraNames, key)) {\r\n                const value = extraNames[key];\r\n                this.extraNames.register(key, value);\r\n            }\r\n        }\r\n        if (typeof data === \"string\") {\r\n            this.asn = this.fromString(data);\r\n        }\r\n        else if (data instanceof Name$1) {\r\n            this.asn = data;\r\n        }\r\n        else if (BufferSourceConverter.isBufferSource(data)) {\r\n            this.asn = AsnConvert.parse(data, Name$1);\r\n        }\r\n        else {\r\n            this.asn = this.fromJSON(data);\r\n        }\r\n    }\r\n    static isASCII(text) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const code = text.charCodeAt(i);\r\n            if (code > 0xFF) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    getName(idOrName) {\r\n        return this.extraNames.get(idOrName) || names.get(idOrName);\r\n    }\r\n    toString() {\r\n        return this.asn.map(rdn => rdn.map(o => {\r\n            const type = this.getName(o.type) || o.type;\r\n            const value = o.value.anyValue\r\n                ? `#${Convert.ToHex(o.value.anyValue)}`\r\n                : escape(o.value.toString());\r\n            return `${type}=${value}`;\r\n        })\r\n            .join(\"+\"))\r\n            .join(\", \");\r\n    }\r\n    toJSON() {\r\n        var _a;\r\n        const json = [];\r\n        for (const rdn of this.asn) {\r\n            const jsonItem = {};\r\n            for (const attr of rdn) {\r\n                const type = this.getName(attr.type) || attr.type;\r\n                (_a = jsonItem[type]) !== null && _a !== void 0 ? _a : (jsonItem[type] = []);\r\n                jsonItem[type].push(attr.value.anyValue ? `#${Convert.ToHex(attr.value.anyValue)}` : attr.value.toString());\r\n            }\r\n            json.push(jsonItem);\r\n        }\r\n        return json;\r\n    }\r\n    fromString(data) {\r\n        const asn = new Name$1();\r\n        const regex = /(\\d\\.[\\d.]*\\d|[A-Za-z]+)=((?:\"\")|(?:\".*?[^\\\\]\")|(?:[^,+].*?(?:[^\\\\][,+]))|(?:))([,+])?/g;\r\n        let matches = null;\r\n        let level = \",\";\r\n        while (matches = regex.exec(`${data},`)) {\r\n            let [, type, value] = matches;\r\n            const lastChar = value[value.length - 1];\r\n            if (lastChar === \",\" || lastChar === \"+\") {\r\n                value = value.slice(0, value.length - 1);\r\n                matches[3] = lastChar;\r\n            }\r\n            const next = matches[3];\r\n            if (!/[\\d.]+/.test(type)) {\r\n                type = this.getName(type) || \"\";\r\n            }\r\n            if (!type) {\r\n                throw new Error(`Cannot get OID for name type '${type}'`);\r\n            }\r\n            const attr = new AttributeTypeAndValue({ type });\r\n            if (value.charAt(0) === \"#\") {\r\n                attr.value.anyValue = Convert.FromHex(value.slice(1));\r\n            }\r\n            else {\r\n                const quotedMatches = /\"(.*?[^\\\\])?\"/.exec(value);\r\n                if (quotedMatches) {\r\n                    value = quotedMatches[1];\r\n                }\r\n                value = value\r\n                    .replace(/\\\\0a/ig, \"\\n\")\r\n                    .replace(/\\\\0d/ig, \"\\r\")\r\n                    .replace(/\\\\0g/ig, \"\\t\")\r\n                    .replace(/\\\\(.)/g, \"$1\");\r\n                if (type === this.getName(\"E\") || type === this.getName(\"DC\")) {\r\n                    attr.value.ia5String = value;\r\n                }\r\n                else {\r\n                    if (Name.isASCII(value)) {\r\n                        attr.value.printableString = value;\r\n                    }\r\n                    else {\r\n                        attr.value.utf8String = value;\r\n                    }\r\n                }\r\n            }\r\n            if (level === \"+\") {\r\n                asn[asn.length - 1].push(attr);\r\n            }\r\n            else {\r\n                asn.push(new RelativeDistinguishedName([attr]));\r\n            }\r\n            level = next;\r\n        }\r\n        return asn;\r\n    }\r\n    fromJSON(data) {\r\n        const asn = new Name$1();\r\n        for (const item of data) {\r\n            const asnRdn = new RelativeDistinguishedName();\r\n            for (const type in item) {\r\n                let typeId = type;\r\n                if (!/[\\d.]+/.test(type)) {\r\n                    typeId = this.getName(type) || \"\";\r\n                }\r\n                if (!typeId) {\r\n                    throw new Error(`Cannot get OID for name type '${type}'`);\r\n                }\r\n                const values = item[type];\r\n                for (const value of values) {\r\n                    const asnAttr = new AttributeTypeAndValue({ type: typeId });\r\n                    if (value[0] === \"#\") {\r\n                        asnAttr.value.anyValue = Convert.FromHex(value.slice(1));\r\n                    }\r\n                    else {\r\n                        if (typeId === this.getName(\"E\") || typeId === this.getName(\"DC\")) {\r\n                            asnAttr.value.ia5String = value;\r\n                        }\r\n                        else {\r\n                            asnAttr.value.printableString = value;\r\n                        }\r\n                    }\r\n                    asnRdn.push(asnAttr);\r\n                }\r\n            }\r\n            asn.push(asnRdn);\r\n        }\r\n        return asn;\r\n    }\r\n    toArrayBuffer() {\r\n        return AsnConvert.serialize(this.asn);\r\n    }\r\n    async getThumbprint(...args) {\r\n        var _a;\r\n        let crypto;\r\n        let algorithm = \"SHA-1\";\r\n        if (args.length >= 1 && !((_a = args[0]) === null || _a === void 0 ? void 0 : _a.subtle)) {\r\n            algorithm = args[0] || algorithm;\r\n            crypto = args[1] || cryptoProvider.get();\r\n        }\r\n        else {\r\n            crypto = args[0] || cryptoProvider.get();\r\n        }\r\n        return await crypto.subtle.digest(algorithm, this.toArrayBuffer());\r\n    }\r\n}\n\nclass ExtensionFactory {\r\n    static register(id, type) {\r\n        this.items.set(id, type);\r\n    }\r\n    static create(data) {\r\n        const extension = new Extension(data);\r\n        const Type = this.items.get(extension.type);\r\n        if (Type) {\r\n            return new Type(data);\r\n        }\r\n        return extension;\r\n    }\r\n}\r\nExtensionFactory.items = new Map();\n\nconst diAsnSignatureFormatter = \"crypto.signatureFormatter\";\r\nclass AsnDefaultSignatureFormatter {\r\n    toAsnSignature(algorithm, signature) {\r\n        return BufferSourceConverter.toArrayBuffer(signature);\r\n    }\r\n    toWebSignature(algorithm, signature) {\r\n        return BufferSourceConverter.toArrayBuffer(signature);\r\n    }\r\n}\n\nclass X509Certificate extends PemData {\r\n    constructor(param) {\r\n        if (PemData.isAsnEncoded(param)) {\r\n            super(param, Certificate);\r\n        }\r\n        else {\r\n            super(param);\r\n        }\r\n        this.tag = \"CERTIFICATE\";\r\n    }\r\n    onInit(asn) {\r\n        const tbs = asn.tbsCertificate;\r\n        this.tbs = AsnConvert.serialize(tbs);\r\n        this.serialNumber = Convert.ToHex(tbs.serialNumber);\r\n        this.subjectName = new Name(tbs.subject);\r\n        this.subject = new Name(tbs.subject).toString();\r\n        this.issuerName = new Name(tbs.issuer);\r\n        this.issuer = this.issuerName.toString();\r\n        const algProv = container.resolve(diAlgorithmProvider);\r\n        this.signatureAlgorithm = algProv.toWebAlgorithm(asn.signatureAlgorithm);\r\n        this.signature = asn.signatureValue;\r\n        const notBefore = tbs.validity.notBefore.utcTime || tbs.validity.notBefore.generalTime;\r\n        if (!notBefore) {\r\n            throw new Error(\"Cannot get 'notBefore' value\");\r\n        }\r\n        this.notBefore = notBefore;\r\n        const notAfter = tbs.validity.notAfter.utcTime || tbs.validity.notAfter.generalTime;\r\n        if (!notAfter) {\r\n            throw new Error(\"Cannot get 'notAfter' value\");\r\n        }\r\n        this.notAfter = notAfter;\r\n        this.extensions = [];\r\n        if (tbs.extensions) {\r\n            this.extensions = tbs.extensions.map(o => ExtensionFactory.create(AsnConvert.serialize(o)));\r\n        }\r\n        this.publicKey = new PublicKey(tbs.subjectPublicKeyInfo);\r\n    }\r\n    getExtension(type) {\r\n        for (const ext of this.extensions) {\r\n            if (typeof type === \"string\") {\r\n                if (ext.type === type) {\r\n                    return ext;\r\n                }\r\n            }\r\n            else {\r\n                if (ext instanceof type) {\r\n                    return ext;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getExtensions(type) {\r\n        return this.extensions.filter(o => {\r\n            if (typeof type === \"string\") {\r\n                return o.type === type;\r\n            }\r\n            else {\r\n                return o instanceof type;\r\n            }\r\n        });\r\n    }\r\n    async verify(params = {}, crypto = cryptoProvider.get()) {\r\n        let keyAlgorithm;\r\n        let publicKey;\r\n        const paramsKey = params.publicKey;\r\n        try {\r\n            if (!paramsKey) {\r\n                keyAlgorithm = { ...this.publicKey.algorithm, ...this.signatureAlgorithm };\r\n                publicKey = await this.publicKey.export(keyAlgorithm, [\"verify\"], crypto);\r\n            }\r\n            else if (paramsKey instanceof X509Certificate) {\r\n                keyAlgorithm = { ...paramsKey.publicKey.algorithm, ...this.signatureAlgorithm };\r\n                publicKey = await paramsKey.publicKey.export(keyAlgorithm, [\"verify\"]);\r\n            }\r\n            else if (paramsKey instanceof PublicKey) {\r\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\r\n                publicKey = await paramsKey.export(keyAlgorithm, [\"verify\"]);\r\n            }\r\n            else {\r\n                keyAlgorithm = { ...paramsKey.algorithm, ...this.signatureAlgorithm };\r\n                publicKey = paramsKey;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\r\n        let signature = null;\r\n        for (const signatureFormatter of signatureFormatters) {\r\n            signature = signatureFormatter.toWebSignature(keyAlgorithm, this.signature);\r\n            if (signature) {\r\n                break;\r\n            }\r\n        }\r\n        if (!signature) {\r\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\r\n        }\r\n        const ok = await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\r\n        if (params.signatureOnly) {\r\n            return ok;\r\n        }\r\n        else {\r\n            const date = params.date || new Date();\r\n            const time = date.getTime();\r\n            return ok && this.notBefore.getTime() < time && time < this.notAfter.getTime();\r\n        }\r\n    }\r\n    async getThumbprint(...args) {\r\n        let crypto;\r\n        let algorithm = \"SHA-1\";\r\n        if (args[0]) {\r\n            if (!args[0].subtle) {\r\n                algorithm = args[0] || algorithm;\r\n                crypto = args[1];\r\n            }\r\n            else {\r\n                crypto = args[0];\r\n            }\r\n        }\r\n        crypto !== null && crypto !== void 0 ? crypto : (crypto = cryptoProvider.get());\r\n        return await crypto.subtle.digest(algorithm, this.rawData);\r\n    }\r\n    async isSelfSigned() {\r\n        return this.subject === this.issuer && await this.verify({ signatureOnly: true });\r\n    }\r\n}\n\nclass AuthorityKeyIdentifierExtension extends Extension {\r\n    constructor(...args) {\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n        }\r\n        else if (typeof args[0] === \"string\") {\r\n            const value = new asn1X509.AuthorityKeyIdentifier({ keyIdentifier: new OctetString(Convert.FromHex(args[0])) });\r\n            super(asn1X509.id_ce_authorityKeyIdentifier, args[1], AsnConvert.serialize(value));\r\n        }\r\n        else {\r\n            const certId = args[0];\r\n            const value = new asn1X509.AuthorityKeyIdentifier({\r\n                authorityCertIssuer: certId.name,\r\n                authorityCertSerialNumber: Convert.FromHex(certId.serialNumber),\r\n            });\r\n            super(asn1X509.id_ce_authorityKeyIdentifier, args[1], AsnConvert.serialize(value));\r\n        }\r\n    }\r\n    static async create(param, critical = false, crypto = cryptoProvider.get()) {\r\n        if (param instanceof X509Certificate || CryptoProvider.isCryptoKey(param)) {\r\n            const publicKey = param instanceof X509Certificate ? await param.publicKey.export(crypto) : param;\r\n            const spki = await crypto.subtle.exportKey(\"spki\", publicKey);\r\n            const key = new PublicKey(spki);\r\n            const id = await key.getKeyIdentifier(crypto);\r\n            return new AuthorityKeyIdentifierExtension(Convert.ToHex(id), critical);\r\n        }\r\n        else {\r\n            return new AuthorityKeyIdentifierExtension(param, critical);\r\n        }\r\n    }\r\n    onInit(asn) {\r\n        super.onInit(asn);\r\n        const aki = AsnConvert.parse(asn.extnValue, asn1X509.AuthorityKeyIdentifier);\r\n        if (aki.keyIdentifier) {\r\n            this.keyId = Convert.ToHex(aki.keyIdentifier);\r\n        }\r\n        if (aki.authorityCertIssuer && aki.authorityCertSerialNumber) {\r\n            this.certId = {\r\n                name: aki.authorityCertIssuer,\r\n                serialNumber: Convert.ToHex(aki.authorityCertSerialNumber),\r\n            };\r\n        }\r\n    }\r\n}\n\nclass BasicConstraintsExtension extends Extension {\r\n    constructor(...args) {\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n            const value = AsnConvert.parse(this.value, BasicConstraints);\r\n            this.ca = value.cA;\r\n            this.pathLength = value.pathLenConstraint;\r\n        }\r\n        else {\r\n            const value = new BasicConstraints({\r\n                cA: args[0],\r\n                pathLenConstraint: args[1],\r\n            });\r\n            super(id_ce_basicConstraints, args[2], AsnConvert.serialize(value));\r\n            this.ca = args[0];\r\n            this.pathLength = args[1];\r\n        }\r\n    }\r\n}\n\nclass ExtendedKeyUsageExtension extends Extension {\r\n    constructor(...args) {\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n            const value = AsnConvert.parse(this.value, ExtendedKeyUsage);\r\n            this.usages = value.map(o => o);\r\n        }\r\n        else {\r\n            const value = new ExtendedKeyUsage(args[0]);\r\n            super(id_ce_extKeyUsage, args[1], AsnConvert.serialize(value));\r\n            this.usages = args[0];\r\n        }\r\n    }\r\n}\n\nvar KeyUsageFlags;\r\n(function (KeyUsageFlags) {\r\n    KeyUsageFlags[KeyUsageFlags[\"digitalSignature\"] = 1] = \"digitalSignature\";\r\n    KeyUsageFlags[KeyUsageFlags[\"nonRepudiation\"] = 2] = \"nonRepudiation\";\r\n    KeyUsageFlags[KeyUsageFlags[\"keyEncipherment\"] = 4] = \"keyEncipherment\";\r\n    KeyUsageFlags[KeyUsageFlags[\"dataEncipherment\"] = 8] = \"dataEncipherment\";\r\n    KeyUsageFlags[KeyUsageFlags[\"keyAgreement\"] = 16] = \"keyAgreement\";\r\n    KeyUsageFlags[KeyUsageFlags[\"keyCertSign\"] = 32] = \"keyCertSign\";\r\n    KeyUsageFlags[KeyUsageFlags[\"cRLSign\"] = 64] = \"cRLSign\";\r\n    KeyUsageFlags[KeyUsageFlags[\"encipherOnly\"] = 128] = \"encipherOnly\";\r\n    KeyUsageFlags[KeyUsageFlags[\"decipherOnly\"] = 256] = \"decipherOnly\";\r\n})(KeyUsageFlags || (KeyUsageFlags = {}));\r\nclass KeyUsagesExtension extends Extension {\r\n    constructor(...args) {\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n            const value = AsnConvert.parse(this.value, KeyUsage);\r\n            this.usages = value.toNumber();\r\n        }\r\n        else {\r\n            const value = new KeyUsage(args[0]);\r\n            super(id_ce_keyUsage, args[1], AsnConvert.serialize(value));\r\n            this.usages = args[0];\r\n        }\r\n    }\r\n}\n\nclass SubjectKeyIdentifierExtension extends Extension {\r\n    constructor(...args) {\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n            const value = AsnConvert.parse(this.value, SubjectKeyIdentifier);\r\n            this.keyId = Convert.ToHex(value);\r\n        }\r\n        else {\r\n            const identifier = typeof args[0] === \"string\"\r\n                ? Convert.FromHex(args[0])\r\n                : args[0];\r\n            const value = new SubjectKeyIdentifier(identifier);\r\n            super(id_ce_subjectKeyIdentifier, args[1], AsnConvert.serialize(value));\r\n            this.keyId = Convert.ToHex(identifier);\r\n        }\r\n    }\r\n    static async create(publicKey, critical = false, crypto = cryptoProvider.get()) {\r\n        const spki = await crypto.subtle.exportKey(\"spki\", publicKey);\r\n        const key = new PublicKey(spki);\r\n        const id = await key.getKeyIdentifier(crypto);\r\n        return new SubjectKeyIdentifierExtension(Convert.ToHex(id), critical);\r\n    }\r\n}\n\nclass OtherName extends AsnData {\r\n    constructor(...args) {\r\n        let raw;\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\r\n        }\r\n        else {\r\n            const type = args[0];\r\n            const value = BufferSourceConverter.toArrayBuffer(args[1]);\r\n            raw = AsnConvert.serialize(new asn1X509.OtherName({ typeId: type, value }));\r\n        }\r\n        super(raw, asn1X509.OtherName);\r\n    }\r\n    onInit(asn) {\r\n        this.type = asn.typeId;\r\n        this.value = asn.value;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            type: this.type,\r\n            value: Convert.ToHex(this.value),\r\n        };\r\n    }\r\n}\r\nclass SubjectAlternativeNameExtension extends Extension {\r\n    constructor(...args) {\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n        }\r\n        else {\r\n            const data = args[0] || {};\r\n            const value = new asn1X509.SubjectAlternativeName();\r\n            for (const item of data.dns || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    dNSName: item,\r\n                }));\r\n            }\r\n            for (const item of data.email || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    rfc822Name: item,\r\n                }));\r\n            }\r\n            for (const item of data.guid || []) {\r\n                const matches = /([0-9a-f]{8})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{12})/i.exec(item);\r\n                if (!matches) {\r\n                    throw new Error(\"Cannot parse GUID value. Value doesn't match to regular expression\");\r\n                }\r\n                const hex = matches\r\n                    .slice(1)\r\n                    .map((o, i) => {\r\n                    if (i < 3) {\r\n                        return Convert.ToHex(new Uint8Array(Convert.FromHex(o)).reverse());\r\n                    }\r\n                    return o;\r\n                })\r\n                    .join(\"\");\r\n                value.push(new asn1X509.GeneralName({\r\n                    otherName: new asn1X509.OtherName({\r\n                        typeId: SubjectAlternativeNameExtension.GUID,\r\n                        value: AsnConvert.serialize(new OctetString(Convert.FromHex(hex))),\r\n                    }),\r\n                }));\r\n            }\r\n            for (const item of data.ip || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    iPAddress: item,\r\n                }));\r\n            }\r\n            for (const item of data.url || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    uniformResourceIdentifier: item,\r\n                }));\r\n            }\r\n            for (const item of data.upn || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    otherName: new asn1X509.OtherName({\r\n                        typeId: SubjectAlternativeNameExtension.UPN,\r\n                        value: AsnConvert.serialize(AsnUtf8StringConverter.toASN(item))\r\n                    }),\r\n                }));\r\n            }\r\n            for (const item of data.registeredId || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    registeredID: item,\r\n                }));\r\n            }\r\n            for (const item of data.otherName || []) {\r\n                value.push(new asn1X509.GeneralName({\r\n                    otherName: new asn1X509.OtherName({\r\n                        typeId: item.type,\r\n                        value: Convert.FromHex(item.value),\r\n                    }),\r\n                }));\r\n            }\r\n            super(asn1X509.id_ce_subjectAltName, args[1], AsnConvert.serialize(value));\r\n        }\r\n    }\r\n    onInit(asn) {\r\n        super.onInit(asn);\r\n        const value = AsnConvert.parse(asn.extnValue, asn1X509.SubjectAlternativeName);\r\n        this.dns = value.filter(o => o.dNSName).map(o => o.dNSName || \"\");\r\n        this.email = value.filter(o => o.rfc822Name).map(o => o.rfc822Name || \"\");\r\n        this.ip = value.filter(o => o.iPAddress).map(o => o.iPAddress || \"\");\r\n        this.url = value.filter(o => o.uniformResourceIdentifier).map(o => o.uniformResourceIdentifier || \"\");\r\n        this.upn = value\r\n            .filter(o => { var _a; return ((_a = o.otherName) === null || _a === void 0 ? void 0 : _a.typeId) === SubjectAlternativeNameExtension.UPN; })\r\n            .map(o => o.otherName ? AsnConvert.parse(o.otherName.value, asn1X509.DirectoryString).toString() : \"\");\r\n        this.guid = value\r\n            .filter(o => { var _a; return ((_a = o.otherName) === null || _a === void 0 ? void 0 : _a.typeId) === SubjectAlternativeNameExtension.GUID; })\r\n            .map(o => o.otherName ? AsnConvert.parse(o.otherName.value, OctetString) : new OctetString())\r\n            .map(o => {\r\n            const matches = /([0-9a-f]{8})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{4})-?([0-9a-f]{12})/i.exec(Convert.ToHex(o));\r\n            if (!matches) {\r\n                throw new Error(\"Cannot parse GUID value. Value doesn't match to regular expression\");\r\n            }\r\n            const guid = matches\r\n                .slice(1)\r\n                .map((o, i) => {\r\n                if (i < 3) {\r\n                    return Convert.ToHex(new Uint8Array(Convert.FromHex(o)).reverse());\r\n                }\r\n                return o;\r\n            })\r\n                .join(\"-\");\r\n            return `{${guid}}`;\r\n        });\r\n        this.registeredId = value.filter(o => o.registeredID).map(o => o.registeredID || \"\");\r\n        this.otherNames = value\r\n            .filter(o => o.otherName && ![SubjectAlternativeNameExtension.GUID, SubjectAlternativeNameExtension.UPN].includes(o.otherName.typeId))\r\n            .map(o => new OtherName(o.otherName.typeId, o.otherName.value));\r\n    }\r\n    toJSON() {\r\n        const json = {};\r\n        if (this.dns.length) {\r\n            json.dns = [...this.dns];\r\n        }\r\n        if (this.email.length) {\r\n            json.email = [...this.email];\r\n        }\r\n        if (this.ip.length) {\r\n            json.ip = [...this.ip];\r\n        }\r\n        if (this.guid.length) {\r\n            json.guid = [...this.guid];\r\n        }\r\n        if (this.upn.length) {\r\n            json.upn = [...this.upn];\r\n        }\r\n        if (this.url.length) {\r\n            json.url = [...this.url];\r\n        }\r\n        if (this.registeredId.length) {\r\n            json.registeredId = [...this.registeredId];\r\n        }\r\n        if (this.otherNames.length) {\r\n            json.otherName = this.otherNames.map(o => o.toJSON());\r\n        }\r\n        return json;\r\n    }\r\n}\r\nSubjectAlternativeNameExtension.GUID = \"1.3.6.1.4.1.311.25.1\";\r\nSubjectAlternativeNameExtension.UPN = \"1.3.6.1.4.1.311.20.2.3\";\n\nclass CertificatePolicyExtension extends Extension {\r\n    constructor(...args) {\r\n        var _a;\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n            const asnPolicies = AsnConvert.parse(this.value, asn1X509.CertificatePolicies);\r\n            this.policies = asnPolicies.map(o => o.policyIdentifier);\r\n        }\r\n        else {\r\n            const policies = args[0];\r\n            const critical = (_a = args[1]) !== null && _a !== void 0 ? _a : false;\r\n            const value = new asn1X509.CertificatePolicies(policies.map(o => (new asn1X509.PolicyInformation({\r\n                policyIdentifier: o,\r\n            }))));\r\n            super(asn1X509.id_ce_certificatePolicies, critical, AsnConvert.serialize(value));\r\n            this.policies = policies;\r\n        }\r\n    }\r\n}\r\nExtensionFactory.register(asn1X509.id_ce_certificatePolicies, CertificatePolicyExtension);\n\nclass Attribute extends AsnData {\r\n    constructor(...args) {\r\n        let raw;\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            raw = BufferSourceConverter.toArrayBuffer(args[0]);\r\n        }\r\n        else {\r\n            const type = args[0];\r\n            const values = Array.isArray(args[1]) ? args[1].map(o => BufferSourceConverter.toArrayBuffer(o)) : [];\r\n            raw = AsnConvert.serialize(new Attribute$1({ type, values }));\r\n        }\r\n        super(raw, Attribute$1);\r\n    }\r\n    onInit(asn) {\r\n        this.type = asn.type;\r\n        this.values = asn.values;\r\n    }\r\n}\n\nclass ChallengePasswordAttribute extends Attribute {\r\n    constructor(...args) {\r\n        var _a;\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n        }\r\n        else {\r\n            const value = new asnPkcs9.ChallengePassword({\r\n                printableString: args[0],\r\n            });\r\n            super(asnPkcs9.id_pkcs9_at_challengePassword, [AsnConvert.serialize(value)]);\r\n        }\r\n        (_a = this.password) !== null && _a !== void 0 ? _a : (this.password = \"\");\r\n    }\r\n    onInit(asn) {\r\n        super.onInit(asn);\r\n        if (this.values[0]) {\r\n            const value = AsnConvert.parse(this.values[0], asnPkcs9.ChallengePassword);\r\n            this.password = value.toString();\r\n        }\r\n    }\r\n}\n\nclass ExtensionsAttribute extends Attribute {\r\n    constructor(...args) {\r\n        var _a;\r\n        if (BufferSourceConverter.isBufferSource(args[0])) {\r\n            super(args[0]);\r\n        }\r\n        else {\r\n            const value = new asn1X509.Extensions(args[0]);\r\n            super(asnPkcs9.id_pkcs9_at_extensionRequest, [AsnConvert.serialize(value)]);\r\n        }\r\n        (_a = this.items) !== null && _a !== void 0 ? _a : (this.items = []);\r\n    }\r\n    onInit(asn) {\r\n        super.onInit(asn);\r\n        if (this.values[0]) {\r\n            const value = AsnConvert.parse(this.values[0], asn1X509.Extensions);\r\n            this.items = value.map(o => ExtensionFactory.create(AsnConvert.serialize(o)));\r\n        }\r\n    }\r\n}\n\nclass AttributeFactory {\r\n    static register(id, type) {\r\n        this.items.set(id, type);\r\n    }\r\n    static create(data) {\r\n        const attribute = new Attribute(data);\r\n        const Type = this.items.get(attribute.type);\r\n        if (Type) {\r\n            return new Type(data);\r\n        }\r\n        return attribute;\r\n    }\r\n}\r\nAttributeFactory.items = new Map();\n\nlet RsaAlgorithm = class RsaAlgorithm {\r\n    toAsnAlgorithm(alg) {\r\n        switch (alg.name.toLowerCase()) {\r\n            case \"rsassa-pkcs1-v1_5\":\r\n                if (alg.hash) {\r\n                    switch (alg.hash.name.toLowerCase()) {\r\n                        case \"sha-1\":\r\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha1WithRSAEncryption, parameters: null });\r\n                        case \"sha-256\":\r\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha256WithRSAEncryption, parameters: null });\r\n                        case \"sha-384\":\r\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha384WithRSAEncryption, parameters: null });\r\n                        case \"sha-512\":\r\n                            return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_sha512WithRSAEncryption, parameters: null });\r\n                    }\r\n                }\r\n                else {\r\n                    return new AlgorithmIdentifier({ algorithm: asn1Rsa.id_rsaEncryption, parameters: null });\r\n                }\r\n        }\r\n        return null;\r\n    }\r\n    toWebAlgorithm(alg) {\r\n        switch (alg.algorithm) {\r\n            case asn1Rsa.id_rsaEncryption:\r\n                return { name: \"RSASSA-PKCS1-v1_5\" };\r\n            case asn1Rsa.id_sha1WithRSAEncryption:\r\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-1\" } };\r\n            case asn1Rsa.id_sha256WithRSAEncryption:\r\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-256\" } };\r\n            case asn1Rsa.id_sha384WithRSAEncryption:\r\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-384\" } };\r\n            case asn1Rsa.id_sha512WithRSAEncryption:\r\n                return { name: \"RSASSA-PKCS1-v1_5\", hash: { name: \"SHA-512\" } };\r\n        }\r\n        return null;\r\n    }\r\n};\r\nRsaAlgorithm = __decorate([\r\n    injectable()\r\n], RsaAlgorithm);\r\ncontainer.registerSingleton(diAlgorithm, RsaAlgorithm);\n\nvar EcAlgorithm_1;\r\nconst idVersionOne = \"1.3.36.3.3.2.8.1.1\";\r\nconst idBrainpoolP160r1 = `${idVersionOne}.1`;\r\nconst idBrainpoolP160t1 = `${idVersionOne}.2`;\r\nconst idBrainpoolP192r1 = `${idVersionOne}.3`;\r\nconst idBrainpoolP192t1 = `${idVersionOne}.4`;\r\nconst idBrainpoolP224r1 = `${idVersionOne}.5`;\r\nconst idBrainpoolP224t1 = `${idVersionOne}.6`;\r\nconst idBrainpoolP256r1 = `${idVersionOne}.7`;\r\nconst idBrainpoolP256t1 = `${idVersionOne}.8`;\r\nconst idBrainpoolP320r1 = `${idVersionOne}.9`;\r\nconst idBrainpoolP320t1 = `${idVersionOne}.10`;\r\nconst idBrainpoolP384r1 = `${idVersionOne}.11`;\r\nconst idBrainpoolP384t1 = `${idVersionOne}.12`;\r\nconst idBrainpoolP512r1 = `${idVersionOne}.13`;\r\nconst idBrainpoolP512t1 = `${idVersionOne}.14`;\r\nconst brainpoolP160r1 = \"brainpoolP160r1\";\r\nconst brainpoolP160t1 = \"brainpoolP160t1\";\r\nconst brainpoolP192r1 = \"brainpoolP192r1\";\r\nconst brainpoolP192t1 = \"brainpoolP192t1\";\r\nconst brainpoolP224r1 = \"brainpoolP224r1\";\r\nconst brainpoolP224t1 = \"brainpoolP224t1\";\r\nconst brainpoolP256r1 = \"brainpoolP256r1\";\r\nconst brainpoolP256t1 = \"brainpoolP256t1\";\r\nconst brainpoolP320r1 = \"brainpoolP320r1\";\r\nconst brainpoolP320t1 = \"brainpoolP320t1\";\r\nconst brainpoolP384r1 = \"brainpoolP384r1\";\r\nconst brainpoolP384t1 = \"brainpoolP384t1\";\r\nconst brainpoolP512r1 = \"brainpoolP512r1\";\r\nconst brainpoolP512t1 = \"brainpoolP512t1\";\r\nconst ECDSA = \"ECDSA\";\r\nlet EcAlgorithm = EcAlgorithm_1 = class EcAlgorithm {\r\n    toAsnAlgorithm(alg) {\r\n        switch (alg.name.toLowerCase()) {\r\n            case ECDSA.toLowerCase():\r\n                if (\"hash\" in alg) {\r\n                    const hash = typeof alg.hash === \"string\" ? alg.hash : alg.hash.name;\r\n                    switch (hash.toLowerCase()) {\r\n                        case \"sha-1\":\r\n                            return asn1Ecc.ecdsaWithSHA1;\r\n                        case \"sha-256\":\r\n                            return asn1Ecc.ecdsaWithSHA256;\r\n                        case \"sha-384\":\r\n                            return asn1Ecc.ecdsaWithSHA384;\r\n                        case \"sha-512\":\r\n                            return asn1Ecc.ecdsaWithSHA512;\r\n                    }\r\n                }\r\n                else if (\"namedCurve\" in alg) {\r\n                    let parameters = \"\";\r\n                    switch (alg.namedCurve) {\r\n                        case \"P-256\":\r\n                            parameters = asn1Ecc.id_secp256r1;\r\n                            break;\r\n                        case \"K-256\":\r\n                            parameters = EcAlgorithm_1.SECP256K1;\r\n                            break;\r\n                        case \"P-384\":\r\n                            parameters = asn1Ecc.id_secp384r1;\r\n                            break;\r\n                        case \"P-521\":\r\n                            parameters = asn1Ecc.id_secp521r1;\r\n                            break;\r\n                        case brainpoolP160r1:\r\n                            parameters = idBrainpoolP160r1;\r\n                            break;\r\n                        case brainpoolP160t1:\r\n                            parameters = idBrainpoolP160t1;\r\n                            break;\r\n                        case brainpoolP192r1:\r\n                            parameters = idBrainpoolP192r1;\r\n                            break;\r\n                        case brainpoolP192t1:\r\n                            parameters = idBrainpoolP192t1;\r\n                            break;\r\n                        case brainpoolP224r1:\r\n                            parameters = idBrainpoolP224r1;\r\n                            break;\r\n                        case brainpoolP224t1:\r\n                            parameters = idBrainpoolP224t1;\r\n                            break;\r\n                        case brainpoolP256r1:\r\n                            parameters = idBrainpoolP256r1;\r\n                            break;\r\n                        case brainpoolP256t1:\r\n                            parameters = idBrainpoolP256t1;\r\n                            break;\r\n                        case brainpoolP320r1:\r\n                            parameters = idBrainpoolP320r1;\r\n                            break;\r\n                        case brainpoolP320t1:\r\n                            parameters = idBrainpoolP320t1;\r\n                            break;\r\n                        case brainpoolP384r1:\r\n                            parameters = idBrainpoolP384r1;\r\n                            break;\r\n                        case brainpoolP384t1:\r\n                            parameters = idBrainpoolP384t1;\r\n                            break;\r\n                        case brainpoolP512r1:\r\n                            parameters = idBrainpoolP512r1;\r\n                            break;\r\n                        case brainpoolP512t1:\r\n                            parameters = idBrainpoolP512t1;\r\n                            break;\r\n                    }\r\n                    if (parameters) {\r\n                        return new AlgorithmIdentifier({\r\n                            algorithm: asn1Ecc.id_ecPublicKey,\r\n                            parameters: AsnConvert.serialize(new asn1Ecc.ECParameters({ namedCurve: parameters })),\r\n                        });\r\n                    }\r\n                }\r\n        }\r\n        return null;\r\n    }\r\n    toWebAlgorithm(alg) {\r\n        switch (alg.algorithm) {\r\n            case asn1Ecc.id_ecdsaWithSHA1:\r\n                return { name: ECDSA, hash: { name: \"SHA-1\" } };\r\n            case asn1Ecc.id_ecdsaWithSHA256:\r\n                return { name: ECDSA, hash: { name: \"SHA-256\" } };\r\n            case asn1Ecc.id_ecdsaWithSHA384:\r\n                return { name: ECDSA, hash: { name: \"SHA-384\" } };\r\n            case asn1Ecc.id_ecdsaWithSHA512:\r\n                return { name: ECDSA, hash: { name: \"SHA-512\" } };\r\n            case asn1Ecc.id_ecPublicKey: {\r\n                if (!alg.parameters) {\r\n                    throw new TypeError(\"Cannot get required parameters from EC algorithm\");\r\n                }\r\n                const parameters = AsnConvert.parse(alg.parameters, asn1Ecc.ECParameters);\r\n                switch (parameters.namedCurve) {\r\n                    case asn1Ecc.id_secp256r1:\r\n                        return { name: ECDSA, namedCurve: \"P-256\" };\r\n                    case EcAlgorithm_1.SECP256K1:\r\n                        return { name: ECDSA, namedCurve: \"K-256\" };\r\n                    case asn1Ecc.id_secp384r1:\r\n                        return { name: ECDSA, namedCurve: \"P-384\" };\r\n                    case asn1Ecc.id_secp521r1:\r\n                        return { name: ECDSA, namedCurve: \"P-521\" };\r\n                    case idBrainpoolP160r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP160r1 };\r\n                    case idBrainpoolP160t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP160t1 };\r\n                    case idBrainpoolP192r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP192r1 };\r\n                    case idBrainpoolP192t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP192t1 };\r\n                    case idBrainpoolP224r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP224r1 };\r\n                    case idBrainpoolP224t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP224t1 };\r\n                    case idBrainpoolP256r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP256r1 };\r\n                    case idBrainpoolP256t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP256t1 };\r\n                    case idBrainpoolP320r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP320r1 };\r\n                    case idBrainpoolP320t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP320t1 };\r\n                    case idBrainpoolP384r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP384r1 };\r\n                    case idBrainpoolP384t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP384t1 };\r\n                    case idBrainpoolP512r1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP512r1 };\r\n                    case idBrainpoolP512t1:\r\n                        return { name: ECDSA, namedCurve: brainpoolP512t1 };\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n};\r\nEcAlgorithm.SECP256K1 = \"1.3.132.0.10\";\r\nEcAlgorithm = EcAlgorithm_1 = __decorate([\r\n    injectable()\r\n], EcAlgorithm);\r\ncontainer.registerSingleton(diAlgorithm, EcAlgorithm);\n\nclass AsnEcSignatureFormatter {\r\n    addPadding(pointSize, data) {\r\n        const bytes = BufferSourceConverter.toUint8Array(data);\r\n        const res = new Uint8Array(pointSize);\r\n        res.set(bytes, pointSize - bytes.length);\r\n        return res;\r\n    }\r\n    removePadding(data, positive = false) {\r\n        let bytes = BufferSourceConverter.toUint8Array(data);\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            if (!bytes[i]) {\r\n                continue;\r\n            }\r\n            bytes = bytes.slice(i);\r\n            break;\r\n        }\r\n        if (positive && bytes[0] > 127) {\r\n            const result = new Uint8Array(bytes.length + 1);\r\n            result.set(bytes, 1);\r\n            return result.buffer;\r\n        }\r\n        return bytes.buffer;\r\n    }\r\n    toAsnSignature(algorithm, signature) {\r\n        if (algorithm.name === \"ECDSA\") {\r\n            const namedCurve = algorithm.namedCurve;\r\n            const pointSize = AsnEcSignatureFormatter.namedCurveSize.get(namedCurve) || AsnEcSignatureFormatter.defaultNamedCurveSize;\r\n            const ecSignature = new ECDSASigValue();\r\n            const uint8Signature = BufferSourceConverter.toUint8Array(signature);\r\n            ecSignature.r = this.removePadding(uint8Signature.slice(0, pointSize), true);\r\n            ecSignature.s = this.removePadding(uint8Signature.slice(pointSize, pointSize + pointSize), true);\r\n            return AsnConvert.serialize(ecSignature);\r\n        }\r\n        return null;\r\n    }\r\n    toWebSignature(algorithm, signature) {\r\n        if (algorithm.name === \"ECDSA\") {\r\n            const ecSigValue = AsnConvert.parse(signature, ECDSASigValue);\r\n            const namedCurve = algorithm.namedCurve;\r\n            const pointSize = AsnEcSignatureFormatter.namedCurveSize.get(namedCurve) || AsnEcSignatureFormatter.defaultNamedCurveSize;\r\n            const r = this.addPadding(pointSize, this.removePadding(ecSigValue.r));\r\n            const s = this.addPadding(pointSize, this.removePadding(ecSigValue.s));\r\n            return combine(r, s);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nAsnEcSignatureFormatter.namedCurveSize = new Map();\r\nAsnEcSignatureFormatter.defaultNamedCurveSize = 32;\n\nconst idX25519 = \"1.3.101.110\";\r\nconst idX448 = \"1.3.101.111\";\r\nconst idEd25519 = \"1.3.101.112\";\r\nconst idEd448 = \"1.3.101.113\";\r\nlet EdAlgorithm = class EdAlgorithm {\r\n    toAsnAlgorithm(alg) {\r\n        let algorithm = null;\r\n        switch (alg.name.toLowerCase()) {\r\n            case \"eddsa\":\r\n                switch (alg.namedCurve.toLowerCase()) {\r\n                    case \"ed25519\":\r\n                        algorithm = idEd25519;\r\n                        break;\r\n                    case \"ed448\":\r\n                        algorithm = idEd448;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"ecdh-es\":\r\n                switch (alg.namedCurve.toLowerCase()) {\r\n                    case \"x25519\":\r\n                        algorithm = idX25519;\r\n                        break;\r\n                    case \"x448\":\r\n                        algorithm = idX448;\r\n                        break;\r\n                }\r\n        }\r\n        if (algorithm) {\r\n            return new AlgorithmIdentifier({\r\n                algorithm,\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n    toWebAlgorithm(alg) {\r\n        switch (alg.algorithm) {\r\n            case idEd25519:\r\n                return { name: \"EdDSA\", namedCurve: \"Ed25519\" };\r\n            case idEd448:\r\n                return { name: \"EdDSA\", namedCurve: \"Ed448\" };\r\n            case idX25519:\r\n                return { name: \"ECDH-ES\", namedCurve: \"X25519\" };\r\n            case idX448:\r\n                return { name: \"ECDH-ES\", namedCurve: \"X448\" };\r\n        }\r\n        return null;\r\n    }\r\n};\r\nEdAlgorithm = __decorate([\r\n    injectable()\r\n], EdAlgorithm);\r\ncontainer.registerSingleton(diAlgorithm, EdAlgorithm);\n\nclass Pkcs10CertificateRequest extends PemData {\r\n    constructor(param) {\r\n        if (PemData.isAsnEncoded(param)) {\r\n            super(param, CertificationRequest);\r\n        }\r\n        else {\r\n            super(param);\r\n        }\r\n        this.tag = \"CERTIFICATE REQUEST\";\r\n    }\r\n    onInit(asn) {\r\n        this.tbs = AsnConvert.serialize(asn.certificationRequestInfo);\r\n        this.publicKey = new PublicKey(asn.certificationRequestInfo.subjectPKInfo);\r\n        const algProv = container.resolve(diAlgorithmProvider);\r\n        this.signatureAlgorithm = algProv.toWebAlgorithm(asn.signatureAlgorithm);\r\n        this.signature = asn.signature;\r\n        this.attributes = asn.certificationRequestInfo.attributes\r\n            .map(o => AttributeFactory.create(AsnConvert.serialize(o)));\r\n        const extensions = this.getAttribute(id_pkcs9_at_extensionRequest);\r\n        this.extensions = [];\r\n        if (extensions instanceof ExtensionsAttribute) {\r\n            this.extensions = extensions.items;\r\n        }\r\n        this.subjectName = new Name(asn.certificationRequestInfo.subject);\r\n        this.subject = this.subjectName.toString();\r\n    }\r\n    getAttribute(type) {\r\n        for (const attr of this.attributes) {\r\n            if (attr.type === type) {\r\n                return attr;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getAttributes(type) {\r\n        return this.attributes.filter(o => o.type === type);\r\n    }\r\n    getExtension(type) {\r\n        for (const ext of this.extensions) {\r\n            if (ext.type === type) {\r\n                return ext;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getExtensions(type) {\r\n        return this.extensions.filter(o => o.type === type);\r\n    }\r\n    async verify(crypto = cryptoProvider.get()) {\r\n        const algorithm = { ...this.publicKey.algorithm, ...this.signatureAlgorithm };\r\n        const publicKey = await this.publicKey.export(algorithm, [\"verify\"], crypto);\r\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\r\n        let signature = null;\r\n        for (const signatureFormatter of signatureFormatters) {\r\n            signature = signatureFormatter.toWebSignature(algorithm, this.signature);\r\n            if (signature) {\r\n                break;\r\n            }\r\n        }\r\n        if (!signature) {\r\n            throw Error(\"Cannot convert WebCrypto signature value to ASN.1 format\");\r\n        }\r\n        const ok = await crypto.subtle.verify(this.signatureAlgorithm, publicKey, signature, this.tbs);\r\n        return ok;\r\n    }\r\n}\n\nclass Pkcs10CertificateRequestGenerator {\r\n    static async create(params, crypto = cryptoProvider.get()) {\r\n        if (!params.keys.privateKey) {\r\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\r\n        }\r\n        if (!params.keys.publicKey) {\r\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\r\n        }\r\n        const spki = await crypto.subtle.exportKey(\"spki\", params.keys.publicKey);\r\n        const asnReq = new CertificationRequest({\r\n            certificationRequestInfo: new CertificationRequestInfo({\r\n                subjectPKInfo: AsnConvert.parse(spki, SubjectPublicKeyInfo),\r\n            }),\r\n        });\r\n        if (params.name) {\r\n            const name = params.name instanceof Name\r\n                ? params.name\r\n                : new Name(params.name);\r\n            asnReq.certificationRequestInfo.subject = AsnConvert.parse(name.toArrayBuffer(), Name$1);\r\n        }\r\n        if (params.attributes) {\r\n            for (const o of params.attributes) {\r\n                asnReq.certificationRequestInfo.attributes.push(AsnConvert.parse(o.rawData, Attribute$1));\r\n            }\r\n        }\r\n        if (params.extensions && params.extensions.length) {\r\n            const attr = new Attribute$1({ type: id_pkcs9_at_extensionRequest });\r\n            const extensions = new Extensions();\r\n            for (const o of params.extensions) {\r\n                extensions.push(AsnConvert.parse(o.rawData, Extension$1));\r\n            }\r\n            attr.values.push(AsnConvert.serialize(extensions));\r\n            asnReq.certificationRequestInfo.attributes.push(attr);\r\n        }\r\n        const signingAlgorithm = { ...params.signingAlgorithm, ...params.keys.privateKey.algorithm };\r\n        const algProv = container.resolve(diAlgorithmProvider);\r\n        asnReq.signatureAlgorithm = algProv.toAsnAlgorithm(signingAlgorithm);\r\n        const tbs = AsnConvert.serialize(asnReq.certificationRequestInfo);\r\n        const signature = await crypto.subtle.sign(signingAlgorithm, params.keys.privateKey, tbs);\r\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\r\n        let asnSignature = null;\r\n        for (const signatureFormatter of signatureFormatters) {\r\n            asnSignature = signatureFormatter.toAsnSignature(signingAlgorithm, signature);\r\n            if (asnSignature) {\r\n                break;\r\n            }\r\n        }\r\n        if (!asnSignature) {\r\n            throw Error(\"Cannot convert WebCrypto signature value to ASN.1 format\");\r\n        }\r\n        asnReq.signature = asnSignature;\r\n        return new Pkcs10CertificateRequest(AsnConvert.serialize(asnReq));\r\n    }\r\n}\n\nclass X509Certificates extends Array {\r\n    constructor(param) {\r\n        super();\r\n        if (PemData.isAsnEncoded(param)) {\r\n            this.import(param);\r\n        }\r\n        else if (param instanceof X509Certificate) {\r\n            this.push(param);\r\n        }\r\n        else if (Array.isArray(param)) {\r\n            for (const item of param) {\r\n                this.push(item);\r\n            }\r\n        }\r\n    }\r\n    export(format) {\r\n        const signedData = new asn1Cms.SignedData();\r\n        signedData.certificates = new asn1Cms.CertificateSet(this.map(o => new asn1Cms.CertificateChoices({\r\n            certificate: AsnConvert.parse(o.rawData, Certificate)\r\n        })));\r\n        const cms = new asn1Cms.ContentInfo({\r\n            contentType: asn1Cms.id_signedData,\r\n            content: AsnConvert.serialize(signedData),\r\n        });\r\n        const raw = AsnConvert.serialize(cms);\r\n        if (format === \"raw\") {\r\n            return raw;\r\n        }\r\n        return this.toString(format);\r\n    }\r\n    import(data) {\r\n        const raw = PemData.toArrayBuffer(data);\r\n        const cms = AsnConvert.parse(raw, asn1Cms.ContentInfo);\r\n        if (cms.contentType !== asn1Cms.id_signedData) {\r\n            throw new TypeError(\"Cannot parse CMS package. Incoming data is not a SignedData object.\");\r\n        }\r\n        const signedData = AsnConvert.parse(cms.content, asn1Cms.SignedData);\r\n        this.clear();\r\n        for (const item of signedData.certificates || []) {\r\n            if (item.certificate) {\r\n                this.push(new X509Certificate(item.certificate));\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        while (this.pop()) {\r\n        }\r\n    }\r\n    toString(format = \"pem\") {\r\n        const raw = this.export(\"raw\");\r\n        switch (format) {\r\n            case \"pem\":\r\n                return PemConverter.encode(raw, \"CMS\");\r\n            case \"hex\":\r\n                return Convert.ToHex(raw);\r\n            case \"base64\":\r\n                return Convert.ToBase64(raw);\r\n            case \"base64url\":\r\n                return Convert.ToBase64Url(raw);\r\n            default:\r\n                throw TypeError(\"Argument 'format' is unsupported value\");\r\n        }\r\n    }\r\n}\n\nclass X509ChainBuilder {\r\n    constructor(params = {}) {\r\n        this.certificates = [];\r\n        if (params.certificates) {\r\n            this.certificates = params.certificates;\r\n        }\r\n    }\r\n    async build(cert) {\r\n        const chain = new X509Certificates(cert);\r\n        let current = cert;\r\n        while (current = await this.findIssuer(current)) {\r\n            const thumbprint = await current.getThumbprint();\r\n            for (const item of chain) {\r\n                const thumbprint2 = await item.getThumbprint();\r\n                if (isEqual(thumbprint, thumbprint2)) {\r\n                    throw new Error(\"Cannot build a certificate chain. Circular dependency.\");\r\n                }\r\n            }\r\n            chain.push(current);\r\n        }\r\n        return chain;\r\n    }\r\n    async findIssuer(cert) {\r\n        if (!await cert.isSelfSigned()) {\r\n            const akiExt = cert.getExtension(asn1X509.id_ce_authorityKeyIdentifier);\r\n            for (const item of this.certificates) {\r\n                if (item.subject !== cert.issuer) {\r\n                    continue;\r\n                }\r\n                if (akiExt) {\r\n                    if (akiExt.keyId) {\r\n                        const skiExt = item.getExtension(asn1X509.id_ce_subjectKeyIdentifier);\r\n                        if (skiExt && skiExt.keyId !== akiExt.keyId) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    else if (akiExt.certId) {\r\n                        const sanExt = item.getExtension(asn1X509.id_ce_subjectAltName);\r\n                        if (sanExt &&\r\n                            !(akiExt.certId.serialNumber === item.serialNumber && isEqual(AsnConvert.serialize(akiExt.certId.name), AsnConvert.serialize(sanExt)))) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (!await cert.verify({\r\n                    publicKey: await item.publicKey.export(),\r\n                    signatureOnly: true,\r\n                })) {\r\n                    continue;\r\n                }\r\n                return item;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\nclass X509CertificateGenerator {\r\n    static async createSelfSigned(params, crypto = cryptoProvider.get()) {\r\n        if (!params.keys.privateKey) {\r\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\r\n        }\r\n        if (!params.keys.publicKey) {\r\n            throw new Error(\"Bad field 'keys' in 'params' argument. 'privateKey' is empty\");\r\n        }\r\n        return this.create({\r\n            serialNumber: params.serialNumber,\r\n            subject: params.name,\r\n            issuer: params.name,\r\n            notBefore: params.notBefore,\r\n            notAfter: params.notAfter,\r\n            publicKey: params.keys.publicKey,\r\n            signingKey: params.keys.privateKey,\r\n            signingAlgorithm: params.signingAlgorithm,\r\n            extensions: params.extensions,\r\n        }, crypto);\r\n    }\r\n    static async create(params, crypto = cryptoProvider.get()) {\r\n        var _a;\r\n        const spki = await crypto.subtle.exportKey(\"spki\", params.publicKey);\r\n        const asnX509 = new asn1X509.Certificate({\r\n            tbsCertificate: new asn1X509.TBSCertificate({\r\n                version: asn1X509.Version.v3,\r\n                serialNumber: Convert.FromHex(params.serialNumber),\r\n                validity: new asn1X509.Validity({\r\n                    notBefore: params.notBefore,\r\n                    notAfter: params.notAfter,\r\n                }),\r\n                extensions: new asn1X509.Extensions(((_a = params.extensions) === null || _a === void 0 ? void 0 : _a.map(o => AsnConvert.parse(o.rawData, asn1X509.Extension))) || []),\r\n                subjectPublicKeyInfo: AsnConvert.parse(spki, asn1X509.SubjectPublicKeyInfo),\r\n            }),\r\n        });\r\n        if (params.subject) {\r\n            const name = params.subject instanceof Name\r\n                ? params.subject\r\n                : new Name(params.subject);\r\n            asnX509.tbsCertificate.subject = AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name);\r\n        }\r\n        if (params.issuer) {\r\n            const name = params.issuer instanceof Name\r\n                ? params.issuer\r\n                : new Name(params.issuer);\r\n            asnX509.tbsCertificate.issuer = AsnConvert.parse(name.toArrayBuffer(), asn1X509.Name);\r\n        }\r\n        const signingAlgorithm = { ...params.signingAlgorithm, ...params.signingKey.algorithm };\r\n        const algProv = container.resolve(diAlgorithmProvider);\r\n        asnX509.tbsCertificate.signature = asnX509.signatureAlgorithm = algProv.toAsnAlgorithm(signingAlgorithm);\r\n        const tbs = AsnConvert.serialize(asnX509.tbsCertificate);\r\n        const signature = await crypto.subtle.sign(signingAlgorithm, params.signingKey, tbs);\r\n        const signatureFormatters = container.resolveAll(diAsnSignatureFormatter).reverse();\r\n        let asnSignature = null;\r\n        for (const signatureFormatter of signatureFormatters) {\r\n            asnSignature = signatureFormatter.toAsnSignature(signingAlgorithm, signature);\r\n            if (asnSignature) {\r\n                break;\r\n            }\r\n        }\r\n        if (!asnSignature) {\r\n            throw Error(\"Cannot convert ASN.1 signature value to WebCrypto format\");\r\n        }\r\n        asnX509.signatureValue = asnSignature;\r\n        return new X509Certificate(AsnConvert.serialize(asnX509));\r\n    }\r\n}\n\nExtensionFactory.register(asn1X509.id_ce_basicConstraints, BasicConstraintsExtension);\r\nExtensionFactory.register(asn1X509.id_ce_extKeyUsage, ExtendedKeyUsageExtension);\r\nExtensionFactory.register(asn1X509.id_ce_keyUsage, KeyUsagesExtension);\r\nExtensionFactory.register(asn1X509.id_ce_subjectKeyIdentifier, SubjectKeyIdentifierExtension);\r\nExtensionFactory.register(asn1X509.id_ce_authorityKeyIdentifier, AuthorityKeyIdentifierExtension);\r\nExtensionFactory.register(asn1X509.id_ce_subjectAltName, SubjectAlternativeNameExtension);\r\nAttributeFactory.register(asnPkcs9.id_pkcs9_at_challengePassword, ChallengePasswordAttribute);\r\nAttributeFactory.register(asnPkcs9.id_pkcs9_at_extensionRequest, ExtensionsAttribute);\r\ncontainer.registerSingleton(diAsnSignatureFormatter, AsnDefaultSignatureFormatter);\r\ncontainer.registerSingleton(diAsnSignatureFormatter, AsnEcSignatureFormatter);\r\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-256\", 32);\r\nAsnEcSignatureFormatter.namedCurveSize.set(\"K-256\", 32);\r\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-384\", 48);\r\nAsnEcSignatureFormatter.namedCurveSize.set(\"P-521\", 66);\n\nexport { AlgorithmProvider, AsnData, AsnDefaultSignatureFormatter, AsnEcSignatureFormatter, Attribute, AttributeFactory, AuthorityKeyIdentifierExtension, BasicConstraintsExtension, CertificatePolicyExtension, ChallengePasswordAttribute, CryptoProvider, EcAlgorithm, EdAlgorithm, ExtendedKeyUsageExtension, Extension, ExtensionFactory, ExtensionsAttribute, KeyUsageFlags, KeyUsagesExtension, Name, NameIdentifier, OtherName, PemConverter, Pkcs10CertificateRequest, Pkcs10CertificateRequestGenerator, PublicKey, RsaAlgorithm, SubjectAlternativeNameExtension, SubjectKeyIdentifierExtension, X509Certificate, X509CertificateGenerator, X509Certificates, X509ChainBuilder, cryptoProvider, diAlgorithm, diAlgorithmProvider, diAsnSignatureFormatter, idEd25519, idEd448, idX25519, idX448 };\n","import { inflate } from \"pako\";\nimport { log } from \"../log\";\n\n// Import support for x509 certificates\nimport * as x509 from \"@peculiar/x509\";\n\n// **************************************\n// Support for the Trusted Lists\n// **************************************\n\n// Official EU Trusted List from the Spanish Ministry of Health\n// https://cvd-gcp.sanidad.gob.es/cvdcovid-gcp/spth/listarCertificados\n// To avoid overloading the official server, we download the list periodically\n// to a server and 'bake' it into the app\n// This means that all apps use the list from our server (typically a CDN) and the \n// official server is only used periodically once for all apps\nimport spanish_tl from '../json/spanish_tl.json'\n\n// The list of UK keys (before they were integrated in the EU Trusted List)\n// Eventually it will not be needed\n// https://covid-status.service.nhsx.nhs.uk/pubkeys/keys.json\nimport ukRawKeys from \"../json/uk_jwk_keys.json\"\n\n// This is a list with the Pre-production keys. The app gives a warning message if it\n// verifies successfully a certificate signed with one of these keys\nimport prePublicKeys from \"../json/pre_jwk_keys.json\"\n\n// The list of value sets for verification, downloaded periodically to the server from\n// the Ministry of Health of Sweden\nimport valueSets from \"../json/value-sets.json\"\n\n// Converts a Public key in PEM format into a Subtle Crypto native key\nasync function importKey(certPem) {\n    // Decode the PEM into a x509 certificate\n    const cert = new x509.X509Certificate(certPem);\n\n    // Extract the Public Key and try to convert it first to EC and then to RSA\n    const pubk = cert.publicKey.rawData\n    var publicKey\n    try {\n        publicKey = await window.crypto.subtle.importKey(\n            \"spki\",\n            pubk,\n            {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\"\n            },\n            true,\n            [\"verify\"]\n        );\n        \n    } catch (error) {\n        try {\n            publicKey = await window.crypto.subtle.importKey(\n                \"spki\",\n                pubk,\n                {\n                    name: \"RSA-PSS\",\n                    hash: \"SHA-256\"\n                },\n                true,\n                [\"verify\"]\n            );\n    \n        } catch (error) {\n            throw \"Key is neither RSA not ECDSA key type\"\n        }\n    }\n    return publicKey\n}\n\n// Search for a public key in the several trusted lists\nasync function getTrustedKey(kid) {\n\n    // Return this structure in case we do not find any matching key\n    let undefinedKey = {\n        kid: kid,\n        publicKey: undefined,\n        list: undefined,\n        format: undefined\n    }\n\n    if (!kid) { log.error(\"kid is undefined\"); return undefinedKey; }\n    \n    // First, try to get it from the PRODUCTION EU list\n    for (let i = 0; i < spanish_tl.length; i++) {\n        if (spanish_tl[i].kid == kid) {\n            console.log(`kid \"${kid}\" found in EU_PRO trusted list`)\n            let certPem = spanish_tl[i][\"certificado\"]\n            let pubKey = await importKey(certPem)\n            // Return the key if we successfully imported it\n            if (pubKey) {\n                return {\n                    kid: kid,\n                    publicKey: pubKey,\n                    list: \"EU_PRO\",\n                    format: \"native\"\n                }    \n            }\n        }\n    }\n    console.warn(`kid \"${kid}\" not found in EU_PRO trusted list`)\n\n    // Now check in the PRODUCTION listfrom the UK\n    for (let i = 0; i < ukRawKeys.length; i++) {\n        if (ukRawKeys[i].kid == kid) {\n            console.log(`kid \"${kid}\" found in UK_PRO trusted list`)\n            return {\n                kid: kid,\n                publicKey: ukRawKeys[i].publicKey,\n                list: \"UK_PRO\",\n                format: \"spki\"\n            }\n        }\n    }\n    console.warn(`kid \"${kid}\" not found in UK_PRO trusted list`)\n\n    // And finally in the PREPRODUCTION list\n    if (prePublicKeys.includes(kid)) {\n        console.warn(`kid \"${kid}\" found in PREPRODUCTION trusted list`)\n        return {\n            kid: kid,\n            publicKey: undefined,\n            list: \"EU_PREPRODUCTION\",\n            format: undefined\n        }\n    }\n    log.error(`KEY ${kid} not found in any Trusted List`)\n\n    // Key not found in any list. return the undefined key structure\n    return undefinedKey;\n\n}\n\n// Translate a value in the certificate using the Value Sets\nfunction getFromValueSet (key, valueSetName) {\n    if (!key) { return \"N/A\" }\n\n    // Get the specified value set type\n    let valueSet = valueSets[valueSetName];\n    if (!valueSet) { return key; }\n\n    // Get the set of values for the specified Value Set\n    let values = valueSet[\"valueSetValues\"];\n    if (!values) { return key; }\n\n    // Get the value corresponding to the key in the certificate\n    let value = values[key];\n    if (!value) { return key; }\n\n    // Get the display value associated to the coded value\n    return value[\"display\"];\n}\n\n\n//********************************\n// CRYPTO KEY SUPPORT\n//********************************\n\nconst KEYPAIR = 1;\nconst SYMMETRIC = 2;\n\n/*\nConvert  an ArrayBuffer into a string\nfrom https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n*/\nfunction ab2str(buf) {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n}\n\n/*\nConvert a string into an ArrayBuffer\nfrom https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n*/\nfunction str2ab(str) {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\n// Utility class for managing Crypto Subtle native keys\nclass DGCKey {\n    constructor() { }\n\n    // Import from Subject PKI format (eg. the UK Trusted List)\n    static async fromSPKI(SPKI) {\n        const binaryDerString = window.atob(SPKI);\n        // convert from a binary string to an ArrayBuffer\n        const binaryDer = str2ab(binaryDerString);\n\n        const extractable = true;\n        const format = \"spki\";\n\n        let algorithm = {\n            name: \"ECDSA\",\n            namedCurve: \"P-256\",\n        };\n\n        let key = await crypto.subtle.importKey(\n            format,\n            binaryDer,\n            algorithm,\n            extractable,\n            [\"verify\"]\n        );\n\n        return key;\n    }\n\n    // Import from JWK (JSON Web Key) format\n    static async fromJWK(jwk) {\n        // Create a CryptoKey from JWK format\n\n        // Fix the \"use\" field for malformed keys from Sweden\n        jwk[\"use\"] = \"sig\";\n        const extractable = true;\n        const format = \"jwk\";\n        const keyType = jwk[\"kty\"];\n        let algorithm;\n\n        if (keyType == \"EC\") {\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\",\n            };\n        } else if (keyType == \"RSA\") {\n            algorithm = {\n                name: \"RSA-PSS\",\n                hash: \"SHA-256\",\n            };\n        } else {\n            throw new Error(`Invalid key type specified: ${jwk[\"kty\"]}`);\n        }\n\n        // If \"d\" is in the JWK, then it is a private key for signing.\n        // Otherwise it is a prublic key for verification\n        let keyUsages = jwk[\"d\"] ? [\"sign\"] : [\"verify\"];\n\n        let key = await crypto.subtle.importKey(\n            format,\n            jwk,\n            algorithm,\n            extractable,\n            keyUsages\n        );\n\n        return key;\n    }\n\n    // Generate an Elliptic Curve key pair\n    static async generateECDSAKeyPair() {\n        // Create an ECDSA/P-256 CryptoKey\n\n        const extractable = true;\n        const algorithm = {\n            name: \"ECDSA\",\n            namedCurve: \"P-256\",\n        };\n        const keyUsages = [\"sign\", \"verify\"];\n\n        // Ask browser to create a key pair with the P256 curve\n        let keyPair = await crypto.subtle.generateKey(\n            algorithm,\n            extractable,\n            keyUsages\n        );\n\n        return keyPair;\n    }\n\n    // Generate a symmetric encryption key\n    static async generateEncryptionKey() {\n        // Generate a symmetric key for encrypting credentials when in transit\n        // The credentials (and other material) will be encrypted when sent to the\n        // Secure Messaging Server\n\n        // Ask browser to create a symmetric key\n        let key = await crypto.subtle.generateKey(\n            {\n                name: \"AES-GCM\",\n                length: 256,\n            },\n            true,\n            [\"encrypt\", \"decrypt\"]\n        );\n\n        return key;\n    }\n\n    static async exportToJWK(key) {\n        // Convert a key from CryptoKey (native) format to JWK format\n\n        // Export the key to the JWK format (see spec for details)\n        let keyJWK = await crypto.subtle.exportKey(\"jwk\", key);\n        return keyJWK;\n    }\n\n    static async exportToPEM(key) {\n        // Convert a key from CryptoKey (native) format to PEM format\n\n        let keyJWK = await crypto.subtle.exportKey(\"spki\", key);\n        return keyJWK;\n    }\n\n    static async importFromPEMRaw(keyPEMString) {\n        // base64 decode the string to get the binary data\n        const binaryDerString = window.atob(keyPEMString);\n        console.log(binaryDerString);\n        // convert from a binary string to an ArrayBuffer\n        const binaryDer = str2ab(binaryDerString);\n        console.log(binaryDer);\n\n        // Import a public key\n        let key = await crypto.subtle.importKey(\n            \"spki\",\n            binaryDer,\n            {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\",\n            },\n            true,\n            [\"verify\"]\n        );\n\n        return key;\n    }\n\n    static async sign(key, bytes) {\n        if (key.type != \"private\") {\n            throw new Error(\"Not a private key\");\n        }\n\n        let signature = await window.crypto.subtle.sign(\n            {\n                name: \"ECDSA\",\n                hash: { name: \"SHA-256\" },\n            },\n            key,\n            bytes\n        );\n\n        return signature;\n    }\n\n    // Verify a signature, either with EC or RSA key\n    static async verify(key, signature, bytes) {\n\n        // Accept only Public Keys\n        if (key.type != \"public\") {\n            console.log(key)\n            throw new Error(\"Not a public key\");\n        }\n\n        let algo = key.algorithm\n        console.log(\"Key algorithm\", algo)\n\n        // Set the proper parameters depending on algorithm used when signing\n        if (key.algorithm.name === \"RSA-PSS\") {\n            algo = {\n                name: \"RSA-PSS\",\n                saltLength: 32,\n            }\n        } else if (key.algorithm.name === \"ECDSA\") {\n            algo = {       \n                name: \"ECDSA\",\n                hash: \"SHA-256\"         \n            }\n        } else {\n            throw `Invalid signature algorithm: ${key.algorithm.name}`;\n        }\n\n        // Verify the signature. Returns undefined if it fails\n        let result\n        try {\n            result = await window.crypto.subtle.verify(\n                algo,\n                key,\n                signature,\n                bytes\n            );\n        } catch (error) {\n            throw `Verification of payload failed: ${error}`;\n        }\n\n        console.log(\"Result:\", result);\n        return result;\n    }\n\n    // Encrypt a byte array message with a symmetric key\n    static async encryptMessage(key, bytes) {\n        if (key.type != \"secret\") {\n            throw new Error(\"Not a symmetric encryption key\");\n        }\n\n        // Generate the iv\n        // The iv must never be reused with a given key.\n        let iv = crypto.getRandomValues(new Uint8Array(12));\n\n        // Perform the actual encryption\n        let ciphertext = await crypto.subtle.encrypt(\n            {\n                name: \"AES-GCM\",\n                iv: iv,\n            },\n            key,\n            bytes\n        );\n\n        // Return the resulting ArrayBuffer, together with the iv\n        return { iv: iv, ciphertext: ciphertext };\n    }\n\n    static async decryptMessage(key, iv, ciphertext) {\n        if (key.type != \"secret\") {\n            throw new Error(\"Not a symmetric encryption key\");\n        }\n\n        // Perform the decryption of the received ArrayBuffer\n        let decrypted = await window.crypto.subtle.decrypt(\n            {\n                name: \"AES-GCM\",\n                iv: iv,\n            },\n            key,\n            ciphertext\n        );\n\n        // Return the byte array\n        return decrypted;\n    }\n}\n\n\n//********************************\n// AUXILIARY FUNCTIONS\n//********************************\n\n\nfunction uint(bytes) {\n    // Convert a byte array of 2 or 4 bytes to an unsigned integer\n    // The byte array is in network byte order\n\n    // Get the first byte\n    var value = bytes[0];\n\n    // If there are more bytes, iterate the byte array\n    var i = bytes.length;\n    for (let j = 1; j < i; j = j + 1) {\n        value = value * 256;\n        value = value + bytes[j];\n    }\n\n    return value;\n}\n\n// The character codes for the ranges\nvar aCode = \"a\".charCodeAt(0);\nvar fCode = \"f\".charCodeAt(0);\nvar ACode = \"A\".charCodeAt(0);\nvar FCode = \"F\".charCodeAt(0);\nvar zeroCode = \"0\".charCodeAt(0);\nvar nineCode = \"9\".charCodeAt(0);\n\nfunction charValue(char) {\n    // Given a character, return the hex value\n    // \"0\" -> 0\n    // \"a\" or \"A\" -> 10\n    // \"f\" or \"F\" -> 15\n    var c = char.charCodeAt(0);\n\n    if (c >= aCode && c <= fCode) {\n        return c - aCode + 10;\n    }\n\n    if (c >= ACode && c <= FCode) {\n        return c - ACode + 10;\n    }\n\n    if (c >= zeroCode && c <= nineCode) {\n        return c - zeroCode;\n    }\n}\n\nfunction hexStr2bytes(hexString) {\n    // Converts a string of hex values to a byte array (Uint8Array)\n    // The input string should have 2 hex characters for each byte (even size)\n    // The string should not start by 0X or any other prefix\n    // Example: 'd28449a2012704'\n\n    // Check if there is an even number of characters\n    if (hexString.length % 2 > 0) {\n        console.log(\"ERROR: Hex String length incorrect\");\n        return undefined;\n    }\n\n    // Create a byte array with one byte for each two input characters\n    var array = new Uint8Array(hexString.length / 2);\n\n    // Iterate for each pair of input characters\n    for (let i = 0; i < hexString.length; i = i + 2) {\n        // get the integer value for each of the two characters\n        var code1 = charValue(hexString[i]);\n        var code2 = charValue(hexString[i + 1]);\n\n        // code1 is the most significant byte, code2 the least\n\n        // Set the array entry. Index is i/2\n        array[i / 2] = code1 * 16 + code2;\n    }\n\n    return array;\n}\n\nconst lutArray = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n];\n\nfunction bytes2hexStr(bytes) {\n    // Convert a byte array to a hex string\n    // Each byte is converted into two hex chars representing the byte\n\n    // Initialize the hex string\n    var hexStr = \"\";\n\n    // Iterate the input byte array\n    for (let i = 0; i < bytes.length; i = i + 1) {\n        // Get the value of the 4 most significant bits\n        nibHigh = bytes[i] >>> 4;\n        // Get the value of the 4 least significant bits\n        nibLow = bytes[i] & 0x0f;\n\n        // Concatenate the two chars to the whole hex string\n        hexStr = hexStr + lutArray[nibHigh] + lutArray[nibLow];\n    }\n\n    return hexStr;\n}\n\nconst baseSize = 45;\nconst baseSizeSquared = 2025;\nconst chunkSize = 2;\nconst encodedChunkSize = 3;\nconst smallEncodedChunkSize = 2;\nconst byteSize = 256;\n\nconst encoding = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \" \",\n    \"$\",\n    \"%\",\n    \"*\",\n    \"+\",\n    \"-\",\n    \".\",\n    \"/\",\n    \":\",\n];\n\nvar decoding;\n\nfunction encodeB45(byteArrayArg) {\n    if (byteArrayArg === null || byteArrayArg === undefined)\n        throw new Error(\"byteArrayArg is null or undefined.\");\n\n    //TODO check is array-like?\n\n    const wholeChunkCount = Math.trunc(byteArrayArg.length / chunkSize);\n    const resultSize =\n        wholeChunkCount * encodedChunkSize +\n        (byteArrayArg.length % chunkSize === 1 ? smallEncodedChunkSize : 0);\n\n    if (resultSize === 0) return \"\";\n\n    const result = new Array(resultSize);\n    var resultIndex = 0;\n    const wholeChunkLength = wholeChunkCount * chunkSize;\n    for (let i = 0; i < wholeChunkLength;) {\n        const value = byteArrayArg[i++] * byteSize + byteArrayArg[i++];\n        result[resultIndex++] = encoding[value % baseSize];\n        result[resultIndex++] = encoding[Math.trunc(value / baseSize) % baseSize];\n        result[resultIndex++] =\n            encoding[Math.trunc(value / baseSizeSquared) % baseSize];\n    }\n\n    if (byteArrayArg.length % chunkSize === 0) return result.join(\"\");\n\n    result[result.length - 2] =\n        encoding[byteArrayArg[byteArrayArg.length - 1] % baseSize];\n    result[result.length - 1] =\n        byteArrayArg[byteArrayArg.length - 1] < baseSize\n            ? encoding[0]\n            : encoding[\n            Math.trunc(byteArrayArg[byteArrayArg.length - 1] / baseSize) %\n            baseSize\n            ];\n\n    return result.join(\"\");\n}\n\nfunction decodeB45(utf8StringArg) {\n    if (utf8StringArg === null || utf8StringArg === undefined)\n        throw new Error(\"utf8StringArg is null or undefined.\");\n\n    if (utf8StringArg.length === 0) return [];\n\n    var remainderSize = utf8StringArg.length % encodedChunkSize;\n    if (remainderSize === 1)\n        throw new Error(\"utf8StringArg has incorrect length.\");\n\n    if (decoding === undefined) {\n        decoding = {};\n        for (let i = 0; i < encoding.length; ++i) decoding[encoding[i]] = i;\n    }\n\n    const buffer = new Array(utf8StringArg.length);\n    for (let i = 0; i < utf8StringArg.length; ++i) {\n        const found = decoding[utf8StringArg[i]];\n        if (found === undefined)\n            throw new Error(\"Invalid character at position \".concat(i).concat(\".\"));\n        buffer[i] = found;\n    }\n\n    const wholeChunkCount = Math.trunc(buffer.length / encodedChunkSize);\n    var result = new Array(\n        wholeChunkCount * chunkSize + (remainderSize === chunkSize ? 1 : 0)\n    );\n    var resultIndex = 0;\n    const wholeChunkLength = wholeChunkCount * encodedChunkSize;\n    for (let i = 0; i < wholeChunkLength;) {\n        const val =\n            buffer[i++] + baseSize * buffer[i++] + baseSizeSquared * buffer[i++];\n        result[resultIndex++] = Math.trunc(val / byteSize); //result is always in the range 0-255 - % ByteSize omitted.\n        result[resultIndex++] = val % byteSize;\n    }\n\n    if (remainderSize === 0) return result;\n\n    result[result.length - 1] =\n        buffer[buffer.length - 2] + baseSize * buffer[buffer.length - 1]; //result is always in the range 0-255 - % ByteSize omitted.\n    return result;\n}\n\nfunction decodeToUtf8String(utf8StringArg) {\n    var data = decodeB45(utf8StringArg);\n\n    var str = \"\";\n    var count = data.length;\n    for (let i = 0; i < count; ++i) str += String.fromCharCode(data[i]);\n\n    return str;\n}\n\n//********************************\n// CBOR/COSE/CWT ENCODE/DECODE SUPPORT\n//********************************\n\n// CBOR tags to assign semantic to the data structures\nconst CBOR_Magic_ID = 55799; // Magic tag number that identifies the data as CBOR-encoded\nconst COSE_Sign = 98; // COSE Signed Data Object\nconst COSE_Sign1 = 18; // COSE Single Signer Data Object\n\nconst MT_INTEGER = 0;\nconst MT_NEGINTEGER = 1;\nconst MT_BYTES = 2;\nconst MT_UTF8 = 3;\nconst MT_ARRAY = 4;\nconst MT_MAP = 5;\nconst MT_TAG = 6;\nconst MT_FLOAT = 7;\n\nconst CWT_ALG = 1;\nconst CWT_KID = 4;\n\n// For converting from string to byte array (Uint8Array) in UTF-8 and viceversa\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder();\n\n// Mapping from COSE Tags to COSE algorithm name\nvar CWT_ALG_TO_JWT = new Map();\nCWT_ALG_TO_JWT.set(-7, \"ES256\");\nCWT_ALG_TO_JWT.set(-37, \"RSA\");\n\nexport class CWT {\n    static POW_2_24 = 5.960464477539063e-8\n    static POW_2_32 = 4294967296\n    static POW_2_53 = Number.MAX_SAFE_INTEGER\n\n    static encode(value) {\n        // Allocate a buffer to hold the binary encoding\n        // Its size starts small and expands as needed (prepareWrite)\n        var data = new ArrayBuffer(256);\n        var dataView = new DataView(data);\n        var lastLength;\n        var offset = 0;\n\n        function prepareWrite(length) {\n            // If needed, expand the buffer to make room for length bytes\n            var newByteLength = data.byteLength;\n            var requiredLength = offset + length;\n            while (newByteLength < requiredLength) newByteLength <<= 1;\n            if (newByteLength !== data.byteLength) {\n                var oldDataView = dataView;\n                data = new ArrayBuffer(newByteLength);\n                dataView = new DataView(data);\n                var uint32count = (offset + 3) >> 2;\n                for (var i = 0; i < uint32count; ++i)\n                    dataView.setUint32(i << 2, oldDataView.getUint32(i << 2));\n            }\n\n            lastLength = length;\n            return dataView;\n        }\n        function commitWrite() {\n            offset += lastLength;\n        }\n        function writeFloat64(value) {\n            commitWrite(prepareWrite(8).setFloat64(offset, value));\n        }\n        function writeUint8(value) {\n            commitWrite(prepareWrite(1).setUint8(offset, value));\n        }\n        function writeUint8Array(value) {\n            var dataView = prepareWrite(value.length);\n            for (var i = 0; i < value.length; ++i)\n                dataView.setUint8(offset + i, value[i]);\n            commitWrite();\n        }\n        function writeUint16(value) {\n            commitWrite(prepareWrite(2).setUint16(offset, value));\n        }\n        function writeUint32(value) {\n            commitWrite(prepareWrite(4).setUint32(offset, value));\n        }\n        function writeUint64(value) {\n            var low = value % POW_2_32;\n            var high = (value - low) / POW_2_32;\n            var dataView = prepareWrite(8);\n            dataView.setUint32(offset, high);\n            dataView.setUint32(offset + 4, low);\n            commitWrite();\n        }\n        function writeTypeAndLength(type, length) {\n            if (length < 24) {\n                writeUint8((type << 5) | length);\n            } else if (length < 0x100) {\n                writeUint8((type << 5) | 24);\n                writeUint8(length);\n            } else if (length < 0x10000) {\n                writeUint8((type << 5) | 25);\n                writeUint16(length);\n            } else if (length < 0x100000000) {\n                writeUint8((type << 5) | 26);\n                writeUint32(length);\n            } else {\n                writeUint8((type << 5) | 27);\n                writeUint64(length);\n            }\n        }\n\n        function encodeItem(value) {\n            var i;\n\n            // First handle simple values\n            if (value === false) return writeUint8(0xf4);\n            if (value === true) return writeUint8(0xf5);\n            if (value === null) return writeUint8(0xf6);\n            if (value === undefined) return writeUint8(0xf7);\n\n            // Handle numbers and strings\n            switch (typeof value) {\n                case \"number\":\n                    // First handle integers, both positive and negative\n                    if (Math.floor(value) === value) {\n                        if (0 <= value && value <= POW_2_53) {\n                            // Positive numbers\n                            return writeTypeAndLength(MT_INTEGER, value);\n                        }\n                        if (-POW_2_53 <= value && value < 0) {\n                            // Negative numbers\n                            return writeTypeAndLength(MT_NEGINTEGER, -(value + 1));\n                        }\n                    }\n\n                    // Handle floats. For the moment, encode always as a 64-bit float\n                    // 0xfb = MT_FLOAT | 27 = IEEE 754 Double-Precision Float (64 bits follow)\n                    writeUint8(0xfb);\n                    return writeFloat64(value);\n\n                case \"string\":\n                    // Convert from Javascript utf16 strings to utf8\n                    var utf8data = [];\n                    for (i = 0; i < value.length; ++i) {\n                        var charCode = value.charCodeAt(i);\n                        if (charCode < 0x80) {\n                            utf8data.push(charCode);\n                        } else if (charCode < 0x800) {\n                            utf8data.push(0xc0 | (charCode >> 6));\n                            utf8data.push(0x80 | (charCode & 0x3f));\n                        } else if (charCode < 0xd800) {\n                            utf8data.push(0xe0 | (charCode >> 12));\n                            utf8data.push(0x80 | ((charCode >> 6) & 0x3f));\n                            utf8data.push(0x80 | (charCode & 0x3f));\n                        } else {\n                            charCode = (charCode & 0x3ff) << 10;\n                            charCode |= value.charCodeAt(++i) & 0x3ff;\n                            charCode += 0x10000;\n\n                            utf8data.push(0xf0 | (charCode >> 18));\n                            utf8data.push(0x80 | ((charCode >> 12) & 0x3f));\n                            utf8data.push(0x80 | ((charCode >> 6) & 0x3f));\n                            utf8data.push(0x80 | (charCode & 0x3f));\n                        }\n                    }\n\n                    writeTypeAndLength(MT_UTF8, utf8data.length);\n                    return writeUint8Array(utf8data);\n\n                default:\n                    // Handle Javascript objects\n                    var length;\n\n                    if (Array.isArray(value)) {\n                        // Normal arrays (except byte arrays)\n                        length = value.length;\n                        writeTypeAndLength(MT_ARRAY, length);\n                        for (i = 0; i < length; ++i) encodeItem(value[i]);\n                    } else if (value instanceof Uint8Array) {\n                        // Byte arrays\n                        writeTypeAndLength(MT_BYTES, value.length);\n                        writeUint8Array(value);\n                    } else if (value instanceof Map) {\n                        // Javascript Map, will be encoded as CBOR Map\n                        length = value.size;\n                        writeTypeAndLength(MT_MAP, length);\n                        for (let [key, val] of value) {\n                            encodeItem(key);\n                            encodeItem(val);\n                        }\n                    } else {\n                        // Assume we have a \"normal\" object, will be encoded as a CBOR Map\n                        var keys = Object.keys(value);\n                        length = keys.length;\n                        writeTypeAndLength(MT_MAP, length);\n                        for (i = 0; i < length; ++i) {\n                            var key = keys[i];\n                            encodeItem(key);\n                            encodeItem(value[key]);\n                        }\n                    }\n            }\n        }\n\n        // Encode recursively the Javascript object received\n        encodeItem(value);\n\n        // Return a new ArrayBuffer with the just the used bytes\n        return data.slice(0, offset);\n    }\n\n    static async verifyCWT(_cwt, verificationKey) {\n        // Verify the CWT object using the verificationKey\n        // The verificationKey should be a JWK object with the public key\n        // The method is async because we call async crypto methods (SubtleCrypto)\n\n        // Decode the object into an Array with 4 elements\n        let [ph, uph, payload, signature] = CWT.decode(_cwt);\n\n        // Zero-length bstr\n        let zeroBstr = new Uint8Array(0);\n\n        // Create the Sig_structure\n        const Sig_structure = [\"Signature1\", ph, zeroBstr, payload];\n\n        // And CBOR-encode it\n        let Sig_structure_encoded = CWT.encode(Sig_structure);\n\n        // Verify the signature\n        let verified = false;\n        try {\n            verified = await DGCKey.verify(\n                verificationKey,\n                signature,\n                Sig_structure_encoded\n            );\n            console.log(\"VERIFIED:\", verified);\n        } catch (error) {\n            console.log(\"ERROR:\", error);\n        }\n\n        return verified;\n    }\n\n    static decode(data, tagger, simpleValue) {\n        // data: an ArrayBuffer with the contents to decode\n\n        var dataView = new DataView(data);\n        var offset = 0;\n\n        if (typeof tagger !== \"function\")\n            tagger = function (value) {\n                return value;\n            };\n        if (typeof simpleValue !== \"function\")\n            simpleValue = function () {\n                return undefined;\n            };\n\n        function commitRead(length, value) {\n            offset += length;\n            return value;\n        }\n        function readArrayBuffer(length) {\n            return commitRead(length, new Uint8Array(data, offset, length));\n        }\n        function readFloat16() {\n            var tempArrayBuffer = new ArrayBuffer(4);\n            var tempDataView = new DataView(tempArrayBuffer);\n            var value = readUint16();\n\n            var sign = value & 0x8000;\n            var exponent = value & 0x7c00;\n            var fraction = value & 0x03ff;\n\n            if (exponent === 0x7c00) exponent = 0xff << 10;\n            else if (exponent !== 0) exponent += (127 - 15) << 10;\n            else if (fraction !== 0) return (sign ? -1 : 1) * fraction * POW_2_24;\n\n            tempDataView.setUint32(\n                0,\n                (sign << 16) | (exponent << 13) | (fraction << 13)\n            );\n            return tempDataView.getFloat32(0);\n        }\n        function readFloat32() {\n            return commitRead(4, dataView.getFloat32(offset));\n        }\n        function readFloat64() {\n            return commitRead(8, dataView.getFloat64(offset));\n        }\n        function readUint8() {\n            return commitRead(1, dataView.getUint8(offset));\n        }\n        function readUint16() {\n            return commitRead(2, dataView.getUint16(offset));\n        }\n        function readUint32() {\n            return commitRead(4, dataView.getUint32(offset));\n        }\n        function readUint64() {\n            return readUint32() * POW_2_32 + readUint32();\n        }\n        function readBreak() {\n            if (dataView.getUint8(offset) !== 0xff) return false;\n            offset += 1;\n            return true;\n        }\n        function readLength(additionalInformation) {\n            if (additionalInformation < 24) return additionalInformation;\n            if (additionalInformation === 24) return readUint8();\n            if (additionalInformation === 25) return readUint16();\n            if (additionalInformation === 26) return readUint32();\n            if (additionalInformation === 27) return readUint64();\n            if (additionalInformation === 31) return -1;\n            throw \"Invalid length encoding\";\n        }\n        function readIndefiniteStringLength(majorType) {\n            var initialByte = readUint8();\n            if (initialByte === 0xff) return -1;\n            var length = readLength(initialByte & 0x1f);\n            if (length < 0 || initialByte >> 5 !== majorType)\n                throw \"Invalid indefinite length element\";\n            return length;\n        }\n\n        function appendUtf16Data(utf16data, length) {\n            for (var i = 0; i < length; ++i) {\n                var value = readUint8();\n                if (value & 0x80) {\n                    if (value < 0xe0) {\n                        value = ((value & 0x1f) << 6) | (readUint8() & 0x3f);\n                        length -= 1;\n                    } else if (value < 0xf0) {\n                        value =\n                            ((value & 0x0f) << 12) |\n                            ((readUint8() & 0x3f) << 6) |\n                            (readUint8() & 0x3f);\n                        length -= 2;\n                    } else {\n                        value =\n                            ((value & 0x0f) << 18) |\n                            ((readUint8() & 0x3f) << 12) |\n                            ((readUint8() & 0x3f) << 6) |\n                            (readUint8() & 0x3f);\n                        length -= 3;\n                    }\n                }\n\n                if (value < 0x10000) {\n                    utf16data.push(value);\n                } else {\n                    value -= 0x10000;\n                    utf16data.push(0xd800 | (value >> 10));\n                    utf16data.push(0xdc00 | (value & 0x3ff));\n                }\n            }\n        }\n\n        function decodeItem() {\n            var initialByte = readUint8();\n            var majorType = initialByte >> 5;\n            var additionalInformation = initialByte & 0x1f;\n            var i;\n            var length;\n\n            if (majorType === MT_FLOAT) {\n                switch (additionalInformation) {\n                    case 25:\n                        return readFloat16();\n                    case 26:\n                        return readFloat32();\n                    case 27:\n                        return readFloat64();\n                }\n            }\n\n            length = readLength(additionalInformation);\n            if (length < 0 && (majorType < 2 || 6 < majorType))\n                throw \"Invalid length\";\n\n            switch (majorType) {\n                case MT_INTEGER:\n                    return length;\n                case MT_NEGINTEGER:\n                    return -1 - length;\n                case MT_BYTES:\n                    if (length < 0) {\n                        // Handle indefinite length byte array\n                        var elements = [];\n                        var fullArrayLength = 0;\n                        while ((length = readIndefiniteStringLength(majorType)) >= 0) {\n                            fullArrayLength += length;\n                            elements.push(readArrayBuffer(length));\n                        }\n                        var fullArray = new Uint8Array(fullArrayLength);\n                        var fullArrayOffset = 0;\n                        for (i = 0; i < elements.length; ++i) {\n                            fullArray.set(elements[i], fullArrayOffset);\n                            fullArrayOffset += elements[i].length;\n                        }\n                        return fullArray;\n                    }\n                    // A normal byte array\n                    return readArrayBuffer(length);\n                case MT_UTF8:\n                    var utf16data = [];\n                    if (length < 0) {\n                        // Handle indefinite length utf8 strings\n                        while ((length = readIndefiniteStringLength(majorType)) >= 0)\n                            appendUtf16Data(utf16data, length);\n                    } else {\n                        // Normal utf8 strings\n                        appendUtf16Data(utf16data, length);\n                    }\n                    return String.fromCharCode.apply(null, utf16data);\n                case MT_ARRAY:\n                    var retArray;\n                    if (length < 0) {\n                        // Handle indefinite length arrays\n                        console.log(\"INDEFINITE LENGTH ARRAY\");\n                        retArray = [];\n                        while (!readBreak()) retArray.push(decodeItem());\n                    } else {\n                        // Normal arrays\n                        retArray = new Array(length);\n                        for (i = 0; i < length; ++i) retArray[i] = decodeItem();\n                    }\n                    return retArray;\n                case MT_MAP:\n                    var retMap = new Map();\n                    for (i = 0; i < length || (length < 0 && !readBreak()); ++i) {\n                        var key = decodeItem();\n                        retMap.set(key, decodeItem());\n                    }\n                    return retMap;\n                case MT_TAG:\n                    return tagger(decodeItem(), length);\n                case 7:\n                    switch (length) {\n                        case 20:\n                            return false;\n                        case 21:\n                            return true;\n                        case 22:\n                            return null;\n                        case 23:\n                            return undefined;\n                        default:\n                            return simpleValue(length);\n                    }\n            }\n        }\n\n        var ret = decodeItem();\n        if (offset !== data.byteLength) throw \"Remaining bytes\";\n        return ret;\n    }\n\n    static async decodeCWT(data, verify) {\n        var dataView = new DataView(data);\n\n        function decodeHeaders(protectedHeaders, unprotectedHeaders) {\n            // protectedHeaders: CBOR Map, that should be decoded\n            // unprotectedHeaders: a javascript Map already decoded\n\n            // Make a copy to perform decoding\n            let newProtectedHeaders = protectedHeaders.slice();\n            let headers = CWT.decode(newProtectedHeaders.buffer);\n\n            // Check if we have the algorithm in the protected header\n            let alg_number = headers.get(CWT_ALG);\n            if (alg_number === undefined) {\n                throw \"Missing algorithm in protected headers\";\n            }\n            let alg_string = CWT_ALG_TO_JWT.get(alg_number);\n            if (alg_string === undefined) {\n                throw `Invalid algorithm specified: ${alg_number}`;\n            }\n\n            // Create a standard Javascript object\n            let headers_obj = {};\n            headers_obj[\"alg\"] = alg_string;\n\n            // Check for kid in protectedHeaders, otherwise in unprotectedHeaders.\n            // It is an error if it is not in either\n            let kid = headers.get(CWT_KID);\n            if (kid === undefined) {\n                // Check in unprotectedHeaders\n                kid = unprotectedHeaders.get(CWT_KID);\n            }\n            if (kid === undefined) {\n                throw \"Missing kid in headers\";\n            }\n\n            // Encode the kid to base64\n            let kid_str = \"\";\n            for (let i = 0; i < kid.length; i++) {\n                kid_str = kid_str + String.fromCodePoint(kid[i]);\n            }\n            kid_str = window.btoa(kid_str);\n            headers_obj[\"kid\"] = kid_str;\n\n            return headers_obj;\n        }\n\n        function decodePayloadAsObject(payload) {\n            // Decode and flatten the objects to facilitate presentation and validation\n\n            const CWT_ISS = 1;\n            const CWT_SUB = 2;\n            const CWT_AUD = 3;\n            const CWT_EXP = 4;\n            const CWT_NBF = 5;\n            const CWT_IAT = 6;\n            const CWT_CTI = 7;\n\n            const HCERT = -260;\n            const EU_DCC = 1;\n            const T_VACCINATION = \"v\";\n            const T_TEST = \"t\";\n            const T_RECOVERY = \"r\";\n\n            // Make a copy to perform decoding\n            payload = payload.slice();\n            let decodedPayload = CWT.decode(payload.buffer);\n\n            payload = {};\n            console.log(decodedPayload)\n\n            for (let [key, value] of decodedPayload) {\n                switch (key) {\n                    case CWT_ISS:\n                        payload[\"iss\"] = value;\n                        break;\n                    case CWT_SUB:\n                        payload[\"sub\"] = value;\n                        break;\n                    case CWT_AUD:\n                        payload[\"aud\"] = value;\n                        break;\n                    case CWT_EXP:\n                        payload[\"exp\"] = value;\n                        break;\n                    case CWT_NBF:\n                        payload[\"nbf\"] = value;\n                        break;\n                    case CWT_IAT:\n                        payload[\"iat\"] = value;\n                        break;\n                    case CWT_CTI:\n                        payload[\"cti\"] = value;\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n\n            // Check for HCERT in payload\n            let hcert = decodedPayload.get(HCERT);\n            if (hcert == undefined) {\n                throw \"No hcert found\";\n            }\n\n            // Check for EU COVID certificate inside HCERT\n            let euCovid = hcert.get(EU_DCC);\n            if (euCovid == undefined) {\n                throw \"No EU COVID certificate found\";\n            }\n\n            // Common fields\n            try {\n                // Schema version\n                payload[\"version\"] = euCovid.get(\"ver\");\n\n                // The patient name\n                payload[\"foreName\"] = euCovid.get(\"nam\").get(\"fn\");\n                payload[\"givenName\"] = euCovid.get(\"nam\").get(\"gn\");\n                payload[\"fullName\"] = payload[\"foreName\"] + \", \" + payload[\"givenName\"];\n\n                // Date of birth\n                payload[\"dateOfBirth\"] = euCovid.get(\"dob\");\n            } catch (error) {\n                throw `Error accessing required common fields: ${error}`;\n            }\n\n            // Access the hcert depending on its type \"v\", \"r\", \"t\"\n            let c;\n            if (euCovid.get(\"v\")) {\n                payload[\"certType\"] = T_VACCINATION;\n                c = euCovid.get(\"v\")[0];\n            } else if (euCovid.get(\"r\")) {\n                payload[\"certType\"] = T_RECOVERY;\n                c = euCovid.get(\"r\")[0];\n            } else if (euCovid.get(\"t\")) {\n                payload[\"certType\"] = T_TEST;\n                c = euCovid.get(\"t\")[0];\n            } else {\n                throw `Invalid EU COVID certificate type`;\n            }\n\n            // Process each type of certificate\n            if (payload[\"certType\"] === T_VACCINATION) {\n\n                payload[\"diseaseTargeted\"] = getFromValueSet(c.get(\"tg\"), \"disease-agent-targeted\");\n                payload[\"vaccineProphylaxis\"] = getFromValueSet(c.get(\"vp\"), \"vaccine-prophylaxis\")\n                payload[\"medicinalProduct\"] = getFromValueSet(c.get(\"mp\"), \"vaccine-medicinal-product\")\n                payload[\"manufacturer\"] = getFromValueSet(c.get(\"ma\"), \"vaccine-mah-manf\")\n\n                payload[\"doseNumber\"] = c.get(\"dn\");\n                payload[\"doseTotal\"] = c.get(\"sd\");\n                payload[\"dateVaccination\"] = c.get(\"dt\");\n\n                payload[\"country\"] = getFromValueSet(c.get(\"co\"), \"country-2-codes\")\n                payload[\"certificateIssuer\"] = c.get(\"is\");\n                payload[\"uniqueIdentifier\"] = c.get(\"ci\");\n\n            } else if (payload[\"certType\"] === T_TEST) {\n\n                payload[\"diseaseTargeted\"] = getFromValueSet(c.get(\"tg\"), \"disease-agent-targeted\");\n                payload[\"typeTest\"] = getFromValueSet(c.get(\"tt\"), \"test-type\");\n                payload[\"testName\"] = c.get(\"nm\");\n                payload[\"manufacturer\"] = getFromValueSet(c.get(\"ma\"), \"test-manf\")\n                payload[\"timeSample\"] = c.get(\"sc\");\n                payload[\"testResult\"] = getFromValueSet(c.get(\"tr\"), \"test-result\")\n                payload[\"testingCentre\"] = c.get(\"tc\");\n\n                payload[\"country\"] = getFromValueSet(c.get(\"co\"), \"country-2-codes\")\n                payload[\"certificateIssuer\"] = c.get(\"is\");\n                payload[\"uniqueIdentifier\"] = c.get(\"ci\");\n\n            } else if (payload[\"certType\"] === T_RECOVERY) {\n\n                payload[\"diseaseTargeted\"] = getFromValueSet(c.get(\"tg\"), \"disease-agent-targeted\");\n                payload[\"datePositive\"] = c.get(\"fr\");\n                payload[\"dateFrom\"] = c.get(\"df\");\n                payload[\"dateUntil\"] = c.get(\"du\");\n\n                payload[\"country\"] = getFromValueSet(c.get(\"co\"), \"country-2-codes\")\n                payload[\"certificateIssuer\"] = c.get(\"is\");\n                payload[\"uniqueIdentifier\"] = c.get(\"ci\");\n\n            }\n\n            return payload;\n        }\n\n        function decodePayload(payload) {\n            const CWT_ISS = 1;\n            const CWT_SUB = 2;\n            const CWT_AUD = 3;\n            const CWT_EXP = 4;\n            const CWT_NBF = 5;\n            const CWT_IAT = 6;\n            const CWT_CTI = 7;\n\n            // Make a copy to perform decoding\n            payload = payload.slice();\n            let decodedPayload = CWT.decode(payload.buffer);\n\n            payload = new Map();\n\n            for (let [key, value] of decodedPayload) {\n                switch (key) {\n                    case CWT_ISS:\n                        payload.set(\"iss\", value);\n                        break;\n                    case CWT_SUB:\n                        payload.set(\"sub\", value);\n                        break;\n                    case CWT_AUD:\n                        payload.set(\"aud\", value);\n                        break;\n                    case CWT_EXP:\n                        payload.set(\"exp\", value);\n                        break;\n                    case CWT_NBF:\n                        payload.set(\"nbf\", value);\n                        break;\n                    case CWT_IAT:\n                        payload.set(\"iat\", value);\n                        break;\n                    case CWT_CTI:\n                        payload.set(\"cti\", value);\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n\n            // Check for HCERT in payload\n            let hcert = decodedPayload.get(HCERT);\n            if (hcert == undefined) {\n                throw \"No hcert found\";\n            }\n\n            // Check for EU COVID certificate inside HCERT\n            let euCovid = hcert.get(1);\n            if (euCovid == undefined) {\n                throw \"No EU COVID certificate found\";\n            }\n\n            let euCovidMap = new Map();\n            euCovidMap.set(\"euCovid\", euCovid);\n\n            payload.set(\"hcert\", euCovidMap);\n\n            return payload;\n        }\n\n        // Get the initial byte to check for a COSE Tag\n        // Every COSE object should start with a TAG\n        var initialByte = dataView.getUint8(0);\n        var mt = initialByte >> 5;\n        var additionalInformation = initialByte & 0x1f;\n\n        // As per RFC-8152, the COSE object may be tagged or untagged. We accept both\n        // COSE_Sign1_Tagged = #6.18(COSE_Sign1)\n        if (mt == MT_TAG) {\n            // This is a tagged structure.\n            // Then the object should start with a COSE_Sign1 Tag\n            if (additionalInformation != COSE_Sign1) {\n                throw new Error(\n                    `Not a COSE Single signature, tag: ${additionalInformation}`\n                );\n            }\n\n            // Get rid of the tag for further processing\n            data = data.slice(1);\n        }\n\n        // Decode the object into an Array with 4 elements\n        let [protectedHeaders, unprotectedHeaders, payload, signature] =\n            CWT.decode(data);\n\n        // Decode and join the headers, protected and unprotected\n        let headers = decodeHeaders(protectedHeaders, unprotectedHeaders);\n\n        // The flag indicating result of verification (if done)\n        let verified = false;\n\n        if (verify) {\n            // Get the kid from the header (can be in protected and in unprotected)\n            let kid = headers[\"kid\"];\n\n            let k = await getTrustedKey(kid)\n            if (k !== undefined) {\n\n                if (k.list === \"EU_PRO\") {\n\n                    console.log(k)    \n                    // Verify the CWT with the verification key\n                    verified = await CWT.verifyCWT(data, k.publicKey);\n    \n                } else if (k.list === \"UK_PRO\") {\n    \n                    // Create the native public key\n                    let verificationKey = await DGCKey.fromSPKI(k.publicKey)\n    \n                    // Verify the CWT with the verification key\n                    verified = await CWT.verifyCWT(data, verificationKey);\n    \n                } else if (k.list === \"EU_PREPRODUCTION\") {\n    \n                    // Signal that the list is in PRE\n                    verified = \"PRE\"\n                }\n    \n            }\n\n        }\n\n        // Decode the payload\n        payload = decodePayloadAsObject(payload);\n        console.log(\"Payload:\", payload);\n\n        return [headers, payload, signature, verified];\n    }\n\n    // Decodes a HC1 QR and optionally verifies the signature\n    static async decodeHC1QR(data, verify = false) {\n        // data: string obtained for example from a QR scan\n\n        // Check if the string is a HC1 certificate\n        if (!data.startsWith(\"HC1:\")) {\n            throw new Error(\"Certificate does not start with 'HC1:'\");\n        }\n\n        // Remove the leading 4 chars: \"HC1:\"\n        data = data.slice(4);\n\n        // First decode from Base45\n        let cvdCompressed = decodeB45(data);\n        cvdCompressed = new Uint8Array(cvdCompressed);\n\n        // cvdCompressed is the ZLIB-compressed CVD in CWT(COSE/CBOR) format\n        let coseCVD = inflate(cvdCompressed);\n\n        // coseCVD is the CWT-encoded CVD\n        let [headers, payload, signature, verified] = await CWT.decodeCWT(\n            coseCVD.buffer,\n            verify\n        );\n\n        return [headers, payload, signature, verified];\n    }\n\n    static displayMB(ib) {\n        var majorType = ib >> 5;\n        var additionalInformation = ib & 0x1f;\n        var i;\n        var length = additionalInformation;\n\n        if (majorType === MT_FLOAT) {\n            console.log(\"FLOAT\");\n        }\n\n        switch (majorType) {\n            case MT_INTEGER:\n                console.log(`Integer ${length}`);\n                return;\n            case MT_NEGINTEGER:\n                console.log(`Negative Integer ${-1 - length}`);\n                return;\n            case MT_BYTES:\n                console.log(`Bstr ${length}`);\n                return `Bstr ${length}`;\n            case MT_UTF8:\n                console.log(`String ${length}`);\n                return;\n            case MT_ARRAY:\n                console.log(`Array ${length}`);\n                return;\n            case MT_MAP:\n                console.log(`Map ${length}`);\n                return;\n            case MT_TAG:\n                console.log(`Tag ${length}`);\n                return;\n            case 7:\n                switch (length) {\n                    case 20:\n                        console.log(`FALSE`);\n                        return;\n                    case 21:\n                        console.log(`TRUE`);\n                        return;\n                    case 22:\n                        console.log(`NULL`);\n                        return;\n                    case 23:\n                        console.log(`UNDEFINED`);\n                        return;\n                    default:\n                        console.log(`Simple Value`);\n                        return;\n                }\n        }\n    }\n\n}\n","const CERT_OK = true\r\nconst INV_CERT_TYPE = \"Invalid certificate type\"\r\n\r\n\r\nexport function verifyHcert(hcert) {\r\n\r\n    // The credential\r\n    let payload = hcert[1];\r\n\r\n    // Check for revoked certs\r\n    if (\r\n        payload[\"uniqueIdentifier\"] == \"URN:UVCI:01:FR:T5DWTJYS4ZR8#4\" ||\r\n        payload[\"uniqueIdentifier\"] == \"URN:UVCI:01:PL:1/AF2AA5873FAF45DFA826B8A01237BDC4\" ||\r\n        payload[\"uniqueIdentifier\"] == \"URN:UVCI:01:PL:1/2A992C33754A4D379A7F61089485BB75\" ||\r\n        payload[\"uniqueIdentifier\"] == \"URN:UVCI:01DE/IZ14482A/2BYU1VFE8L2JDQJHY1QVSK#E\" ||\r\n        payload[\"uniqueIdentifier\"] == \"URN:UVCI:01:FR:W7V2BE46QSBJ#L\" ||\r\n        payload[\"uniqueIdentifier\"] == \"URN:UVCI:01DE/A80013335/TCXSI5Q08B0DIJGMIZJDF#T\"      \r\n        ) {\r\n        return INV_CERT_TYPE\r\n    }\r\n\r\n    if (payload[\"certType\"] == \"v\") {\r\n        return verifyVaccinationCert(hcert)\r\n    } else if (payload[\"certType\"] == \"t\") {\r\n        return verifyTestCert(hcert)\r\n    } else if (payload[\"certType\"] == \"r\") {\r\n        return verifyRecoveryCert(hcert)\r\n    }\r\n\r\n    //It is an error if the credential is not of one of those types\r\n    return INV_CERT_TYPE\r\n\r\n}\r\n\r\nfunction verifyVaccinationCert(hcert) {\r\n    // The credential\r\n    let payload = hcert[1];\r\n\r\n    let doseNumber = payload[\"doseNumber\"]\r\n    let doseTotal = payload[\"doseTotal\"]\r\n\r\n    if(doseNumber > 1 && doseNumber == doseTotal) {\r\n        return CERT_OK\r\n    }\r\n\r\n    if (doseNumber < doseTotal) {\r\n        return \"Vaccination not completed.\"\r\n    }\r\n\r\n    let dateVaccination = Date.parse(payload[\"dateVaccination\"])\r\n    let timeValidFrom = dateVaccination + 14*24*60*60*1000\r\n\r\n\r\n    let timeNow = Date.now()\r\n\r\n    if (timeNow < timeValidFrom) {\r\n        return \"Certificate is not yet valid as vaccination is too recent.\"\r\n    }\r\n\r\n    return CERT_OK\r\n}\r\n\r\nfunction verifyTestCert(hcert) {\r\n    // The credential\r\n    let payload = hcert[1];\r\n\r\n    // The time when the sample was taken\r\n    let timeSample = Date.parse(payload[\"timeSample\"])\r\n    let timeNow = Date.now()\r\n\r\n    // The test is valid for 72 hours\r\n    let validityTime = 72*60*60*1000\r\n\r\n    // But only 48 hours if is a TAR\r\n    if (payload[\"typeTest\"] === \"LP217198-3\") {\r\n        validityTime = 48*60*60*1000      \r\n    }\r\n\r\n    // The time until the test is valid\r\n    let timeUntil = timeSample + validityTime\r\n\r\n    if (timeNow > timeUntil) {\r\n        return \"Certificate is expired.\"\r\n    }\r\n\r\n    return CERT_OK\r\n}\r\n\r\nfunction verifyRecoveryCert(hcert) {\r\n    // The credential\r\n    let payload = hcert[1];\r\n\r\n    let dateUntil = Date.parse(payload[\"dateUntil\"])\r\n\r\n    // The test is also valid the day that expires\r\n    let validityTime = 24*60*60*1000\r\n\r\n    //The time until the test is valid\r\n    let timeUntil = dateUntil + validityTime\r\n\r\n    let dateNow = Date.now()\r\n    if (dateNow > timeUntil) {\r\n        return \"Certificate is expired.\"\r\n    }\r\n\r\n    return CERT_OK\r\n}\r\n"],"names":["TIME","Reflect","global","OctetString","BitString","Set","asn1.Null","asn1.fromBER","asn1.Integer","asn1.Enumerated","asn1.BitString","asn1.ObjectIdentifier","asn1.Boolean","asn1.OctetString","asn1.Utf8String","asn1.BmpString","asn1.UniversalString","asn1.NumericString","asn1.PrintableString","asn1.TeletexString","asn1.VideotexString","asn1.IA5String","asn1.GraphicString","asn1.VisibleString","asn1.GeneralString","asn1.CharacterString","asn1.UTCTime","asn1.GeneralizedTime","AsnBitString","AsnOctetString","asn1.Any","asn1.Set","asn1.Sequence","asn1.Repeated","asn1.Constructed","asn1.Primitive","asn1.Choice","defaultConverter","converters.defaultConverter","asn1.compareSchema","asn1.BaseBlock","asn1js.fromBER","this","ip.fromByteArray","ip.parse","__decorate","Name","OtherName","KeyUsageFlags","Attribute","Extension","Version","create","oid.id_md2","oid.id_md5","oid.id_sha1","oid.id_sha224","oid.id_sha256","oid.id_sha384","oid.id_sha512","oid.id_sha512_224","oid.id_sha512_256","oid.id_mgf1","oid.id_pSpecified","oid.id_rsaEncryption","oid.id_md2WithRSAEncryption","oid.id_md5WithRSAEncryption","oid.id_sha1WithRSAEncryption","oid.id_sha512_224WithRSAEncryption","oid.id_sha512_256WithRSAEncryption","oid.id_sha384WithRSAEncryption","oid.id_sha512WithRSAEncryption","Lifecycle","EncryptedPrivateKeyInfo","Attributes_1","Attributes","x509.DirectoryString","cms.ContentInfo","pfx.PFX","pkcs8.EncryptedPrivateKeyInfo","x509.Time","cms.SignerInfo","x509.Extensions","cms.Attribute","x509.AlgorithmIdentifier","oid.id_ecdsaWithSHA1","oid.id_ecdsaWithSHA224","oid.id_ecdsaWithSHA256","oid.id_ecdsaWithSHA384","oid.id_ecdsaWithSHA512","container","escape","asn1X509.AuthorityKeyIdentifier","asn1X509.id_ce_authorityKeyIdentifier","asn1X509.OtherName","asn1X509.SubjectAlternativeName","asn1X509.GeneralName","asn1X509.id_ce_subjectAltName","asn1X509.DirectoryString","asn1X509.CertificatePolicies","asn1X509.PolicyInformation","asn1X509.id_ce_certificatePolicies","Attribute$1","asnPkcs9.ChallengePassword","asnPkcs9.id_pkcs9_at_challengePassword","asn1X509.Extensions","asnPkcs9.id_pkcs9_at_extensionRequest","asn1Rsa.id_sha1WithRSAEncryption","asn1Rsa.id_sha256WithRSAEncryption","asn1Rsa.id_sha384WithRSAEncryption","asn1Rsa.id_sha512WithRSAEncryption","asn1Rsa.id_rsaEncryption","asn1Ecc.ecdsaWithSHA1","asn1Ecc.ecdsaWithSHA256","asn1Ecc.ecdsaWithSHA384","asn1Ecc.ecdsaWithSHA512","asn1Ecc.id_secp256r1","asn1Ecc.id_secp384r1","asn1Ecc.id_secp521r1","asn1Ecc.id_ecPublicKey","asn1Ecc.ECParameters","asn1Ecc.id_ecdsaWithSHA1","asn1Ecc.id_ecdsaWithSHA256","asn1Ecc.id_ecdsaWithSHA384","asn1Ecc.id_ecdsaWithSHA512","asn1X509.id_ce_basicConstraints","asn1X509.id_ce_extKeyUsage","asn1X509.id_ce_keyUsage","asn1X509.id_ce_subjectKeyIdentifier","x509.X509Certificate","inflate"],"mappings":"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"}