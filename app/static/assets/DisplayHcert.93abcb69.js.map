{"version":3,"file":"DisplayHcert.93abcb69.js","sources":["../../src/pages/DisplayHcert.js"],"sourcesContent":["import { log } from '../log'\r\nimport { AbstractPage, register } from '../components/AbstractPage'\r\nimport { CWT } from \"../components/cwt\"\r\nimport { verifyHcert } from '../components/verifications'\r\n\r\n// The images for result of verifications\r\nimport ok_image from \"../img/ok.png\"\r\nimport error_image from \"../img/error.png\"\r\nimport warning_image from \"../img/warning.png\"\r\n\r\nvar testQR = \"HC1:NCFOXN%TSMAHN-H%WKPL9/BP:BCP6M-AH0VC1ROT$SD PO%I$TQ3.P:.IO6T+6NNO4*J8OX4W$C2VLWLIVO5ON1: B.T1RTOF:P ZPEX9Z0QTU1B+HON1MU9%*JJR3Z+INTICZUKSR*LA/CJ6IAXPMHQ1*P1TU19UEOQ1OH6CN5ILGBUHSHA.W2YJ2/E2VZ1W6A8C9IEP2SAC/9B95ZE9Q$95:UENEUW66469366JDO$9KZ56DE/.QC$Q3J62:6LZ6O59++9-G9+E93ZMV70- CC8C90JK.A+ C/8DXEDKG0CGJ5AL5:4/60O3P:XRUVI/E2$4JY/K0:S6QNROF GVV378.GTGV /KH-KVLV5KN+*431TF68UXD-I69NTCW4HKLT*QGTA W7G 7N31BUUSS1SC5X%06W0H*OVIUH$AA2A PK7+O8ZEBPJT8IDBSQ7O574J98%.BWUN*7K:JVR%DAQOU/CZ$9N$LN0G$X8G+MJNRFNB4CRDMA 203F2.3\"\r\n\r\nvar debugging = false\r\n\r\nregister(\"DisplayHcert\", class DisplayHcert extends AbstractPage {\r\n\r\n    constructor(id) {\r\n        super(id)\r\n    }\r\n\r\n    async enter(qrContent) {\r\n        let hcert\r\n        let verified = false\r\n        let thehtml = \"\"\r\n\r\n        if (debugging) {\r\n            qrContent = testQR\r\n        }\r\n\r\n        // Decode credential verifying it at the same time\r\n        try {\r\n            hcert = await CWT.decodeHC1QR(qrContent, true);\r\n            verified = hcert[3]\r\n        } catch (error) {\r\n            log.error(\"Error verifying credential\", error)\r\n            this.render(this.renderGeneralError(error))\r\n            return;\r\n        }\r\n\r\n        // Build the verification structure\r\n        let verification = {\r\n            result: \"OK\",\r\n            message: T(\"The certificate is valid.\")\r\n        }\r\n\r\n        if (verified === false) {\r\n            verification.result = \"ERROR\"\r\n            verification.message = T(\"Signature validation failed. The certificate is not valid.\")\r\n        } else if (verified === \"PRE\") {\r\n            verification.result = \"WARNING\"\r\n            verification.message = T(\"$warningmsg\")\r\n        }\r\n\r\n        // If basic verification was OK, apply additional verifications\r\n        console.log(verification)\r\n        if ((verified === true) || (verified === \"PRE\")) {\r\n            console.log(\"Additional verifications\")\r\n            verified = verifyHcert(hcert)\r\n            console.log(verified)\r\n            if (verified != true) {\r\n                verification.result = \"ERROR\",\r\n                verification.message = T(verified)\r\n            }\r\n        }\r\n\r\n        console.log(verification)\r\n\r\n        try {\r\n            // Render the credential\r\n            thehtml = this.renderDetail(hcert, verification);\r\n        } catch (error) {\r\n            log.error(\"Error rendering credential\", error)\r\n            this.render(this.renderGeneralError(error))\r\n            return;\r\n        }\r\n\r\n        let fullPage = this.html`\r\n        <div class=\"text-center\">\r\n\r\n            ${thehtml}\r\n\r\n            <button class=\"btn-primary\" @click=${()=> this.gotoPage(\"ScanQrPage\")}>\r\n            ${T(\"Verify another\")}</button>\r\n\r\n        </div>\r\n        `\r\n        this.render(fullPage)\r\n\r\n    }\r\n\r\n    renderGeneralError(error) {\r\n        return this.html`\r\n            <div id=\"hcertFailed\" class=\"w3-panel bg-fail\">\r\n                <h3>Failed!</h3>\r\n                <p>The credential has an invalid format.</p>\r\n            </div>\r\n            `\r\n    }\r\n\r\n    renderDetail(cred, verification) {\r\n        // The credential\r\n        let payload = cred[1];\r\n\r\n        // Parameters in case of correct validation\r\n        let title = \"Validated\"\r\n        let image = ok_image\r\n        let color = \"bg-success\"\r\n\r\n        // Modify the parameters if WARNING or ERROR\r\n        if (verification.result === \"WARNING\") {\r\n            title = \"Warning\"\r\n            image = warning_image\r\n            color = \"bg-warning\"\r\n        } else if (verification.result === \"ERROR\") {\r\n            title = \"Not Validated\"\r\n            image = error_image\r\n            color = \"bg-error\"\r\n        }\r\n\r\n        let thehtml = this.html`\r\n\r\n        <div class=${`py-3 mb-3 shadow-lg ${color}`}>\r\n            <div class=\"flex justify-center\">\r\n                <img class=\"mr-2\" src=${image}  alt=\"\" />\r\n                <h3 class=\"my-auto text-xl font-bold ml-2\">${T(title)}</h3>                \r\n            </div>\r\n            <p class=\"text-lg\">${verification.message}</p>\r\n        </div>\r\n\r\n        <div class=\"mb-5\">\r\n            <div class=\"subsection\">\r\n                <div class=\"etiqueta\">${T(\"Surname and forename\")}</div>\r\n                <div class=\"text-xl font-semibold\">${payload.fullName}</div>\r\n            </div>\r\n            <div class=\"subsection\">\r\n                <div class=\"etiqueta\">${T(\"Date of birth\")}</div>\r\n                <div class=\"text-xl font-semibold\">${payload.dateOfBirth}</div>\r\n            </div>\r\n        </div>\r\n           \r\n        `;\r\n\r\n\r\n        return thehtml;\r\n    }\r\n\r\n})\r\n"],"names":[],"mappings":"uOAcA,EAAS,eAAgB,aAA2B,EAAa,CAE7D,YAAY,EAAI,CACZ,MAAM,QAGJ,OAAM,EAAW,CACnB,GAAI,GACA,EAAW,GACX,EAAU,GAOd,GAAI,CACA,EAAQ,KAAM,GAAI,YAAY,EAAW,IACzC,EAAW,EAAM,SACZ,EAAP,CACE,EAAI,MAAM,6BAA8B,GACxC,KAAK,OAAO,KAAK,mBAAmB,IACpC,OAIJ,GAAI,GAAe,CACf,OAAQ,KACR,QAAS,EAAE,8BAGf,AAAI,IAAa,GACb,GAAa,OAAS,QACtB,EAAa,QAAU,EAAE,+DAClB,IAAa,OACpB,GAAa,OAAS,UACtB,EAAa,QAAU,EAAE,gBAI7B,QAAQ,IAAI,GACP,KAAa,IAAU,IAAa,QACrC,SAAQ,IAAI,4BACZ,EAAW,EAAY,GACvB,QAAQ,IAAI,GACR,GAAY,IACZ,GAAa,OAAS,QACtB,EAAa,QAAU,EAAE,KAIjC,QAAQ,IAAI,GAEZ,GAAI,CAEA,EAAU,KAAK,aAAa,EAAO,SAC9B,EAAP,CACE,EAAI,MAAM,6BAA8B,GACxC,KAAK,OAAO,KAAK,mBAAmB,IACpC,OAGJ,GAAI,GAAW,KAAK;AAAA;AAAA;AAAA,cAGd;AAAA;AAAA,iDAEmC,IAAK,KAAK,SAAS;AAAA,cACtD,EAAE;AAAA;AAAA;AAAA,UAIR,KAAK,OAAO,GAIhB,mBAAmB,EAAO,CACtB,MAAO,MAAK;AAAA;AAAA;AAAA;AAAA;AAAA,cAQhB,aAAa,EAAM,EAAc,CAE7B,GAAI,GAAU,EAAK,GAGf,EAAQ,YACR,EAAQ,EACR,EAAQ,aAGZ,MAAI,GAAa,SAAW,UACxB,GAAQ,UACR,EAAQ,EACR,EAAQ,cACD,EAAa,SAAW,SAC/B,GAAQ,gBACR,EAAQ,EACR,EAAQ,YAGE,KAAK;AAAA;AAAA,qBAEN,uBAAuB;AAAA;AAAA,wCAEJ;AAAA,6DACqB,EAAE;AAAA;AAAA,iCAE9B,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA,wCAKN,EAAE;AAAA,qDACW,EAAQ;AAAA;AAAA;AAAA,wCAGrB,EAAE;AAAA,qDACW,EAAQ;AAAA;AAAA;AAAA;"}