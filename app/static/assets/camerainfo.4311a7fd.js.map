{"version":3,"file":"camerainfo.4311a7fd.js","sources":["../../src/components/camerainfo.js"],"sourcesContent":["// **************************************\n// Functions supporting the camera\n// **************************************\n\n// Get the OS of the device\nexport function getPlatformOS() {\n    const userAgent = window.navigator.userAgent;\n    let os = null;\n\n    const isIOS = (/iPad|iPhone|iPod/.test(userAgent) ||\n        (/Mac|Mac OS|MacIntel/gi.test(userAgent) && (navigator.maxTouchPoints > 1 || \"ontouchend\" in document))) && !window.MSStream;\n\n    if (/Macintosh|Mac|Mac OS|MacIntel|MacPPC|Mac68K/gi.test(userAgent)) {\n        os = 'Mac OS';\n    } else if (isIOS) {\n        os = 'iOS';\n    } else if (/'Win32|Win64|Windows|Windows NT|WinCE/gi.test(userAgent)) {\n        os = 'Windows';\n    } else if (/Android/gi.test(userAgent)) {\n        os = 'Android';\n    } else if (/Linux/gi.test(userAgent)) {\n        os = 'Linux';\n    }\n\n    return os;\n}\nconsole.log(getPlatformOS())\n\nexport async function getVideoDevices() {\n    // Returns an array of video devices or undefined if none\n\n    // Get the video devices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n        console.log(\"enumerateDevices() not supported.\");\n        return undefined;\n    }\n\n    let allDevices = await navigator.mediaDevices.enumerateDevices()\n    let videoDevices = allDevices.filter((device) => {\n        return device.kind === \"videoinput\";\n    });\n    console.log(videoDevices)\n    if (videoDevices.length == 0) {\n        return undefined;\n    }\n\n    // Check if they have labels. If they don't, it means we have to request permission from the user\n    let allLabelsEmpty = videoDevices.every((device) => { return device.label === \"\" })\n    if (!allLabelsEmpty) {\n        return videoDevices;\n    }\n\n    let stream;\n    try {\n        // Request a stream to force the system to ask the user\n        stream = await navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: false,\n        });\n        // Try again to get the devices with label and id information\n        allDevices = await navigator.mediaDevices.enumerateDevices()\n        videoDevices = allDevices.filter((device) => {\n            return device.kind === \"videoinput\";\n        });\n    }\n    catch {\n        // Ignored\n        console.log(\"Probably the user did not authorise request\")\n    } finally {\n        // Release resources if the previous call was successful\n        if (stream !== undefined) {\n            stream.getVideoTracks().forEach((track) => {\n                track.stop();\n            });\n        }\n    }\n    return videoDevices\n}\n\nexport async function getPreferredVideoDevice() {\n\n    // Prepare undefined response\n    let undefinedVideoDevice = {\n        defaultPreferredCamera: undefined,\n        videoDevices: []\n    }\n\n    // Get all video devices, front and back\n    let videoDevices = await getVideoDevices()\n    if (!videoDevices) {\n        return undefinedVideoDevice;\n    }\n\n    let defaultPreferredCamera;\n\n    // Select specific device only for Android devices\n    if (\"Android\" == getPlatformOS()) {\n        // The main recommended back camera is the last one in the list\n        defaultPreferredCamera = videoDevices[videoDevices.length - 1]\n    }\n\n    return {\n        defaultPreferredCamera: defaultPreferredCamera,\n        videoDevices: videoDevices\n    }\n\n}\n"],"names":[],"mappings":"AAKO,YAAyB,CAC5B,KAAM,GAAY,OAAO,UAAU,UACnC,GAAI,GAAK,KAET,KAAM,GAAS,oBAAmB,KAAK,IAClC,wBAAwB,KAAK,IAAe,WAAU,eAAiB,GAAK,cAAgB,aAAe,CAAC,OAAO,SAExH,MAAI,gDAAgD,KAAK,GACrD,EAAK,SACF,AAAI,EACP,EAAK,MACF,AAAI,0CAA0C,KAAK,GACtD,EAAK,UACF,AAAI,YAAY,KAAK,GACxB,EAAK,UACE,UAAU,KAAK,IACtB,GAAK,SAGF,EAEX,QAAQ,IAAI,KAEL,kBAAiC,CAIpC,GAAI,CAAC,UAAU,cAAgB,CAAC,UAAU,aAAa,iBAAkB,CACrE,QAAQ,IAAI,qCACZ,OAGJ,GAAI,GAAa,KAAM,WAAU,aAAa,mBAC1C,EAAe,EAAW,OAAO,AAAC,GAC3B,EAAO,OAAS,cAG3B,GADA,QAAQ,IAAI,GACR,EAAa,QAAU,EACvB,OAKJ,GAAI,CADiB,EAAa,MAAM,AAAC,GAAoB,EAAO,QAAU,IAE1E,MAAO,GAGX,GAAI,GACJ,GAAI,CAEA,EAAS,KAAM,WAAU,aAAa,aAAa,CAC/C,MAAO,GACP,MAAO,KAGX,EAAa,KAAM,WAAU,aAAa,mBAC1C,EAAe,EAAW,OAAO,AAAC,GACvB,EAAO,OAAS,mBAG/B,CAEI,QAAQ,IAAI,uDAGZ,AAAI,IAAW,QACX,EAAO,iBAAiB,QAAQ,AAAC,GAAU,CACvC,EAAM,SAIlB,MAAO,GAGJ,kBAAyC,CAG5C,GAAI,GAAuB,CACvB,uBAAwB,OACxB,aAAc,IAId,EAAe,KAAM,KACzB,GAAI,CAAC,EACD,MAAO,GAGX,GAAI,GAGJ,MAAI,AAAa,MAAb,WAEA,GAAyB,EAAa,EAAa,OAAS,IAGzD,CACH,uBAAwB,EACxB,aAAc"}